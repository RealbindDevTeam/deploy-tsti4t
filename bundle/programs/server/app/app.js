var require = meteorInstall({"both":{"methods":{"establishment":{"QR":{"codeGenerator.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/QR/codeGenerator.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const node_1 = require("../../../models/establishment/node");
const Collections = require("typescript-collections");
class CodeGenerator {
    constructor(_pStringToConvert) {
        this.diccionary = new Collections.Dictionary();
        this.sortList = new Array();
        this.map = new Collections.Dictionary();
        this.finalTree = new node_1.Node();
        this.binaryCode = '';
        this.significativeBits = 0;
        this.stringToConvert = _pStringToConvert;
        this.finalTree.createNodeExtend(0, 256, null, null);
        this.finalBytes = [];
    }
    generateCode() {
        this.buildFrecuencyTable();
        this.sortData();
        this.createTree();
        this.codeTree();
        this.createQRCode();
    }
    buildFrecuencyTable() {
        let _lNode;
        let _lChars = 0;
        for (let _i = 0; _i < this.stringToConvert.length; _i++) {
            _lChars = this.stringToConvert.charCodeAt(_i);
            _lNode = this.diccionary.getValue('' + _lChars);
            if (_lNode == null) {
                let _lAux = new node_1.Node();
                _lAux.createNode(_lChars);
                this.diccionary.setValue(_lChars + '', _lAux);
            }
            else {
                _lNode.setFrecuency(_lNode.getFrecuency() + 1);
            }
        }
    }
    sortData() {
        let _lNode;
        let _lFrecuency;
        let _lSortFrecuency = [];
        let _lSortTMP = new Array();
        let _AuxCont = 0;
        for (let _i = 0; _i <= 255; _i++) {
            _lSortTMP.splice(0, 0, 0);
        }
        this.diccionary.values().forEach((res) => {
            _lSortFrecuency.splice(_AuxCont, 0, res.getFrecuency());
            _lSortTMP.splice(res.getChar(), 1, res.getFrecuency());
            _AuxCont++;
        });
        _lSortFrecuency.sort();
        _lSortFrecuency.forEach((nod) => {
            let tmp = _lSortTMP.indexOf(nod);
            _lSortTMP.splice(tmp, 1, 0);
            let tmpNode = new node_1.Node();
            tmpNode.createNodeExtend(nod, tmp, null, null);
            this.sortList.push(tmpNode);
        });
    }
    createNewNode(_pNodeLeft, _pNodeRight) {
        let _lNewNode = new node_1.Node();
        let _lFrecuencyNewNode;
        _lFrecuencyNewNode = (_pNodeLeft.getFrecuency() + _pNodeRight.getFrecuency());
        _lNewNode.createNodeExtend(0, 256, null, null);
        _lNewNode.setFrecuency(_lFrecuencyNewNode);
        _lNewNode.setNodeLeft(_pNodeLeft);
        _lNewNode.setNodeRight(_pNodeRight);
        return _lNewNode;
    }
    insertNewNode(_pNewNode, _pSortList) {
        let _lFirstNode = new node_1.Node();
        let _lSecondNode = new node_1.Node();
        _lFirstNode.createNodeExtend(0, 256, null, null);
        _lSecondNode.createNodeExtend(0, 256, null, null);
        _pSortList.splice(0, 0, _pNewNode);
        for (let _i = 0; _i < _pSortList.length - 1; _i++) {
            _lFirstNode = _pSortList[_i];
            _lSecondNode = _pSortList[(_i + 1)];
            if (_lFirstNode.getFrecuency() >= _lSecondNode.getFrecuency()) {
                _pSortList.splice((_i + 1), 1, _lFirstNode);
                _pSortList.splice(_i, 1, _lSecondNode);
            }
        }
        return _pSortList;
    }
    createTree() {
        let _lTempNodeLeft = new node_1.Node();
        let _lTempNodeRight = new node_1.Node();
        let _lTempNewNode = new node_1.Node();
        _lTempNodeLeft.createNodeExtend(0, 256, null, null);
        _lTempNodeRight.createNodeExtend(0, 256, null, null);
        _lTempNewNode.createNodeExtend(0, 256, null, null);
        while (this.sortList.length != 1) {
            _lTempNodeLeft = this.sortList.shift();
            _lTempNodeRight = this.sortList.shift();
            _lTempNewNode = this.createNewNode(_lTempNodeLeft, _lTempNodeRight);
            this.sortList = this.insertNewNode(_lTempNewNode, this.sortList);
        }
        this.finalTree = this.sortList.shift();
        this.preOrder(this.finalTree, "");
    }
    preOrder(_pNode, _pVal) {
        if (_pNode.getNodeLeft() == null && _pNode.getNodeRight() == null) {
            this.map.setValue(_pNode.getChar() + '', _pVal);
            return;
        }
        this.preOrder(_pNode.getNodeLeft(), _pVal.concat("1"));
        this.preOrder(_pNode.getNodeRight(), _pVal.concat("0"));
    }
    codeTree() {
        let _lCodeBytes = '';
        let _lChars = 0;
        let _lEnd = false;
        let _lByte;
        let _lCode = '';
        for (let _i = 0; _i < this.stringToConvert.length; _i++) {
            _lChars = this.stringToConvert.charCodeAt(_i);
            this.binaryCode += this.map.getValue(_lChars + '');
        }
        _lCode = this.binaryCode;
        while (!_lEnd) {
            let BytesInfo = { bits: '', finalByte: 0, originalByte: 0 };
            for (let _j = 0; _j < 8; _j++) {
                _lCodeBytes += _lCode.charAt(_j);
            }
            _lByte = parseInt(_lCodeBytes, 2);
            BytesInfo.originalByte = _lByte;
            while (true) {
                _lByte = this.byteNivelator(_lByte);
                if (_lByte >= 65 && _lByte <= 90) {
                    break;
                }
            }
            BytesInfo.finalByte = _lByte;
            BytesInfo.bits = _lCodeBytes;
            this.finalBytes.push(BytesInfo);
            _lCodeBytes = '';
            _lCode = _lCode.substring(8, _lCode.length);
            if (_lCode.length == 0) {
                _lEnd = true;
                break;
            }
            if (_lCode.length < 8) {
                _lCode = this.addSignificativeBits(_lCode);
            }
        }
    }
    addSignificativeBits(_code) {
        while (_code.length < 8) {
            _code += "0";
            this.significativeBits += 1;
        }
        return _code;
    }
    byteNivelator(_pByte) {
        let _lNumberConvert = 0;
        if (_pByte < 65) {
            _lNumberConvert = _pByte + 10;
        }
        else if (_pByte > 90) {
            _lNumberConvert = _pByte - 10;
        }
        else {
            _lNumberConvert = _pByte;
        }
        return _lNumberConvert;
    }
    createQRCode() {
        let _lQRCode = '';
        this.finalBytes.forEach((byte) => {
            _lQRCode += String.fromCharCode(byte.finalByte);
        });
        _lQRCode += (this.finalBytes[0].finalByte + '');
        _lQRCode += (this.finalBytes[this.finalBytes.length - 1].finalByte + '');
        this.QRCode = _lQRCode;
    }
    getFinalBytes() {
        return this.finalBytes;
    }
    getSignificativeBits() {
        return this.significativeBits;
    }
    getQRCode() {
        return this.QRCode;
    }
}
exports.CodeGenerator = CodeGenerator;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"waiter-queue":{"queues.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/waiter-queue/queues.methods.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const vsivsi_job_collection_1 = require("meteor/vsivsi:job-collection");
const user_detail_collection_1 = require("../../../collections/auth/user-detail.collection");
const waiter_call_detail_collection_1 = require("../../../collections/establishment/waiter-call-detail.collection");
const establishment_collection_1 = require("../../../collections/establishment/establishment.collection");
const queue_collection_1 = require("../../../collections/general/queue.collection");
if (meteor_1.Meteor.isServer) {
    /**
     * This function validate if exist queues and creates the instances correspondly
     */
    meteor_1.Meteor.startup(function () {
        let queues = queue_collection_1.Queues.findOne({});
        if (queues) {
            queues.queues.forEach(element => {
                meteor_1.Meteor.call('initProcessJobs', element);
            });
        }
    });
    meteor_1.Meteor.methods({
        /**
         * This Meteor Method allow find the queue corresponding to current establishment of the user
         * @param { any } _data
         */
        findQueueByEstablishment: function (_data) {
            let establishment = establishment_collection_1.Establishments.findOne({ _id: _data.establishments });
            let queue = establishment.queue;
            let valEmpty = Number.isInteger(establishment.queue.length);
            let queueName = "";
            if (valEmpty && establishment.queue.length > 0) {
                let position = meteor_1.Meteor.call('getRandomInt', 0, establishment.queue.length - 1);
                if (establishment.queue[position] !== "") {
                    queueName = "queue" + position;
                    meteor_1.Meteor.call("queueValidate", queueName, _data, (err, result) => {
                        if (err) {
                            throw new Error("Error on Queue validating");
                        }
                        else {
                            meteor_1.Meteor.call('waiterCall', queueName, false, _data);
                        }
                    });
                }
                else {
                    throw new Error("Error in call the waiter/waitress");
                }
            }
            else {
                throw new Error("Error in call the waiter/waitress");
            }
        },
        /**
         * This Meteor Method validate if exist queue in the collection
         * @param { string } _queue
         */
        queueValidate: function (_queue, _data) {
            let queueNew = { name: _queue };
            ;
            let queues = queue_collection_1.Queues.findOne({});
            if (queues) {
                let doc = queue_collection_1.Queues.findOne({ queues: { $elemMatch: { name: _queue } } });
                if (!doc) {
                    queue_collection_1.Queues.update({ _id: queues._id }, {
                        $addToSet: { queues: queueNew }
                    });
                    meteor_1.Meteor.call('initProcessJobs', queueNew, _data);
                }
            }
            else {
                queue_collection_1.Queues.insert({ queues: [queueNew] });
                meteor_1.Meteor.call('initProcessJobs', queueNew, _data);
            }
        },
        /**
         * This Meteor Method startup the queue and process jobs
         * @param { string } _queue
         */
        initProcessJobs(element, _data) {
            let queueCollection = vsivsi_job_collection_1.JobCollection(element.name);
            queueCollection.startJobServer();
            var workers = queueCollection.processJobs('waiterCall', {
                concurrency: 1,
                payload: 1,
                pollInterval: 1 * 1000,
                prefetch: 1
            }, function (job, callback) {
                let queueName = element.name;
                let data_detail;
                let usr_id_enabled;
                data_detail = waiter_call_detail_collection_1.WaiterCallDetails.findOne({ job_id: job._doc._id });
                if (data_detail === undefined || data_detail === null) {
                    meteor_1.Meteor.call('waiterCall', queueName, false, _data);
                    data_detail = waiter_call_detail_collection_1.WaiterCallDetails.findOne({ job_id: job._doc._id });
                }
                let establishment = establishment_collection_1.Establishments.findOne({ _id: data_detail.establishment_id });
                usr_id_enabled = meteor_1.Meteor.call('validateWaiterEnabled', data_detail.establishment_id, establishment.max_jobs, data_detail.table_id);
                if (usr_id_enabled === undefined || usr_id_enabled === null) {
                    meteor_1.Meteor.call('jobRemove', queueName, job._doc._id, data_detail);
                    usr_id_enabled = meteor_1.Meteor.call('validateWaiterEnabled', data_detail.establishment_id, establishment.max_jobs, data_detail.table_id);
                }
                job.done();
                var toDate = new Date().toLocaleDateString();
                establishment_collection_1.EstablishmentTurns.update({ establishment_id: data_detail.establishment_id, creation_date: { $gte: new Date(toDate) } }, {
                    $set: { last_waiter_id: usr_id_enabled.user_id, modification_user: 'SYSTEM', modification_date: new Date(), }
                });
                //Waiter call detail update in completed state
                waiter_call_detail_collection_1.WaiterCallDetails.update({ job_id: job._doc._id }, {
                    $set: { "waiter_id": usr_id_enabled.user_id, "status": "completed" }
                });
                //Waiter update of current jobs and state
                let usr_jobs = usr_id_enabled.jobs + 1;
                if (usr_jobs < establishment.max_jobs) {
                    user_detail_collection_1.UserDetails.update({ user_id: usr_id_enabled.user_id }, { $set: { "jobs": usr_jobs } });
                }
                else if (usr_jobs == establishment.max_jobs) {
                    user_detail_collection_1.UserDetails.update({ user_id: usr_id_enabled.user_id }, { $set: { "enabled": false, "jobs": usr_jobs } });
                }
                callback();
            });
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"waiter-queue.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/waiter-queue/waiter-queue.methods.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const vsivsi_job_collection_1 = require("meteor/vsivsi:job-collection");
const user_detail_collection_1 = require("../../../collections/auth/user-detail.collection");
const waiter_call_detail_collection_1 = require("../../../collections/establishment/waiter-call-detail.collection");
const establishment_collection_1 = require("../../../collections/establishment/establishment.collection");
const order_collection_1 = require("../../../collections/establishment/order.collection");
const table_collection_1 = require("../../../collections/establishment/table.collection");
const reward_point_collection_1 = require("../../../collections/establishment/reward-point.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This Meteor Method add a job in the Waiter call queue
         * @param {boolean} _priorityHigh
         * @param {any} _data
         */
        waiterCall: function (_queue, _priorityHigh, _data) {
            let priority = 'normal';
            let delay = 0;
            var waiterCallDetail;
            var job = new vsivsi_job_collection_1.Job(_queue, 'waiterCall', { data: '' });
            job.priority(priority)
                .delay(delay)
                .save();
            if (_priorityHigh) {
                priority = 'critical', delay = 10000;
                waiter_call_detail_collection_1.WaiterCallDetails.update({ job_id: _data.job_id }, { $set: { waiter_id: _data.waiter_id, job_id: job._doc._id } });
                waiterCallDetail = _data.waiter_call_id;
            }
            else {
                let newTurn = meteor_1.Meteor.call('turnCreate', _data);
                waiterCallDetail = waiter_call_detail_collection_1.WaiterCallDetails.collection.insert({
                    establishment_id: _data.establishments,
                    table_id: _data.tables,
                    user_id: _data.user,
                    turn: newTurn,
                    status: _data.status,
                    creation_user: _data.user,
                    creation_date: new Date(),
                    queue: _queue,
                    job_id: job._doc._id,
                    type: _data.type,
                    order_id: _data.order_id,
                });
            }
            return;
        },
        /**
         * Job remove
         * @param pQueueName
         * @param pJobId
         * @param pDataDetail
         * @param pEnabled
         */
        jobRemove(pQueueName, pJobId, pDataDetail) {
            vsivsi_job_collection_1.Job.getJob(pQueueName, pJobId, function (err, job) {
                if (job) {
                    job.cancel();
                    job.remove(function (err, result) {
                        if (result) {
                            if (pDataDetail !== null && pDataDetail !== undefined) {
                                var data = {
                                    job_id: job._doc._id,
                                    establishments: pDataDetail.establishment_id,
                                    tables: pDataDetail.table_id,
                                    user: pDataDetail.user_id,
                                    waiter_id: pDataDetail.waiter_id,
                                    status: 'waiting'
                                };
                                meteor_1.Meteor.call('waiterCall', pQueueName, true, data);
                            }
                        }
                    });
                }
            });
        },
        /**
         * This Meteor method allow get new turn to the client
         * @param { any } _data
         */
        turnCreate(_data) {
            var newTurn = 1;
            var toDate = new Date().toLocaleDateString();
            var establishmentTurn = establishment_collection_1.EstablishmentTurns.findOne({
                establishment_id: _data.establishments,
                creation_date: { $gte: new Date(toDate) }
            });
            if (establishmentTurn) {
                newTurn = establishmentTurn.turn + 1;
                establishment_collection_1.EstablishmentTurns.update({ _id: establishmentTurn._id }, {
                    $set: { turn: newTurn, modification_user: 'SYSTEM', modification_date: new Date(), }
                });
            }
            else {
                establishment_collection_1.EstablishmentTurns.insert({
                    establishment_id: _data.establishments,
                    turn: newTurn,
                    last_waiter_id: "",
                    creation_user: 'SYSTEM',
                    creation_date: new Date(),
                });
            }
            return newTurn;
        },
        /**
         * This Meteor Method allow delete a job in the Waiter call queue
         * @param {string} _waiter_call_detail_id
         * @param {string} _waiter_id
         */
        closeCall: function (_jobDetail, _waiter_id) {
            vsivsi_job_collection_1.Job.getJob(_jobDetail.queue, _jobDetail.job_id, function (err, job) {
                job.remove(function (err, result) {
                    waiter_call_detail_collection_1.WaiterCallDetails.update({ _id: _jobDetail._id }, {
                        $set: { "status": "closed", modification_user: _waiter_id, modification_date: new Date() }
                    });
                    let waiterDetail = waiter_call_detail_collection_1.WaiterCallDetails.findOne({ job_id: _jobDetail.job_id });
                    if (waiterDetail.type === "CUSTOMER_ORDER" && waiterDetail.order_id !== null) {
                        let _lOrder = order_collection_1.Orders.findOne({ _id: waiterDetail.order_id });
                        let _lConsumerDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _lOrder.creation_user });
                        if (_lOrder.total_reward_points > 0) {
                            let _establishment = establishment_collection_1.Establishments.findOne({ _id: _lOrder.establishment_id });
                            let _lExpireDate = new Date();
                            reward_point_collection_1.RewardPoints.insert({
                                id_user: _lOrder.creation_user,
                                establishment_id: _lOrder.establishment_id,
                                points: _lOrder.total_reward_points,
                                days_to_expire: Number.parseInt(_establishment.points_validity.toString()),
                                gain_date: new Date(),
                                expire_date: new Date(_lExpireDate.setDate(_lExpireDate.getDate() + Number.parseInt(_establishment.points_validity.toString()))),
                                is_active: true
                            });
                            if (_lConsumerDetail.reward_points === null || _lConsumerDetail.reward_points === undefined) {
                                let _lUserReward = { index: 1, establishment_id: _lOrder.establishment_id, points: _lOrder.total_reward_points };
                                user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id }, { $set: { reward_points: [_lUserReward] } });
                            }
                            else {
                                let _lPoints = _lConsumerDetail.reward_points.filter(p => p.establishment_id === _lOrder.establishment_id)[0];
                                if (_lPoints) {
                                    let _newPoints = Number.parseInt(_lPoints.points.toString()) + Number.parseInt(_lOrder.total_reward_points.toString());
                                    user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id, 'reward_points.establishment_id': _lOrder.establishment_id }, { $set: { 'reward_points.$.points': (_newPoints) } });
                                }
                                else {
                                    let _lUserRewardPoints = [];
                                    let _newIndex;
                                    _lUserRewardPoints = _lConsumerDetail.reward_points;
                                    _lUserRewardPoints.sort(function (a, b) { return b.index - a.index; });
                                    _newIndex = (_lUserRewardPoints[0].index) + 1;
                                    let _lUserReward = { index: _newIndex, establishment_id: _lOrder.establishment_id, points: _lOrder.total_reward_points };
                                    user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id }, { $push: { reward_points: _lUserReward } });
                                }
                            }
                        }
                        _lOrder.items.forEach((it) => {
                            if (it.is_reward) {
                                let _lRedeemedPoints = it.redeemed_points;
                                let _lValidatePoints = true;
                                reward_point_collection_1.RewardPoints.collection.find({ id_user: _lOrder.creation_user, establishment_id: _lOrder.establishment_id }, { sort: { gain_date: -1 } }).fetch().forEach((pnt) => {
                                    if (_lValidatePoints) {
                                        if (pnt.difference !== null && pnt.difference !== undefined && pnt.difference !== 0) {
                                            let aux = pnt.points - pnt.difference;
                                            _lRedeemedPoints = _lRedeemedPoints - aux;
                                            reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { points: pnt.difference, difference: 0 } });
                                        }
                                        else if (!pnt.is_active) {
                                            _lRedeemedPoints = _lRedeemedPoints - pnt.points;
                                            if (_lRedeemedPoints === 0) {
                                                _lValidatePoints = false;
                                            }
                                        }
                                    }
                                });
                            }
                        });
                        order_collection_1.Orders.update({ _id: waiterDetail.order_id }, {
                            $set: {
                                status: 'ORDER_STATUS.RECEIVED',
                                modification_user: _waiter_id,
                                modification_date: new Date()
                            }
                        });
                        meteor_1.Meteor.call('generateOrderHistory', _lOrder, waiterDetail.waiter_id);
                    }
                    let usr_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _waiter_id });
                    if (usr_detail) {
                        let jobs = usr_detail.jobs - 1;
                        user_detail_collection_1.UserDetails.update({ _id: usr_detail._id }, { $set: { "enabled": true, "jobs": jobs } });
                    }
                });
            });
            return;
        },
        cancelOrderCall: function (_jobDetail, _waiter_id) {
            vsivsi_job_collection_1.Job.getJob(_jobDetail.queue, _jobDetail.job_id, function (err, job) {
                job.remove(function (err, result) {
                    waiter_call_detail_collection_1.WaiterCallDetails.update({ _id: _jobDetail._id }, {
                        $set: { "status": "closed", modification_user: _waiter_id, modification_date: new Date() }
                    });
                    let waiterDetail = waiter_call_detail_collection_1.WaiterCallDetails.findOne({ job_id: _jobDetail.job_id });
                    if (waiterDetail.type === "CUSTOMER_ORDER" && waiterDetail.order_id !== null) {
                        let _lOrder = order_collection_1.Orders.findOne({ _id: waiterDetail.order_id });
                        if (_lOrder.status === 'ORDER_STATUS.CONFIRMED') {
                            _lOrder.items.forEach((it) => {
                                if (it.is_reward) {
                                    let _lConsumerDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _lOrder.creation_user });
                                    let _lPoints = _lConsumerDetail.reward_points.filter(p => p.establishment_id === _lOrder.establishment_id)[0];
                                    user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id, 'reward_points.establishment_id': _lOrder.establishment_id }, { $set: { 'reward_points.$.points': (Number.parseInt(_lPoints.points.toString()) + Number.parseInt(it.redeemed_points.toString())) } });
                                    let _lRedeemedPoints = it.redeemed_points;
                                    let _lValidatePoints = true;
                                    reward_point_collection_1.RewardPoints.collection.find({ id_user: _lOrder.creation_user, establishment_id: _lOrder.establishment_id }, { sort: { gain_date: -1 } }).fetch().forEach((pnt) => {
                                        if (_lValidatePoints) {
                                            if (pnt.difference !== null && pnt.difference !== undefined && pnt.difference !== 0) {
                                                let aux = pnt.points - pnt.difference;
                                                _lRedeemedPoints = _lRedeemedPoints - aux;
                                                reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { difference: 0 } });
                                            }
                                            else if (!pnt.is_active) {
                                                _lRedeemedPoints = _lRedeemedPoints - pnt.points;
                                                reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { is_active: true } });
                                                if (_lRedeemedPoints === 0) {
                                                    _lValidatePoints = false;
                                                }
                                            }
                                        }
                                    });
                                }
                            });
                            order_collection_1.Orders.update({ _id: _lOrder._id }, {
                                $set: {
                                    status: 'ORDER_STATUS.CANCELED', modification_user: _jobDetail.waiter_id,
                                    modification_date: new Date()
                                }
                            });
                        }
                    }
                    let usr_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _waiter_id });
                    if (usr_detail) {
                        let jobs = usr_detail.jobs - 1;
                        user_detail_collection_1.UserDetails.update({ _id: usr_detail._id }, { $set: { "enabled": true, "jobs": jobs } });
                    }
                });
            });
            return;
        },
        closeWaiterCall: function (_jobDetail) {
            vsivsi_job_collection_1.Job.getJob(_jobDetail.queue, _jobDetail.job_id, function (err, job) {
                job.remove(function (err, result) {
                    waiter_call_detail_collection_1.WaiterCallDetails.update({ _id: _jobDetail._id }, {
                        $set: { "status": "closed", modification_user: _jobDetail.waiter_id, modification_date: new Date() }
                    });
                    let usr_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _jobDetail.waiter_id });
                    if (usr_detail) {
                        let jobs = usr_detail.jobs - 1;
                        user_detail_collection_1.UserDetails.update({ _id: usr_detail._id }, { $set: { "enabled": true, "jobs": jobs } });
                    }
                });
            });
            return;
        },
        /**
         * This meteor method allow cancel call to waiter by the user
         * @param {WaiterCallDetail} _jobDetail
         * @param {string} _userId
         */
        cancelCallClient: function (_jobDetail, _userId) {
            vsivsi_job_collection_1.Job.getJob(_jobDetail.queue, _jobDetail.job_id, function (err, job) {
                if (job._doc.status !== 'completed') {
                    job.cancel();
                }
                job.remove(function (err, result) {
                    waiter_call_detail_collection_1.WaiterCallDetails.update({ job_id: _jobDetail.job_id }, {
                        $set: { "status": "cancel", modification_user: _userId, modification_date: new Date() }
                    });
                    let waiterDetail = waiter_call_detail_collection_1.WaiterCallDetails.findOne({ job_id: _jobDetail.job_id });
                    if (waiterDetail.type === "CALL_OF_CUSTOMER" && waiterDetail.waiter_id) {
                        let usr_detail = user_detail_collection_1.UserDetails.findOne({ user_id: waiterDetail.waiter_id });
                        if (usr_detail) {
                            let jobs = usr_detail.jobs - 1;
                            user_detail_collection_1.UserDetails.update({ user_id: waiterDetail.waiter_id }, { $set: { "enabled": true, "jobs": jobs } });
                        }
                    }
                });
            });
        },
        /**
         * This function validate waiters enabled
         * @param {string} _establishment
         * @param {string} _maxJobs
         */
        validateWaiterEnabled(_establishment, _maxJobs, _tableId) {
            let usr = null;
            let position = 0;
            let _randomLast;
            let table = table_collection_1.Tables.findOne({ _id: _tableId });
            let waiterEnableds = user_detail_collection_1.UserDetails.collection.find({
                establishment_work: _establishment,
                is_active: true,
                enabled: true,
                role_id: "200",
                jobs: { $lt: _maxJobs },
                table_assignment_init: { $lte: table._number },
                table_assignment_end: { $gte: table._number }
            }).fetch();
            if (waiterEnableds.length > 0) {
                let establishmentTurn = establishment_collection_1.EstablishmentTurns.findOne({ "establishment_id": _establishment }, {
                    sort: { "creation_date": -1 }
                });
                if (establishmentTurn) {
                    _randomLast = establishmentTurn.last_waiter_id;
                }
                do {
                    if (waiterEnableds.length > 0) {
                        position = meteor_1.Meteor.call('getRandomInt', 0, waiterEnableds.length - 1);
                    }
                    usr = waiterEnableds[position];
                } while (usr.user_id == _randomLast && waiterEnableds.length > 1);
                return usr;
            }
            else {
                return null;
            }
        },
        /**
        * This function return a random number
        */
        getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"establishment.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/establishment.methods.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const codeGenerator_1 = require("/both/methods/establishment/QR/codeGenerator");
const table_collection_1 = require("/both/collections/establishment/table.collection");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
const establishment_collection_1 = require("/both/collections/establishment/establishment.collection");
const order_collection_1 = require("/both/collections/establishment/order.collection");
const parameter_collection_1 = require("/both/collections/general/parameter.collection");
const user_penalty_collection_1 = require("/both/collections/auth/user-penalty.collection");
const reward_point_collection_1 = require("/both/collections/establishment/reward-point.collection");
/**
 * This function create random code with 9 length to establishments
 */
function createEstablishmentCode() {
    let _lText = '';
    let _lPossible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    for (let _i = 0; _i < 9; _i++) {
        _lText += _lPossible.charAt(Math.floor(Math.random() * _lPossible.length));
    }
    return _lText;
}
exports.createEstablishmentCode = createEstablishmentCode;
/**
 * This function create random code with 5 length to establishments
 */
function createTableCode() {
    let _lText = '';
    let _lPossible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    for (let _i = 0; _i < 5; _i++) {
        _lText += _lPossible.charAt(Math.floor(Math.random() * _lPossible.length));
    }
    return _lText;
}
exports.createTableCode = createTableCode;
/**
 * This function create QR Codes to establishments
 * @param {string} _pStringToCode
 * @return {Table} generateQRCode
 */
function generateQRCode(_pStringToCode) {
    let _lCodeGenerator = new codeGenerator_1.CodeGenerator(_pStringToCode);
    _lCodeGenerator.generateCode();
    return _lCodeGenerator;
}
exports.generateQRCode = generateQRCode;
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This Meteor Method return establishment object with QR Code condition
         * @param {string} _qrcode
         * @param {string} _userId
         */
        getEstablishmentByQRCode: function (_qrcode, _userId) {
            let _table = table_collection_1.Tables.collection.findOne({ QR_code: _qrcode });
            let _establishment;
            let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
            if (_lUserDetail.penalties.length === 0) {
                let _lUserPenalty = user_penalty_collection_1.UserPenalties.findOne({ user_id: _userId, is_active: true });
                if (_lUserPenalty) {
                    let _lUserPenaltyDays = parameter_collection_1.Parameters.findOne({ name: 'penalty_days' });
                    let _lCurrentDate = new Date();
                    let _lDateToCompare = new Date(_lUserPenalty.last_date.setDate((_lUserPenalty.last_date.getDate() + Number(_lUserPenaltyDays.value))));
                    if (_lDateToCompare.getTime() >= _lCurrentDate.getTime()) {
                        let _lDay = _lDateToCompare.getDate();
                        let _lMonth = _lDateToCompare.getMonth() + 1;
                        let _lYear = _lDateToCompare.getFullYear();
                        throw new meteor_1.Meteor.Error('500', _lDay + '/' + _lMonth + '/' + _lYear);
                    }
                    else {
                        user_penalty_collection_1.UserPenalties.update({ _id: _lUserPenalty._id }, { $set: { is_active: false } });
                    }
                }
            }
            if (_table) {
                _establishment = establishment_collection_1.Establishments.collection.findOne({ _id: _table.establishment_id });
                if (_establishment) {
                    if (_establishment.isActive) {
                        if (_table.status === 'BUSY') {
                            user_detail_collection_1.UserDetails.collection.update({ user_id: _userId }, {
                                $set: {
                                    current_table: _table._id,
                                    current_establishment: _table.establishment_id
                                }
                            });
                            table_collection_1.Tables.collection.update({ QR_code: _qrcode }, { $set: { amount_people: (_table.amount_people + 1) } });
                        }
                        else if (_table.status === 'FREE') {
                            table_collection_1.Tables.collection.update({ QR_code: _qrcode }, { $set: { status: 'BUSY', amount_people: 1 } });
                            user_detail_collection_1.UserDetails.collection.update({ user_id: _userId }, {
                                $set: {
                                    current_table: _table._id,
                                    current_establishment: _table.establishment_id
                                }
                            });
                        }
                        return _establishment;
                    }
                    else {
                        throw new meteor_1.Meteor.Error('200');
                    }
                }
                else {
                    throw new meteor_1.Meteor.Error('300');
                }
            }
            else {
                throw new meteor_1.Meteor.Error('400');
            }
        },
        /**
         * This method return establishment if exist o null if not
         */
        getCurrentEstablishmentByUser: function (_establishmentId) {
            let establishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
            if (typeof establishment != "undefined" || establishment != null) {
                return establishment;
            }
            else {
                return null;
            }
        },
        validateEstablishmentIsActive: function () {
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            if (userDetail) {
                let establishment = establishment_collection_1.Establishments.collection.findOne({ _id: userDetail.establishment_work });
                return establishment.isActive;
            }
            else {
                return false;
            }
        },
        establishmentExit: function (_pUserId, _pCurrentEstablishment, _pCurrentTable) {
            let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _pUserId });
            let _lTableAmountPeople = table_collection_1.Tables.findOne({ _id: _pCurrentTable }).amount_people;
            let _tablesUpdated = table_collection_1.Tables.collection.update({ _id: _pCurrentTable }, { $set: { amount_people: _lTableAmountPeople - 1 } });
            if (_tablesUpdated === 1) {
                let _lTableAux = table_collection_1.Tables.findOne({ _id: _pCurrentTable });
                if (_lTableAux.amount_people === 0 && _lTableAux.status === 'BUSY') {
                    table_collection_1.Tables.update({ _id: _pCurrentTable }, { $set: { status: 'FREE' } });
                }
            }
            let _usersUpdated = user_detail_collection_1.UserDetails.collection.update({ _id: _lUserDetail._id }, { $set: { current_establishment: '', current_table: '' } });
            if (_usersUpdated === 0) {
                throw new meteor_1.Meteor.Error('300');
            }
        },
        establishmentExitWithSelectedOrders: function (_pUserId, _pCurrentEstablishment, _pCurrentTable) {
            let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _pUserId });
            order_collection_1.Orders.find({
                creation_user: _pUserId, establishment_id: _pCurrentEstablishment, tableId: _pCurrentTable,
                status: 'ORDER_STATUS.SELECTING'
            }).fetch().forEach((order) => {
                order.items.forEach((it) => {
                    if (it.is_reward) {
                        let _lConsumerDetail = user_detail_collection_1.UserDetails.findOne({ user_id: order.creation_user });
                        let _lPoints = _lConsumerDetail.reward_points.filter(p => p.establishment_id === order.establishment_id)[0];
                        let _lNewPoints = Number.parseInt(_lPoints.points.toString()) + Number.parseInt(it.redeemed_points.toString());
                        user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id }, { $pull: { reward_points: { establishment_id: order.establishment_id } } });
                        user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id }, { $push: { reward_points: { index: _lPoints.index, establishment_id: order.establishment_id, points: _lNewPoints } } });
                        let _lRedeemedPoints = it.redeemed_points;
                        let _lValidatePoints = true;
                        reward_point_collection_1.RewardPoints.collection.find({ id_user: meteor_1.Meteor.userId(), establishment_id: order.establishment_id }, { sort: { gain_date: -1 } }).fetch().forEach((pnt) => {
                            if (_lValidatePoints) {
                                if (pnt.difference !== null && pnt.difference !== undefined && pnt.difference !== 0) {
                                    let aux = pnt.points - pnt.difference;
                                    _lRedeemedPoints = _lRedeemedPoints - aux;
                                    reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { difference: 0 } });
                                }
                                else if (!pnt.is_active) {
                                    _lRedeemedPoints = _lRedeemedPoints - pnt.points;
                                    reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { is_active: true } });
                                    if (_lRedeemedPoints === 0) {
                                        _lValidatePoints = false;
                                    }
                                }
                            }
                        });
                    }
                });
                order_collection_1.Orders.update({ _id: order._id }, { $set: { status: 'ORDER_STATUS.CANCELED', modification_date: new Date() } });
            });
            let _lTableAmountPeople = table_collection_1.Tables.findOne({ _id: _pCurrentTable }).amount_people;
            let _tablesUpdated = table_collection_1.Tables.collection.update({ _id: _pCurrentTable }, { $set: { amount_people: _lTableAmountPeople - 1 } });
            if (_tablesUpdated === 1) {
                let _lTableAux = table_collection_1.Tables.findOne({ _id: _pCurrentTable });
                if (_lTableAux.amount_people === 0 && _lTableAux.status === 'BUSY') {
                    table_collection_1.Tables.update({ _id: _pCurrentTable }, { $set: { status: 'FREE' } });
                }
            }
            let _usersUpdated = user_detail_collection_1.UserDetails.collection.update({ _id: _lUserDetail._id }, { $set: { current_establishment: '', current_table: '' } });
            if (_usersUpdated === 0) {
                throw new meteor_1.Meteor.Error('300');
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order-history.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/order-history.methods.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const order_history_collection_1 = require("../../collections/establishment/order-history.collection");
const establishment_collection_1 = require("../../collections/establishment/establishment.collection");
const table_collection_1 = require("../../collections/establishment/table.collection");
const item_collection_1 = require("../../collections/menu/item.collection");
const option_value_collection_1 = require("../../collections/menu/option-value.collection");
const addition_collection_1 = require("../../collections/menu/addition.collection");
const currency_collection_1 = require("../../collections/general/currency.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This function allow generate order history
         * @param { Order } _pOrder
         */
        generateOrderHistory: function (_pOrder, _pWaiterId) {
            let lEstablishment = establishment_collection_1.Establishments.findOne({ _id: _pOrder.establishment_id });
            let lTable = table_collection_1.Tables.findOne({ _id: _pOrder.tableId });
            let lCurrency = currency_collection_1.Currencies.findOne({ _id: lEstablishment.currencyId });
            let lInvoiceItems = [];
            let lInvoiceAdditions = [];
            _pOrder.items.forEach((item) => {
                let lItem = item_collection_1.Items.findOne({ _id: item.itemId });
                let lOptions = [];
                let lAdditions = [];
                if (item.options.length > 0) {
                    item.options.forEach((opt) => {
                        let _itemOption = lItem.options.find(item_opt => item_opt.option_id === opt.option_id);
                        if (_itemOption) {
                            let _itemValue = _itemOption.values.find(item_val => item_val.option_value_id === opt.value_id);
                            if (_itemValue) {
                                let _option_value = option_value_collection_1.OptionValues.findOne({ _id: opt.value_id });
                                if (_itemValue.have_price) {
                                    lOptions.push({
                                        option_value_name: _option_value.name,
                                        price: _itemValue.price
                                    });
                                }
                                else {
                                    lOptions.push({
                                        option_value_name: _option_value.name,
                                    });
                                }
                            }
                        }
                    });
                }
                if (item.additions.length > 0) {
                    item.additions.forEach((ad) => {
                        let lad = addition_collection_1.Additions.findOne({ _id: ad });
                        lAdditions.push({
                            addition_name: lad.name,
                            price: lad.establishments.filter(a => a.establishment_id === _pOrder.establishment_id)[0].price
                        });
                    });
                }
                let lInvoiceItem;
                if (item.is_reward) {
                    lInvoiceItem = {
                        item_name: lItem.name,
                        quantity: item.quantity,
                        option_values: lOptions,
                        additions: lAdditions,
                        price: lItem.establishments.filter(i => i.establishment_id === _pOrder.establishment_id)[0].price,
                        is_reward: item.is_reward,
                        redeemed_points: item.redeemed_points
                    };
                }
                else {
                    lInvoiceItem = {
                        item_name: lItem.name,
                        quantity: item.quantity,
                        option_values: lOptions,
                        additions: lAdditions,
                        price: lItem.establishments.filter(i => i.establishment_id === _pOrder.establishment_id)[0].price,
                        is_reward: item.is_reward
                    };
                }
                lInvoiceItems.push(lInvoiceItem);
            });
            _pOrder.additions.forEach((addition) => {
                let lAddition = addition_collection_1.Additions.findOne({ _id: addition.additionId });
                let lAddAddition = {
                    addition_name: lAddition.name,
                    quantity: addition.quantity,
                    price: lAddition.establishments.filter(a => a.establishment_id === _pOrder.establishment_id)[0].price,
                };
                lInvoiceAdditions.push(lAddAddition);
            });
            if (_pOrder.total_reward_points) {
                order_history_collection_1.OrderHistories.insert({
                    creation_user: meteor_1.Meteor.userId(),
                    creation_date: new Date(),
                    establishment_id: _pOrder.establishment_id,
                    establishment_name: lEstablishment.name,
                    establishment_address: lEstablishment.address,
                    establishment_phone: lEstablishment.phone,
                    country_id: lEstablishment.countryId,
                    order_code: _pOrder.code,
                    table_number: lTable._number,
                    total_order: _pOrder.totalPayment,
                    customer_id: _pOrder.creation_user,
                    currency: lCurrency.code,
                    items: lInvoiceItems,
                    additions: lInvoiceAdditions,
                    total_reward_points: _pOrder.total_reward_points
                });
            }
            else {
                order_history_collection_1.OrderHistories.insert({
                    creation_user: _pWaiterId,
                    creation_date: new Date(),
                    establishment_id: _pOrder.establishment_id,
                    establishment_name: lEstablishment.name,
                    establishment_address: lEstablishment.address,
                    establishment_phone: lEstablishment.phone,
                    country_id: lEstablishment.countryId,
                    order_code: _pOrder.code,
                    table_number: lTable._number,
                    total_order: _pOrder.totalPayment,
                    customer_id: _pOrder.creation_user,
                    currency: lCurrency.code,
                    items: lInvoiceItems,
                    additions: lInvoiceAdditions
                });
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/order.methods.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const table_collection_1 = require("/both/collections/establishment/table.collection");
const order_collection_1 = require("/both/collections/establishment/order.collection");
const establishment_collection_1 = require("/both/collections/establishment/establishment.collection");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
const reward_point_collection_1 = require("/both/collections/establishment/reward-point.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This Meteor Method add item in user order
         * @param {OrderItem} _itemToInsert
         * @param {string} _tableQRCode
         */
        AddItemToOrder: function (_itemToInsert, _establishmentId, _tableQRCode, _finalPrice, _finalPoints) {
            let _lTable = table_collection_1.Tables.collection.findOne({ QR_code: _tableQRCode });
            let _lEstablishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
            let _lOrder = order_collection_1.Orders.collection.findOne({
                creation_user: meteor_1.Meteor.userId(),
                establishment_id: _establishmentId,
                tableId: _lTable._id,
                status: 'ORDER_STATUS.SELECTING'
            });
            if (_lOrder) {
                let _lTotalPaymentAux = Number.parseInt(_lOrder.totalPayment.toString()) + Number.parseInt(_itemToInsert.paymentItem.toString());
                let _lTotalPointsAux = Number.parseInt(_lOrder.total_reward_points.toString()) + Number.parseInt(_itemToInsert.reward_points.toString());
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, { $push: { items: _itemToInsert } });
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, {
                    $set: {
                        modification_user: meteor_1.Meteor.userId(),
                        modification_date: new Date(),
                        totalPayment: _lTotalPaymentAux,
                        orderItemCount: _lOrder.orderItemCount + 1,
                        total_reward_points: _lTotalPointsAux
                    }
                });
            }
            else {
                let _orderCount = _lEstablishment.orderNumberCount + 1;
                _lEstablishment.orderNumberCount = _orderCount;
                establishment_collection_1.Establishments.update({ _id: _lEstablishment._id }, _lEstablishment);
                order_collection_1.Orders.insert({
                    creation_user: meteor_1.Meteor.userId(),
                    creation_date: new Date(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    code: _orderCount,
                    status: 'ORDER_STATUS.SELECTING',
                    items: [_itemToInsert],
                    totalPayment: _finalPrice,
                    orderItemCount: 1,
                    additions: [],
                    total_reward_points: _finalPoints
                });
            }
            if (_itemToInsert.is_reward) {
                let _lConsumerDetail = user_detail_collection_1.UserDetails.findOne({ user_id: meteor_1.Meteor.userId() });
                let _lPoints = _lConsumerDetail.reward_points.filter(p => p.establishment_id === _lEstablishment._id)[0];
                user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id, 'reward_points.establishment_id': _lEstablishment._id }, { $set: { 'reward_points.$.points': (_lPoints.points - _itemToInsert.redeemed_points) } });
                let _points = _itemToInsert.redeemed_points;
                let _validate_points = true;
                reward_point_collection_1.RewardPoints.collection.find({ id_user: meteor_1.Meteor.userId(), establishment_id: _lEstablishment._id, is_active: true }, { sort: { gain_date: 1 } }).fetch().forEach((pnt) => {
                    if (_validate_points) {
                        _points = _points - pnt.points;
                        if (_points >= 0) {
                            reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { is_active: false } });
                            _validate_points = true;
                        }
                        else {
                            reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { difference: (_points * -1) } });
                            _validate_points = false;
                        }
                    }
                });
            }
        },
        AddItemToOrder2: function (_itemToInsert, _establishmentId, _idTable, _finalPrice, _finalPoints) {
            let _lTable = table_collection_1.Tables.collection.findOne({ _id: _idTable });
            let _lEstablishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
            let _lOrder = order_collection_1.Orders.collection.findOne({
                creation_user: meteor_1.Meteor.userId(),
                establishment_id: _establishmentId,
                tableId: _lTable._id,
                status: 'ORDER_STATUS.SELECTING'
            });
            if (_lOrder) {
                let _lTotalPaymentAux = Number.parseInt(_lOrder.totalPayment.toString()) + Number.parseInt(_itemToInsert.paymentItem.toString());
                let _lTotalPointsAux = Number.parseInt(_lOrder.total_reward_points.toString()) + Number.parseInt(_itemToInsert.reward_points.toString());
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, { $push: { items: _itemToInsert } });
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, {
                    $set: {
                        modification_user: meteor_1.Meteor.userId(),
                        modification_date: new Date(),
                        totalPayment: _lTotalPaymentAux,
                        orderItemCount: _lOrder.orderItemCount + 1,
                        total_reward_points: _lTotalPointsAux
                    }
                });
            }
            else {
                let _orderCount = _lEstablishment.orderNumberCount + 1;
                _lEstablishment.orderNumberCount = _orderCount;
                establishment_collection_1.Establishments.update({ _id: _lEstablishment._id }, _lEstablishment);
                order_collection_1.Orders.insert({
                    creation_user: meteor_1.Meteor.userId(),
                    creation_date: new Date(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    code: _orderCount,
                    status: 'ORDER_STATUS.SELECTING',
                    items: [_itemToInsert],
                    totalPayment: _finalPrice,
                    orderItemCount: 1,
                    additions: [],
                    total_reward_points: _finalPoints
                });
            }
            if (_itemToInsert.is_reward) {
                let _lConsumerDetail = user_detail_collection_1.UserDetails.findOne({ user_id: meteor_1.Meteor.userId() });
                let _lPoints = _lConsumerDetail.reward_points.filter(p => p.establishment_id === _lEstablishment._id)[0];
                user_detail_collection_1.UserDetails.update({ _id: _lConsumerDetail._id, 'reward_points.establishment_id': _lEstablishment._id }, { $set: { 'reward_points.$.points': (_lPoints.points - _itemToInsert.redeemed_points) } });
                let _points = _itemToInsert.redeemed_points;
                let _validate_points = true;
                reward_point_collection_1.RewardPoints.collection.find({ id_user: meteor_1.Meteor.userId(), establishment_id: _lEstablishment._id, is_active: true }, { sort: { gain_date: 1 } }).fetch().forEach((pnt) => {
                    if (_validate_points) {
                        _points = _points - pnt.points;
                        if (_points >= 0) {
                            reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { is_active: false } });
                            _validate_points = true;
                        }
                        else {
                            reward_point_collection_1.RewardPoints.update({ _id: pnt._id }, { $set: { difference: (_points * -1) } });
                            _validate_points = false;
                        }
                    }
                });
            }
        },
        /**
         * This Meteor Method Add Additions to order
         * @param {OrderAddition[]} _additionsToInsert
         * @param {string} _establishmentId
         * @param {string} _tableQRCode
         * @param {number} _AdditionsPrice
         */
        AddAdditionsToOrder: function (_additionsToInsert, _establishmentId, _tableQRCode, _AdditionsPrice) {
            let _lTable = table_collection_1.Tables.collection.findOne({ QR_code: _tableQRCode });
            let _lOrder = order_collection_1.Orders.collection.findOne({
                creation_user: meteor_1.Meteor.userId(),
                establishment_id: _establishmentId,
                tableId: _lTable._id,
                status: 'ORDER_STATUS.SELECTING'
            });
            if (_lOrder) {
                let _lTotalPaymentAux = Number.parseInt(_lOrder.totalPayment.toString()) + Number.parseInt(_AdditionsPrice.toString());
                let _lAdditions = meteor_1.Meteor.call('compareAdditionsToInsert', _additionsToInsert, _lOrder);
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, {
                    $set: {
                        modification_user: meteor_1.Meteor.userId(),
                        modification_date: new Date(),
                        totalPayment: _lTotalPaymentAux,
                        additions: _lAdditions
                    }
                });
            }
            else {
                let _lEstablishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
                let _orderCount = _lEstablishment.orderNumberCount + 1;
                _lEstablishment.orderNumberCount = _orderCount;
                establishment_collection_1.Establishments.update({ _id: _lEstablishment._id }, _lEstablishment);
                order_collection_1.Orders.insert({
                    creation_user: meteor_1.Meteor.userId(),
                    creation_date: new Date(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    code: _orderCount,
                    status: 'ORDER_STATUS.SELECTING',
                    items: [],
                    totalPayment: _AdditionsPrice,
                    orderItemCount: 0,
                    additions: _additionsToInsert
                });
            }
        },
        AddAdditionsToOrder2: function (_additionsToInsert, _establishmentId, _tableId, _AdditionsPrice) {
            let _lTable = table_collection_1.Tables.collection.findOne({ _id: _tableId });
            let _lOrder = order_collection_1.Orders.collection.findOne({
                creation_user: meteor_1.Meteor.userId(),
                establishment_id: _establishmentId,
                tableId: _lTable._id,
                status: 'ORDER_STATUS.SELECTING'
            });
            if (_lOrder) {
                let _lTotalPaymentAux = Number.parseInt(_lOrder.totalPayment.toString()) + Number.parseInt(_AdditionsPrice.toString());
                let _lAdditions = meteor_1.Meteor.call('compareAdditionsToInsert', _additionsToInsert, _lOrder);
                order_collection_1.Orders.update({
                    creation_user: meteor_1.Meteor.userId(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    status: 'ORDER_STATUS.SELECTING'
                }, {
                    $set: {
                        modification_user: meteor_1.Meteor.userId(),
                        modification_date: new Date(),
                        totalPayment: _lTotalPaymentAux,
                        additions: _lAdditions
                    }
                });
            }
            else {
                let _lEstablishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
                let _orderCount = _lEstablishment.orderNumberCount + 1;
                _lEstablishment.orderNumberCount = _orderCount;
                establishment_collection_1.Establishments.update({ _id: _lEstablishment._id }, _lEstablishment);
                order_collection_1.Orders.insert({
                    creation_user: meteor_1.Meteor.userId(),
                    creation_date: new Date(),
                    establishment_id: _establishmentId,
                    tableId: _lTable._id,
                    code: _orderCount,
                    status: 'ORDER_STATUS.SELECTING',
                    items: [],
                    totalPayment: _AdditionsPrice,
                    orderItemCount: 0,
                    additions: _additionsToInsert
                });
            }
        },
        /**
         * This function compare additions to insert and create new array
         * @param {OrderAddition[]} _pAdditionsToInsert
         */
        compareAdditionsToInsert: function (_pAdditionsToInsert, _pOrder) {
            let _lAdditionsToReturn = _pOrder.additions;
            _pAdditionsToInsert.forEach((addToInsert) => {
                _lAdditionsToReturn.forEach((addToReturn) => {
                    if (addToInsert.additionId === addToReturn.additionId) {
                        addToReturn.quantity = addToReturn.quantity + addToInsert.quantity;
                        addToReturn.paymentAddition = addToReturn.paymentAddition + addToInsert.paymentAddition;
                    }
                });
            });
            _pAdditionsToInsert.forEach((addToInsert) => {
                if (_lAdditionsToReturn.filter(ad => ad.additionId === addToInsert.additionId).length === 0) {
                    _lAdditionsToReturn.push(addToInsert);
                }
            });
            return _lAdditionsToReturn;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schedule.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/schedule.methods.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
if (Meteor.isServer) {
    /**
    * Init the cron according to the countries registered
    */
    /*
    Meteor.startup(function () {
        let activeCountries = Countries.collection.find({is_active: true}).fetch();
        activeCountries.forEach(country => {
            console.log(country._id);
        });
    });
    */
    Meteor.methods({});
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.method.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/establishment/table.method.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const table_collection_1 = require("/both/collections/establishment/table.collection");
const order_collection_1 = require("/both/collections/establishment/order.collection");
const waiter_call_detail_collection_1 = require("/both/collections/establishment/waiter-call-detail.collection");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        getCurrentTableByUser: function (_idTable) {
            let table = table_collection_1.Tables.collection.findOne({ _id: _idTable });
            if (typeof table != "undefined" || table != null) {
                return table;
            }
            else {
                return null;
            }
        },
        getIdTableByQr: function (_qrCode) {
            let table = table_collection_1.Tables.collection.findOne({ QR_code: _qrCode, is_active: true });
            if (typeof table != "undefined" || table != null) {
                return table;
            }
            else {
                return null;
            }
        },
        changeCurrentTable: function (_pUserId, _pEstablishmentId, _pQRCodeCurrentTable, _pQRCodeDestinationTable) {
            if (_pQRCodeCurrentTable === _pQRCodeDestinationTable) {
                throw new meteor_1.Meteor.Error('207');
            }
            let _lCurrentTable = table_collection_1.Tables.findOne({ QR_code: _pQRCodeCurrentTable });
            let _lDestinationTable = table_collection_1.Tables.findOne({ QR_code: _pQRCodeDestinationTable });
            if (_lDestinationTable) {
                if (_lDestinationTable.is_active) {
                    if (_lDestinationTable.establishment_id === _pEstablishmentId) {
                        let _lWaiterCalls = waiter_call_detail_collection_1.WaiterCallDetails.find({
                            establishment_id: _pEstablishmentId, table_id: _lCurrentTable._id, type: 'CALL_OF_CUSTOMER',
                            user_id: _pUserId, status: 'completed'
                        }).fetch().length;
                        if (_lWaiterCalls <= 0) {
                            let _lNewAmountPeople = _lCurrentTable.amount_people - 1;
                            table_collection_1.Tables.update({ _id: _lCurrentTable._id }, { $set: { amount_people: _lNewAmountPeople } });
                            order_collection_1.Orders.find({
                                creation_user: _pUserId, establishment_id: _pEstablishmentId, tableId: _lCurrentTable._id,
                                status: 'ORDER_STATUS.CONFIRMED'
                            }).fetch().forEach((order) => {
                                waiter_call_detail_collection_1.WaiterCallDetails.update({ establishment_id: _pEstablishmentId, table_id: _lCurrentTable._id, status: 'completed', order_id: order._id }, { $set: { table_id: _lDestinationTable._id } });
                            });
                            if (_lDestinationTable.status === 'BUSY') {
                                table_collection_1.Tables.update({ _id: _lDestinationTable._id }, { $set: { amount_people: _lDestinationTable.amount_people + 1 } });
                                order_collection_1.Orders.find({
                                    creation_user: _pUserId, establishment_id: _pEstablishmentId, tableId: _lCurrentTable._id,
                                    status: { $in: ['ORDER_STATUS.SELECTING', 'ORDER_STATUS.CONFIRMED'] }
                                }).fetch().forEach((order) => {
                                    order_collection_1.Orders.update({ _id: order._id }, { $set: { tableId: _lDestinationTable._id, modification_user: _pUserId, modification_date: new Date() } });
                                });
                            }
                            else if (_lDestinationTable.status === 'FREE') {
                                table_collection_1.Tables.update({ _id: _lDestinationTable._id }, { $set: { status: 'BUSY', amount_people: 1 } });
                                order_collection_1.Orders.find({
                                    creation_user: _pUserId, establishment_id: _pEstablishmentId, tableId: _lCurrentTable._id,
                                    status: { $in: ['ORDER_STATUS.SELECTING', 'ORDER_STATUS.CONFIRMED'] }
                                }).fetch().forEach((order) => {
                                    order_collection_1.Orders.update({ _id: order._id }, { $set: { tableId: _lDestinationTable._id, modification_user: _pUserId, modification_date: new Date() } });
                                });
                            }
                            else {
                                throw new meteor_1.Meteor.Error('206');
                            }
                            let _lCurTableAux = table_collection_1.Tables.findOne({ QR_code: _pQRCodeCurrentTable });
                            if (_lCurTableAux.amount_people === 0 && _lCurTableAux.status === 'BUSY') {
                                table_collection_1.Tables.update({ _id: _lCurTableAux._id }, { $set: { status: 'FREE' } });
                            }
                            user_detail_collection_1.UserDetails.update({ user_id: _pUserId }, { $set: { current_table: _lDestinationTable._id } });
                        }
                        else {
                            throw new meteor_1.Meteor.Error('205');
                        }
                    }
                    else {
                        throw new meteor_1.Meteor.Error('202');
                    }
                }
                else {
                    throw new meteor_1.Meteor.Error('201');
                }
            }
            else {
                throw new meteor_1.Meteor.Error('200');
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"auth":{"collaborators.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/collaborators.methods.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        createCollaboratorUser: function (_info) {
            var result = Accounts.createUser({
                email: _info.email,
                password: _info.password,
                username: _info.username,
                profile: _info.profile,
            });
            return result;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/menu.methods.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const role_collection_1 = require("/both/collections/auth/role.collection");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
const menu_collection_1 = require("/both/collections/auth/menu.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        getMenus: function () {
            let menuList = [];
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            let role = role_collection_1.Roles.collection.findOne({ _id: userDetail.role_id });
            menu_collection_1.Menus.collection.find({ _id: { $in: role.menus }, is_active: true }, { sort: { order: 1 } }).forEach(function (menu, index, ar) {
                menuList.push(menu);
            });
            return menuList;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-detail.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/user-detail.methods.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        getRole: function () {
            let role = "";
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            if (userDetail) {
                role = userDetail.role_id;
            }
            return role;
        },
        validateAdmin: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '100') {
                return true;
            }
            else {
                return false;
            }
        },
        validateWaiter: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '200') {
                return true;
            }
            else {
                return false;
            }
        },
        validateCashier: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '300') {
                return true;
            }
            else {
                return false;
            }
        },
        validateCustomer: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '400') {
                return true;
            }
            else {
                return false;
            }
        },
        validateChef: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '500') {
                return true;
            }
            else {
                return false;
            }
        },
        validateAdminOrSupervisor: function () {
            let role;
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            role = userDetail.role_id;
            if (role === '100' || role === '600') {
                return true;
            }
            else {
                return false;
            }
        },
        getDetailsCount: function () {
            let count;
            count = user_detail_collection_1.UserDetails.collection.find({ user_id: this.userId }).count();
            return count;
        },
        /**
         * Validate user is active
         */
        validateUserIsActive: function () {
            let userDetail = user_detail_collection_1.UserDetails.collection.findOne({ user_id: this.userId });
            if (userDetail) {
                return userDetail.is_active;
            }
            else {
                return false;
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-devices.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/user-devices.methods.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
//import { UserDetails } from '../../collections/auth/user-detail.collection';
//import { UserDetail } from '../../models/auth/user-detail.model';
const device_collection_1 = require("/both/collections/auth/device.collection");
const device_model_1 = require("../../models/auth/device.model");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        userDevicesValidation: function (_data) {
            var _device = new device_model_1.Device();
            var _userDevice = device_collection_1.UserDevices.collection.find({ user_id: this.userId });
            _device.player_id = _data.userId;
            _device.is_active = true;
            if (_userDevice.count() === 0) {
                device_collection_1.UserDevices.insert({
                    user_id: meteor_1.Meteor.userId(),
                    devices: [_device],
                });
            }
            else if (_userDevice.count() > 0) {
                _userDevice.fetch().forEach((usr_dev) => {
                    let _dev_val = device_collection_1.UserDevices.collection.find({ "devices.player_id": _data.userId });
                    if (!_dev_val) {
                        device_collection_1.UserDevices.update({ _id: usr_dev._id }, { $addToSet: {
                                devices: _device
                            }
                        });
                    }
                    else {
                        device_collection_1.UserDevices.update({ "devices.player_id": _data.userId }, { $set: { "devices.$.is_active": true }
                        });
                    }
                });
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-login.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/user-login.methods.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const user_login_collection_1 = require("/both/collections/auth/user-login.collection");
const accounts_base_1 = require("meteor/accounts-base");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        insertUserLoginInfo: function (_pUserLogin) {
            user_login_collection_1.UsersLogin.insert(_pUserLogin);
        },
        changeUserPassword: function (_userId, _newPassword) {
            accounts_base_1.Accounts.setPassword(_userId, _newPassword);
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/auth/user.methods.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const user_detail_collection_1 = require("/both/collections/auth/user-detail.collection");
const waiter_call_detail_collection_1 = require("/both/collections/establishment/waiter-call-detail.collection");
const table_collection_1 = require("/both/collections/establishment/table.collection");
const user_penalty_collection_1 = require("/both/collections/auth/user-penalty.collection");
const parameter_collection_1 = require("/both/collections/general/parameter.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        penalizeCustomer: function (_pCustomerUser) {
            let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _pCustomerUser._id });
            let _lCustomerEstablishment = _lUserDetail.current_establishment;
            let _lCustomerTable = _lUserDetail.current_table;
            waiter_call_detail_collection_1.WaiterCallDetails.find({
                establishment_id: _lCustomerEstablishment, table_id: _lCustomerTable, user_id: _pCustomerUser._id, type: { $in: ['CUSTOMER_ORDER', 'CALL_OF_CUSTOMER'] },
                status: { $in: ['waiting', 'completed'] }
            }).fetch().forEach((call) => {
                waiter_call_detail_collection_1.WaiterCallDetails.update({ _id: call._id }, { $set: { status: 'cancel', modification_date: new Date() } });
            });
            let _lTableAmountPeople = table_collection_1.Tables.findOne({ _id: _lCustomerTable }).amount_people;
            let _tablesUpdated = table_collection_1.Tables.collection.update({ _id: _lCustomerTable }, { $set: { amount_people: _lTableAmountPeople - 1 } });
            if (_tablesUpdated === 1) {
                let _lTableAux = table_collection_1.Tables.findOne({ _id: _lCustomerTable });
                if (_lTableAux.amount_people === 0 && _lTableAux.status === 'BUSY') {
                    table_collection_1.Tables.update({ _id: _lCustomerTable }, { $set: { status: 'FREE' } });
                }
            }
            let _lUserDetailPenalty = { establishment_id: _lCustomerEstablishment, date: new Date() };
            user_detail_collection_1.UserDetails.update({ _id: _lUserDetail._id }, { $push: { penalties: _lUserDetailPenalty } });
            let _lUsersUpdated = user_detail_collection_1.UserDetails.collection.update({ _id: _lUserDetail._id }, { $set: { current_establishment: '', current_table: '' } });
            if (_lUsersUpdated === 1) {
                let _lUserDetailAux = user_detail_collection_1.UserDetails.findOne({ _id: _lUserDetail._id });
                let _lMaxUserPenalties = parameter_collection_1.Parameters.findOne({ name: 'max_user_penalties' });
                if (_lUserDetailAux.penalties.length >= Number(_lMaxUserPenalties.value)) {
                    let _lLast_date = new Date(Math.max.apply(null, _lUserDetailAux.penalties.map(function (p) { return new Date(p.date); })));
                    user_penalty_collection_1.UserPenalties.insert({
                        user_id: _pCustomerUser._id,
                        is_active: true,
                        last_date: _lLast_date,
                        penalties: _lUserDetailAux.penalties
                    });
                    user_detail_collection_1.UserDetails.update({ _id: _lUserDetail._id }, { $set: { penalties: [] } });
                }
            }
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"general":{"change-email.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/change-email.methods.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const accounts_base_1 = require("meteor/accounts-base");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        addEmail: function (newEmail) {
            accounts_base_1.Accounts.addEmail(meteor_1.Meteor.userId(), newEmail, true);
        }
    });
    meteor_1.Meteor.methods({
        removeEmail: function (oldEmail) {
            accounts_base_1.Accounts.removeEmail(meteor_1.Meteor.userId(), oldEmail);
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"country.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/country.methods.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const country_collection_1 = require("/both/collections/general/country.collection");
const establishment_collection_1 = require("/both/collections/establishment/establishment.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        getCountryByEstablishmentId: function (_establishmentId) {
            let tables_length;
            let country;
            let establishment;
            establishment = establishment_collection_1.Establishments.collection.findOne({ _id: _establishmentId });
            country = country_collection_1.Countries.findOne({ _id: establishment.countryId });
            return country.name;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cron.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/cron.methods.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const email_1 = require("meteor/email");
const email_content_collection_1 = require("../../collections/general/email-content.collection");
const establishment_collection_1 = require("../../collections/establishment/establishment.collection");
const table_collection_1 = require("../../collections/establishment/table.collection");
const payment_history_collection_1 = require("../../collections/payment/payment-history.collection");
const user_collection_1 = require("../../collections/auth/user.collection");
const parameter_collection_1 = require("../../collections/general/parameter.collection");
const meteorhacks_ssr_1 = require("meteor/meteorhacks:ssr");
const reward_point_collection_1 = require("../../collections/establishment/reward-point.collection");
const user_detail_collection_1 = require("../../collections/auth/user-detail.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This function change the freeDays flag to false
         * * @param {string} _countryId
         */
        changeFreeDaysToFalse: function (_countryId) {
            establishment_collection_1.Establishments.collection.update({ countryId: _countryId, freeDays: true, is_beta_tester: false }, { $set: { freeDays: false } });
        },
        /**
         * This function send the email to warn for iurest charge soon
         * * @param {string} _countryId
         */
        sendEmailChargeSoon: function (_countryId) {
            let parameter = parameter_collection_1.Parameters.collection.findOne({ name: 'from_email' });
            let iurest_url = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_url' });
            let facebook = parameter_collection_1.Parameters.collection.findOne({ name: 'facebook_link' });
            let twitter = parameter_collection_1.Parameters.collection.findOne({ name: 'twitter_link' });
            let instagram = parameter_collection_1.Parameters.collection.findOne({ name: 'instagram_link' });
            let iurestImgVar = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_img_url' });
            let currentDate = new Date();
            let lastMonthDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
            let auxArray = [];
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId, isActive: true, is_beta_tester: false }).forEach(function (establishment, index, ar) {
                let user = user_collection_1.Users.collection.findOne({ _id: establishment.creation_user });
                let indexofvar = auxArray.indexOf(user._id);
                if (indexofvar < 0) {
                    auxArray.push(user._id);
                }
            });
            user_collection_1.Users.collection.find({ _id: { $in: auxArray } }).forEach((user) => {
                let auxEstablishments = [];
                establishment_collection_1.Establishments.collection.find({ creation_user: user._id, is_beta_tester: false }, { fields: { _id: 0, name: 1 } }).forEach(function (name, index, ar) {
                    auxEstablishments.push(name.name);
                });
                let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
                let greetVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'greetVar');
                let greeting = (user.profile && user.profile.first_name) ? (greetVar + ' ' + user.profile.first_name + ",") : greetVar;
                meteorhacks_ssr_1.SSR.compileTemplate('chargeSoonEmailHtml', Assets.getText('charge-soon-email.html'));
                var emailData = {
                    greeting: greeting,
                    reminderMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderChargeSoonMsgVar'),
                    establishmentListVar: auxEstablishments.toString(),
                    reminderMsgVar2: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderChargeSoonMsgVar2'),
                    dateVar: meteor_1.Meteor.call('convertDateToSimple', lastMonthDay),
                    regardVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'regardVar'),
                    followMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'followMsgVar'),
                    iurestUrl: iurest_url.value,
                    facebookLink: facebook.value,
                    twitterLink: twitter.value,
                    instagramLink: instagram.value,
                    iurestImgVar: iurestImgVar.value
                };
                email_1.Email.send({
                    to: user.emails[0].address,
                    from: parameter.value,
                    subject: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'chargeSoonEmailSubjectVar'),
                    html: meteorhacks_ssr_1.SSR.render('chargeSoonEmailHtml', emailData),
                });
            });
        },
        /**
         * This function send the email to warn for iurest expire soon
         * * @param {string} _countryId
         */
        sendEmailExpireSoon: function (_countryId) {
            let parameter = parameter_collection_1.Parameters.collection.findOne({ name: 'from_email' });
            let iurest_url = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_url' });
            let facebook = parameter_collection_1.Parameters.collection.findOne({ name: 'facebook_link' });
            let twitter = parameter_collection_1.Parameters.collection.findOne({ name: 'twitter_link' });
            let instagram = parameter_collection_1.Parameters.collection.findOne({ name: 'instagram_link' });
            let iurestImgVar = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_img_url' });
            let currentDate = new Date();
            let firstMonthDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            let maxPaymentDay = new Date(firstMonthDay);
            let endDay = parameter_collection_1.Parameters.collection.findOne({ name: 'end_payment_day' });
            maxPaymentDay.setDate(maxPaymentDay.getDate() + (Number(endDay.value) - 1));
            let auxArray = [];
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId, isActive: true, freeDays: false, is_beta_tester: false }).forEach(function (establishment, index, ar) {
                let user = user_collection_1.Users.collection.findOne({ _id: establishment.creation_user });
                let indexofvar = auxArray.indexOf(user._id);
                if (indexofvar < 0) {
                    auxArray.push(user._id);
                }
            });
            user_collection_1.Users.collection.find({ _id: { $in: auxArray } }).forEach((user) => {
                let auxEstablishments = [];
                establishment_collection_1.Establishments.collection.find({ creation_user: user._id, isActive: true, freeDays: false, is_beta_tester: false }, { fields: { _id: 0, name: 1 } }).forEach(function (name, index, ar) {
                    auxEstablishments.push(name.name);
                });
                let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
                let greetVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'greetVar');
                let greeting = (user.profile && user.profile.first_name) ? (greetVar + ' ' + user.profile.first_name + ",") : greetVar;
                meteorhacks_ssr_1.SSR.compileTemplate('expireSoonEmailHtml', Assets.getText('expire-soon-email.html'));
                var emailData = {
                    greeting: greeting,
                    reminderMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderExpireSoonMsgVar'),
                    establishmentListVar: auxEstablishments.toString(),
                    reminderMsgVar2: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderExpireSoonMsgVar2'),
                    dateVar: meteor_1.Meteor.call('convertDateToSimple', maxPaymentDay),
                    reminderMsgVar3: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderExpireSoonMsgVar3'),
                    regardVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'regardVar'),
                    followMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'followMsgVar'),
                    iurestUrl: iurest_url.value,
                    facebookLink: facebook.value,
                    twitterLink: twitter.value,
                    instagramLink: instagram.value,
                    iurestImgVar: iurestImgVar.value
                };
                email_1.Email.send({
                    to: user.emails[0].address,
                    from: parameter.value,
                    subject: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'expireSoonEmailSubjectVar'),
                    html: meteorhacks_ssr_1.SSR.render('expireSoonEmailHtml', emailData),
                });
            });
        },
        /**
         * This function validate the establishment registered in history_payment and change isActive to false if is not
         * @param {string} _countryId
         */
        validateActiveEstablishments: function (_countryId) {
            let currentDate = new Date();
            let currentMonth = (currentDate.getMonth() + 1).toString();
            let currentYear = currentDate.getFullYear().toString();
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId, isActive: true, freeDays: false, is_beta_tester: false }).forEach(function (establishment, index, ar) {
                let historyPayment;
                let auxArray = [];
                auxArray.push(establishment._id);
                //historyPayment = HistoryPayments.collection.findOne({ establishment_ids: establishment._id, month: currentMonth, year: currentYear, status: 'APPROVED' });
                historyPayment = payment_history_collection_1.PaymentsHistory.collection.findOne({ establishment_ids: { $in: auxArray }, month: currentMonth, year: currentYear, status: 'TRANSACTION_STATUS.APPROVED' });
                if (!historyPayment) {
                    establishment_collection_1.Establishments.collection.update({ _id: establishment._id, is_beta_tester: false }, { $set: { isActive: false, firstPay: false } });
                    table_collection_1.Tables.collection.find({ establishment_id: establishment._id }).forEach(function (table, index, ar) {
                        table_collection_1.Tables.collection.update({ _id: table._id }, { $set: { is_active: false } });
                    });
                }
            });
        },
        /**
         * This function send email to warn that the service has expired
         * @param {string} _countryId
         */
        sendEmailRestExpired: function (_countryId) {
            let parameter = parameter_collection_1.Parameters.collection.findOne({ name: 'from_email' });
            let iurest_url = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_url' });
            let facebook = parameter_collection_1.Parameters.collection.findOne({ name: 'facebook_link' });
            let twitter = parameter_collection_1.Parameters.collection.findOne({ name: 'twitter_link' });
            let instagram = parameter_collection_1.Parameters.collection.findOne({ name: 'instagram_link' });
            let iurestImgVar = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_img_url' });
            let auxArray = [];
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId, isActive: false, freeDays: false, firstPay: false, is_beta_tester: false }).forEach(function (establishment, index, ar) {
                let user = user_collection_1.Users.collection.findOne({ _id: establishment.creation_user });
                let indexofvar = auxArray.indexOf(user._id);
                if (indexofvar < 0) {
                    auxArray.push(user._id);
                }
            });
            user_collection_1.Users.collection.find({ _id: { $in: auxArray } }).forEach((user) => {
                let auxEstablishments = [];
                establishment_collection_1.Establishments.collection.find({ creation_user: user._id, isActive: false, freeDays: false, firstPay: false, is_beta_tester: false }, { fields: { _id: 0, name: 1 } }).forEach(function (name, index, ar) {
                    auxEstablishments.push(name.name);
                });
                let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
                let greetVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'greetVar');
                let greeting = (user.profile && user.profile.first_name) ? (greetVar + ' ' + user.profile.first_name + ",") : greetVar;
                meteorhacks_ssr_1.SSR.compileTemplate('restExpiredEmailHtml', Assets.getText('rest-expired-email.html'));
                var emailData = {
                    greeting: greeting,
                    reminderMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderRestExpiredVar'),
                    establishmentListVar: auxEstablishments.toString(),
                    reminderMsgVar2: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderRestExpiredVar2'),
                    reminderMsgVar3: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'reminderRestExpiredVar3'),
                    regardVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'regardVar'),
                    followMsgVar: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'followMsgVar'),
                    iurestUrl: iurest_url.value,
                    facebookLink: facebook.value,
                    twitterLink: twitter.value,
                    instagramLink: instagram.value,
                    iurestImgVar: iurestImgVar.value
                };
                email_1.Email.send({
                    to: user.emails[0].address,
                    from: parameter.value,
                    subject: meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'restExpiredEmailSubjectVar'),
                    html: meteorhacks_ssr_1.SSR.render('restExpiredEmailHtml', emailData),
                });
            });
        },
        /**
         * This function gets the value from EmailContent collection
         * @param {string} _countryId
         * @return {string}
         */
        getEmailContent(_langDictionary, _label) {
            let value = _langDictionary.filter(function (wordTraduced) {
                return wordTraduced.label == _label;
            });
            return value[0].traduction;
        },
        /**
         * This function convert the day and returning in format yyyy-m-d
         * @param {Date} _date
         * @return {string}
         */
        convertDateToSimple: function (_date) {
            let year = _date.getFullYear();
            let month = _date.getMonth() + 1;
            let day = _date.getDate();
            return day.toString() + '/' + month.toString() + '/' + year.toString();
        },
        /**
         * This function validate the date of points to expire
         */
        checkPointsToExpire(_countryId) {
            let currentDate = new Date();
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId }).forEach(function (establishment, index, ar) {
                reward_point_collection_1.RewardPoints.collection.find({ establishment_id: establishment._id, is_active: true }).forEach(function (rewardPoint, index, ar) {
                    let rewardPointDayMore = rewardPoint.expire_date.getDate() + 1;
                    let rewardPointDate = new Date(rewardPoint.expire_date.getFullYear(), rewardPoint.expire_date.getMonth(), rewardPointDayMore);
                    if ((rewardPointDate.getFullYear() === currentDate.getFullYear()) &&
                        (rewardPointDate.getMonth() === currentDate.getMonth()) &&
                        (rewardPointDate.getDate() === currentDate.getDate())) {
                        let valueToSubtract;
                        if (rewardPoint.difference === 0 || rewardPoint.difference === null || rewardPoint.difference === undefined) {
                            valueToSubtract = rewardPoint.points;
                        }
                        else {
                            valueToSubtract = rewardPoint.difference;
                        }
                        reward_point_collection_1.RewardPoints.collection.update({ _id: rewardPoint._id }, { $set: { is_active: false } });
                        let userDetail = user_detail_collection_1.UserDetails.findOne({ user_id: rewardPoint.id_user });
                        let userRewardPoints = userDetail.reward_points.find(usrPoints => usrPoints.establishment_id === rewardPoint.establishment_id);
                        user_detail_collection_1.UserDetails.update({ user_id: rewardPoint.id_user, 'reward_points.establishment_id': rewardPoint.establishment_id }, { $set: { 'reward_points.$.points': (userRewardPoints.points - valueToSubtract) } });
                    }
                });
            });
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/email.methods.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const email_1 = require("meteor/email");
const email_content_collection_1 = require("/both/collections/general/email-content.collection");
const establishment_collection_1 = require("/both/collections/establishment/establishment.collection");
const user_collection_1 = require("/both/collections/auth/user.collection");
const parameter_collection_1 = require("/both/collections/general/parameter.collection");
const meteorhacks_ssr_1 = require("meteor/meteorhacks:ssr");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This function validate if establishment trial period has ended
         */
        validateTrialPeriod: function (_countryId) {
            var currentDate = new Date();
            var currentString = meteor_1.Meteor.call('convertDate', currentDate);
            var trialDays = Number.parseInt(parameter_collection_1.Parameters.collection.findOne({ name: 'trial_days' }).value);
            var firstAdviceDays = Number.parseInt(parameter_collection_1.Parameters.collection.findOne({ name: 'first_advice_days' }).value);
            var secondAdviceDays = Number.parseInt(parameter_collection_1.Parameters.collection.findOne({ name: 'second_advice_days' }).value);
            var thirdAdviceDays = Number.parseInt(parameter_collection_1.Parameters.collection.findOne({ name: 'third_advice_days' }).value);
            establishment_collection_1.Establishments.collection.find({ countryId: _countryId, isActive: true, tstPeriod: true }).forEach(function (establishment, index, ar) {
                let diff = Math.round((currentDate.valueOf() - establishment.creation_date.valueOf()) / (1000 * 60 * 60 * 24));
                let forwardDate = meteor_1.Meteor.call('addDays', establishment.creation_date, trialDays);
                let forwardString = meteor_1.Meteor.call('convertDate', forwardDate);
                let firstAdviceDate = meteor_1.Meteor.call('substractDays', forwardDate, firstAdviceDays);
                let firstAdviceString = meteor_1.Meteor.call('convertDate', firstAdviceDate);
                let secondAdviceDate = meteor_1.Meteor.call('substractDays', forwardDate, secondAdviceDays);
                let secondAdviceString = meteor_1.Meteor.call('convertDate', secondAdviceDate);
                let thirdAdviceDate = meteor_1.Meteor.call('substractDays', forwardDate, thirdAdviceDays);
                let thirdAdviceString = meteor_1.Meteor.call('convertDate', thirdAdviceDate);
                if (diff > trialDays) {
                    establishment_collection_1.Establishments.collection.update({ _id: establishment._id }, { $set: { isActive: false, tstPeriod: false } });
                }
                else {
                    if (currentString == firstAdviceString || currentString == secondAdviceString || currentString == thirdAdviceString) {
                        meteor_1.Meteor.call('sendTrialEmail', establishment.creation_user, forwardString);
                    }
                }
            });
            return "emailSend";
        },
        /**
         * This function convert the day and returning in format yyyy-m-d
         */
        convertDate: function (_date) {
            let year = _date.getFullYear();
            let month = _date.getMonth() + 1;
            let day = _date.getDate();
            return year.toString() + '-' + month.toString() + '-' + day.toString();
        },
        /**
         * This function add days to the passed date
         */
        addDays: function (_date, _days) {
            var result = new Date(_date);
            result.setDate(result.getDate() + _days);
            return result;
        },
        /**
         * This function substract days to the passed date
         */
        substractDays: function (_date, _days) {
            var result = new Date(_date);
            result.setDate(result.getDate() - _days);
            return result;
        },
        /**
         * This function send de email to the account admin registered if trial period is going to end
         */
        sendTrialEmail: function (_userId, _forwardDate) {
            let user = user_collection_1.Users.collection.findOne({ _id: _userId });
            let parameter = parameter_collection_1.Parameters.collection.findOne({ name: 'from_email' });
            let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
            var trial_email_subject = emailContent.lang_dictionary[0].traduction;
            var greeting = (user.profile && user.profile.first_name) ? (emailContent.lang_dictionary[1].traduction + ' ' + user.profile.first_name + ",") : emailContent.lang_dictionary[1].traduction;
            meteorhacks_ssr_1.SSR.compileTemplate('htmlEmail', Assets.getText('html-email.html'));
            var emailData = {
                greeting: greeting,
                reminderMsgVar: emailContent.lang_dictionary[7].traduction,
                dateVar: _forwardDate,
                instructionMsgVar: emailContent.lang_dictionary[8].traduction,
                regardVar: emailContent.lang_dictionary[5].traduction,
                followMsgVar: emailContent.lang_dictionary[6].traduction
            };
            email_1.Email.send({
                to: user.emails[0].address,
                from: parameter.value,
                subject: trial_email_subject,
                html: meteorhacks_ssr_1.SSR.render('htmlEmail', emailData),
            });
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"iurest-invoice.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/iurest-invoice.methods.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const payment_history_collection_1 = require("../../collections/payment/payment-history.collection");
const user_detail_collection_1 = require("../../collections/auth/user-detail.collection");
const country_collection_1 = require("../../collections/general/country.collection");
const city_collection_1 = require("../../collections/general/city.collection");
const invoices_info_collection_1 = require("../../collections/payment/invoices-info.collection");
const iurest_invoices_collection_1 = require("../../collections/payment/iurest-invoices.collection");
const parameter_collection_1 = require("../../collections/general/parameter.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * This function allow generate iurest invoice for admin establishment
         * @param { string } _paymentHistoryId
         * @param { string } _userId
         */
        generateInvoiceInfo: function (_paymentHistoryId, _userId) {
            let _currentDate = new Date();
            let _firstMonthDay = new Date(_currentDate.getFullYear(), _currentDate.getMonth(), 1);
            let _lastMonthDay = new Date(_currentDate.getFullYear(), _currentDate.getMonth() + 1, 0);
            let lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
            let lCountry = country_collection_1.Countries.findOne({ _id: lUserDetail.country_id });
            let lCity = city_collection_1.Cities.findOne({ _id: lUserDetail.city_id });
            let lPaymentHistory = payment_history_collection_1.PaymentsHistory.findOne({ _id: _paymentHistoryId });
            let invoiceInfo = invoices_info_collection_1.InvoicesInfo.findOne({ country_id: lCountry._id });
            let var_resolution;
            let var_prefix;
            let var_start_value;
            let var_current_value;
            let var_end_value;
            let var_start_date;
            let var_end_date;
            let var_enable_two;
            let var_start_new;
            let company_name = parameter_collection_1.Parameters.findOne({ name: 'company_name' }).value;
            let company_address = parameter_collection_1.Parameters.findOne({ name: 'company_address' }).value;
            let company_phone = parameter_collection_1.Parameters.findOne({ name: 'company_phone' }).value;
            let company_country = parameter_collection_1.Parameters.findOne({ name: 'company_country' }).value;
            let company_city = parameter_collection_1.Parameters.findOne({ name: 'company_city' }).value;
            let company_nit = parameter_collection_1.Parameters.findOne({ name: 'company_nit' }).value;
            let company_regime = parameter_collection_1.Parameters.findOne({ name: 'company_regime' }).value;
            let company_contribution = parameter_collection_1.Parameters.findOne({ name: 'company_contribution' }).value;
            let company_retainer = parameter_collection_1.Parameters.findOne({ name: 'company_retainer' }).value;
            let company_agent_retainer = parameter_collection_1.Parameters.findOne({ name: 'company_agent_retainer' }).value;
            let invoice_generated_msg = parameter_collection_1.Parameters.findOne({ name: 'invoice_generated_msg' }).value;
            //Generate consecutive
            if (invoiceInfo.enable_two == false) {
                if (invoiceInfo.start_new_value == true) {
                    var_current_value = invoiceInfo.start_value_one;
                    var_enable_two = false;
                    var_start_new = false;
                }
                else {
                    var_current_value = invoiceInfo.current_value + 1;
                    if (var_current_value == invoiceInfo.end_value_one) {
                        var_enable_two = true;
                        var_start_new = true;
                    }
                    else {
                        var_enable_two = false;
                        var_start_new = false;
                    }
                }
                var_resolution = invoiceInfo.resolution_one;
                var_prefix = invoiceInfo.prefix_one;
                var_start_value = invoiceInfo.start_value_one;
                var_end_value = invoiceInfo.end_value_one;
                var_start_date = invoiceInfo.start_date_one;
                var_end_date = invoiceInfo.end_date_one;
            }
            else {
                if (invoiceInfo.start_new_value == true) {
                    var_current_value = invoiceInfo.start_value_two;
                    var_enable_two = true;
                    var_start_new = false;
                }
                else {
                    var_current_value = invoiceInfo.current_value + 1;
                    if (var_current_value == invoiceInfo.end_value_two) {
                        var_enable_two = false;
                        var_start_new = true;
                    }
                    else {
                        var_enable_two = true;
                        var_start_new = false;
                    }
                }
                var_resolution = invoiceInfo.resolution_two;
                var_prefix = invoiceInfo.prefix_two;
                var_start_value = invoiceInfo.start_value_two;
                var_end_value = invoiceInfo.end_value_two;
                var_start_date = invoiceInfo.start_date_two;
                var_end_date = invoiceInfo.end_date_two;
            }
            invoices_info_collection_1.InvoicesInfo.collection.update({ _id: invoiceInfo._id }, {
                $set: {
                    current_value: var_current_value,
                    enable_two: var_enable_two,
                    start_new_value: var_start_new
                }
            });
            let company_info = {
                name: company_name,
                address: company_address,
                phone: company_phone,
                country: company_country,
                city: company_city,
                nit: company_nit,
                regime: company_regime,
                contribution: company_contribution,
                retainer: company_retainer,
                agent_retainter: company_agent_retainer,
                resolution_number: var_resolution,
                resolution_prefix: var_prefix,
                resolution_start_date: var_start_date,
                resolution_end_date: var_end_date,
                resolution_start_value: var_start_value.toString(),
                resolution_end_value: var_end_value.toString()
            };
            let auxCity = lUserDetail.city_id === '' || lUserDetail.city_id === null || lUserDetail.city_id === undefined ? lUserDetail.other_city : lCity.name;
            let client_info = {
                name: meteor_1.Meteor.user().profile.first_name + ' ' + meteor_1.Meteor.user().profile.last_name,
                address: lUserDetail.address,
                city: auxCity,
                country: lCountry.name,
                identification: lUserDetail.dni_number,
                phone: lUserDetail.contact_phone,
                email: meteor_1.Meteor.user().emails[0].address
            };
            iurest_invoices_collection_1.IurestInvoices.collection.insert({
                creation_user: meteor_1.Meteor.userId(),
                creation_date: new Date(),
                payment_history_id: lPaymentHistory._id,
                country_id: lCountry._id,
                number: var_current_value.toString(),
                generation_date: new Date(),
                payment_method: 'RES_PAYMENT_HISTORY.CC_PAYMENT_METHOD',
                description: 'RES_PAYMENT_HISTORY.DESCRIPTION',
                period: _firstMonthDay.getDate() + '/' + (_firstMonthDay.getMonth() + 1) + '/' + _firstMonthDay.getFullYear() +
                    ' - ' + _lastMonthDay.getDate() + '/' + (_lastMonthDay.getMonth() + 1) + '/' + _lastMonthDay.getFullYear(),
                amount_no_iva: meteor_1.Meteor.call('getReturnBase', lPaymentHistory.paymentValue).toString(),
                subtotal: "0",
                iva: "0",
                total: lPaymentHistory.paymentValue.toString(),
                currency: lPaymentHistory.currency,
                company_info: company_info,
                client_info: client_info,
                generated_computer_msg: invoice_generated_msg
            });
        },
        /**
        * This function gets the tax value according to the value
        * @param {number} _paymentValue
        */
        getValueTax: function (_paymentValue) {
            let parameterTax = parameter_collection_1.Parameters.findOne({ name: 'colombia_tax_iva' });
            let percentValue = Number(parameterTax.value);
            return (_paymentValue * percentValue) / 100;
        },
        /**
        * This function gets the tax value according to the value
        * @param {number} _paymentValue
        */
        getReturnBase: function (_paymentValue) {
            let amountPercent = meteor_1.Meteor.call('getValueTax', _paymentValue);
            return _paymentValue - amountPercent;
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"parameter.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/parameter.methods.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({});
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"push-notifications.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/general/push-notifications.methods.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const astrocoders_one_signal_1 = require("meteor/astrocoders:one-signal");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        sendPush: function (_userDeviceId, content) {
            const data = {
                contents: {
                    en: content,
                }
            };
            astrocoders_one_signal_1.OneSignal.Notifications.create(_userDeviceId, data);
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"menu":{"item.methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/methods/menu/item.methods.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const item_collection_1 = require("/both/collections/menu/item.collection");
if (meteor_1.Meteor.isServer) {
    meteor_1.Meteor.methods({
        /**
         * Function to update item available for supervisor
         * @param {UserDetail} _userDetail
         * @param {Item} _item
         */
        updateItemAvailable: function (_establishmentId, _itemId) {
            let _itemEstablishment = item_collection_1.Items.collection.findOne({ _id: _itemId }, { fields: { _id: 0, establishments: 1 } });
            let aux = _itemEstablishment.establishments.find(element => element.establishment_id === _establishmentId);
            item_collection_1.Items.update({ _id: _itemId, "establishments.establishment_id": _establishmentId }, { $set: { 'establishments.$.isAvailable': !aux.isAvailable, modification_date: new Date(), modification_user: meteor_1.Meteor.userId() } });
        },
        /**
         * Function to update item recommended
         * @param {UserDetail} _userDetail
         * @param {Item} _item
         */
        updateRecommended: function (_establishmentId, _itemId) {
            let _itemEstablishment = item_collection_1.Items.collection.findOne({ _id: _itemId }, { fields: { _id: 0, establishments: 1 } });
            let aux = _itemEstablishment.establishments.find(element => element.establishment_id === _establishmentId);
            item_collection_1.Items.update({ _id: _itemId, "establishments.establishment_id": _establishmentId }, { $set: { 'establishments.$.recommended': !aux.recommended, modification_date: new Date(), modification_user: meteor_1.Meteor.userId() } });
        }
    });
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"collections":{"auth":{"device.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/device.collection.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
exports.UserDevices = new meteor_rxjs_1.MongoObservable.Collection('user_devices');
function loggedIn() {
    return !!Meteor.user();
}
exports.UserDevices.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn,
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/menu.collection.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
exports.Menus = new meteor_rxjs_1.MongoObservable.Collection('menus');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"role.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/role.collection.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
exports.Roles = new meteor_rxjs_1.MongoObservable.Collection('roles');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-detail.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/user-detail.collection.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
exports.UserDetails = new meteor_rxjs_1.MongoObservable.Collection('user_details');
function loggedIn() {
    return !!Meteor.user();
}
exports.UserDetails.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn,
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-login.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/user-login.collection.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * User Login Collection
 */
exports.UsersLogin = new meteor_rxjs_1.MongoObservable.Collection('users_login');
exports.UsersLogin.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-penalty.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/user-penalty.collection.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * User Penalties Collection
 */
exports.UserPenalties = new meteor_rxjs_1.MongoObservable.Collection('user_penalties');
/**
 * Allow User Penalties collection insert and update functions
 */
exports.UserPenalties.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/auth/user.collection.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Users Collection
 */
exports.Users = meteor_rxjs_1.MongoObservable.fromExisting(meteor_1.Meteor.users);
/**
 * Allow Users collection update functions
 */
exports.Users.allow({
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"establishment":{"establishment.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/establishment.collection.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Establishments Collection
 */
exports.Establishments = new meteor_rxjs_1.MongoObservable.Collection('establishments');
/**
 * Allow Establishment collecion insert and update functions
 */
exports.Establishments.allow({
    insert: loggedIn,
    update: loggedIn
});
/**
 * Establishment Turns Collection
 */
exports.EstablishmentTurns = new meteor_rxjs_1.MongoObservable.Collection('establishment_turns');
/**
 * Allow Establishment Turns collection insert and update functions
 */
exports.EstablishmentTurns.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});
/**
 * Establishment Profile Collection
 */
exports.EstablishmentsProfile = new meteor_rxjs_1.MongoObservable.Collection('establishment_profile');
/**
 * Allow Establishment Profile collection insert and update functions
 */
exports.EstablishmentsProfile.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order-history.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/order-history.collection.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * OrderHistories Collection
 */
exports.OrderHistories = new meteor_rxjs_1.MongoObservable.Collection('order_histories');
/**
 * Allow OrderHistories collection insert and update functions
 */
exports.OrderHistories.allow({
    insert: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/order.collection.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Orders Collection
 */
exports.Orders = new meteor_rxjs_1.MongoObservable.Collection('orders');
/**
 * Allow Orders collection insert and update functions
 */
exports.Orders.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward-point.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/reward-point.collection.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * RewardPoints Collection
 */
exports.RewardPoints = new meteor_rxjs_1.MongoObservable.Collection('reward_points');
/**
 * Allow RewardPoints collection insert and update functions
 */
exports.RewardPoints.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/reward.collection.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Reward Collection
 */
exports.Rewards = new meteor_rxjs_1.MongoObservable.Collection('rewards');
/**
 * Allow Reward collection insert, update and remove functions
 */
exports.Rewards.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/table.collection.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Tables Collection
 */
exports.Tables = new meteor_rxjs_1.MongoObservable.Collection('tables');
/**
 * Allow Tables collection insert and update functions
 */
exports.Tables.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"waiter-call-detail.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/establishment/waiter-call-detail.collection.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * WaiterCallDetails Collection
 */
exports.WaiterCallDetails = new meteor_rxjs_1.MongoObservable.Collection('waiter_call_details');
/**
 * Allow WaiterCallDetails collection insert and update functions
 */
exports.WaiterCallDetails.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"general":{"city.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/city.collection.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Cities Collection
 */
exports.Cities = new meteor_rxjs_1.MongoObservable.Collection('cities');
/**
 * Allow Cities collection insert and update functions
 */
exports.Cities.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cooking-time.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/cooking-time.collection.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Cookingtimes Collection
 */
exports.CookingTimes = new meteor_rxjs_1.MongoObservable.Collection('cooking_times');
/**
 * Allow cookingtimes collection insert and update functions
 */
exports.CookingTimes.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"country.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/country.collection.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Countries Collection
 */
exports.Countries = new meteor_rxjs_1.MongoObservable.Collection('countries');
/**
 * Allow Countries collection insert and update functions
 */
exports.Countries.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"currency.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/currency.collection.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.Currencies = new meteor_rxjs_1.MongoObservable.Collection('currencies');
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
exports.Currencies.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email-content.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/email-content.collection.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.EmailContents = new meteor_rxjs_1.MongoObservable.Collection('email_contents');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow EmailContents collecion insert and update functions
 */
exports.EmailContents.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hours.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/hours.collection.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.Hours = new meteor_rxjs_1.MongoObservable.Collection('hours');
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
exports.Hours.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"language.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/language.collection.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Languages Collection
 */
exports.Languages = new meteor_rxjs_1.MongoObservable.Collection('languages');
/**
 * Allow Languages collection insert and update functions
 */
exports.Languages.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"parameter.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/parameter.collection.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.Parameters = new meteor_rxjs_1.MongoObservable.Collection('parameters');
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
exports.Parameters.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paymentMethod.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/paymentMethod.collection.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.PaymentMethods = new meteor_rxjs_1.MongoObservable.Collection('paymentMethods');
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
exports.PaymentMethods.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point-validity.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/point-validity.collection.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Points Validity Collection
 */
exports.PointsValidity = new meteor_rxjs_1.MongoObservable.Collection('points_validity');
/**
 * Allow points validity collection insert and update functions
 */
exports.PointsValidity.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/point.collection.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Points Collection
 */
exports.Points = new meteor_rxjs_1.MongoObservable.Collection('points');
/**
 * Allow points collection insert and update functions
 */
exports.Points.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"queue.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/queue.collection.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Queues Collection
 */
exports.Queues = new meteor_rxjs_1.MongoObservable.Collection('queues');
/**
 * Allow Queues collection insert and update functions
 */
exports.Queues.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"type-of-food.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/general/type-of-food.collection.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * TypesOfFood Collection
 */
exports.TypesOfFood = new meteor_rxjs_1.MongoObservable.Collection('types_of_food');
/**
 * Allow TypesOfFood collection insert and update functions
 */
exports.TypesOfFood.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"menu":{"addition.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/addition.collection.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Addition Collection
 */
exports.Additions = new meteor_rxjs_1.MongoObservable.Collection('additions');
/**
 * Allow Addition collection insert and update functions
 */
exports.Additions.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"category.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/category.collection.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Categories Collection
 */
exports.Categories = new meteor_rxjs_1.MongoObservable.Collection('categories');
/**
 * Allow Category collection insert and update functions
 */
exports.Categories.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"garnish-food.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/garnish-food.collection.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Garnish Food Collecion
 */
exports.GarnishFoodCol = new meteor_rxjs_1.MongoObservable.Collection('garnishFood');
/**
 * Allow Garnish Food collection insert and update functions
 */
exports.GarnishFoodCol.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"item.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/item.collection.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Items Collection
 */
exports.Items = new meteor_rxjs_1.MongoObservable.Collection('items');
/**
 * Allow Items collection insert and update functions
 */
exports.Items.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option-value.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/option-value.collection.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Option Value Collection
 */
exports.OptionValues = new meteor_rxjs_1.MongoObservable.Collection('option_values');
/**
 * Allow OptionValues collection insert and update functions
 */
exports.OptionValues.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/option.collection.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Options Collection
 */
exports.Options = new meteor_rxjs_1.MongoObservable.Collection('options');
/**
 * Allow Options collection insert and update functions
 */
exports.Options.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"section.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/section.collection.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Section Collection
 */
exports.Sections = new meteor_rxjs_1.MongoObservable.Collection('sections');
/**
 * Allow Section collection insert and update functions
 */
exports.Sections.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"subcategory.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/menu/subcategory.collection.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!Meteor.user();
}
/**
 * Subcategory Collection
 */
exports.Subcategories = new meteor_rxjs_1.MongoObservable.Collection('subcategories');
/**
 * Allow Subcategory collection insert and update functions
 */
exports.Subcategories.allow({
    insert: loggedIn,
    update: loggedIn,
    remove: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"payment":{"cc-payment-methods.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/payment/cc-payment-methods.collection.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.CcPaymentMethods = new meteor_rxjs_1.MongoObservable.Collection('cc_payment_methods');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow HistoryPaymentCollection collecion insert and update functions
 */
exports.CcPaymentMethods.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoices-info.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/payment/invoices-info.collection.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.InvoicesInfo = new meteor_rxjs_1.MongoObservable.Collection('invoices_info');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow HistoryPaymentCollection collecion insert and update functions
 */
exports.InvoicesInfo.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"iurest-invoices.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/payment/iurest-invoices.collection.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.IurestInvoices = new meteor_rxjs_1.MongoObservable.Collection('iurest_invoice');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow HistoryPaymentCollection collecion insert and update functions
 */
exports.IurestInvoices.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-history.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/payment/payment-history.collection.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.PaymentsHistory = new meteor_rxjs_1.MongoObservable.Collection('payments_history');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow HistoryPaymentCollection collecion insert and update functions
 */
exports.PaymentsHistory.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-transaction.collection.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/collections/payment/payment-transaction.collection.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_rxjs_1 = require("meteor-rxjs");
const meteor_1 = require("meteor/meteor");
exports.PaymentTransactions = new meteor_rxjs_1.MongoObservable.Collection('payment_transaction');
/**
 * Function to validate if user exists
 */
function loggedIn() {
    return !!meteor_1.Meteor.user();
}
/**
 * Allow HistoryPaymentCollection collecion insert and update functions
 */
exports.PaymentTransactions.allow({
    insert: loggedIn,
    update: loggedIn
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"models":{"auth":{"device.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/device.model.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Device {
}
exports.Device = Device;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/menu.model.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"role.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/role.model.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-detail.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/user-detail.model.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * User Detail Image Model
 */
class UserDetailImage {
}
exports.UserDetailImage = UserDetailImage;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-login.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/user-login.model.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * User Login Model
 */
class UserLogin {
}
exports.UserLogin = UserLogin;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-penalty.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/user-penalty.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-profile.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/user-profile.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * User Profile Model
 */
class UserProfile {
}
exports.UserProfile = UserProfile;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/auth/user.model.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"establishment":{"establishment.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/establishment.model.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"node.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/node.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Node {
    createNode(_pChars) {
        this.frecuency = 1;
        this.chars = _pChars;
    }
    createNodeExtend(_pFrecuency, _pChars, _pLeft, _pRight) {
        this.frecuency = _pFrecuency;
        this.chars = _pChars;
        this.nodeLeft = _pLeft;
        this.nodeRight = _pRight;
    }
    getChar() {
        return this.chars;
    }
    setChar(_pChar) {
        this.chars = _pChar;
    }
    getFrecuency() {
        return this.frecuency;
    }
    setFrecuency(_pFrecuency) {
        this.frecuency = _pFrecuency;
    }
    getNodeLeft() {
        return this.nodeLeft;
    }
    setNodeLeft(_pLeft) {
        this.nodeLeft = _pLeft;
    }
    getNodeRight() {
        return this.nodeRight;
    }
    setNodeRight(_pNodeRight) {
        this.nodeRight = _pNodeRight;
    }
}
exports.Node = Node;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order-history.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/order-history.model.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/order.model.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward-point.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/reward-point.model.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/reward.model.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/table.model.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"waiter-call-detail.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/establishment/waiter-call-detail.model.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"general":{"city.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/city.model.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cooking-time.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/cooking-time.model.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"country.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/country.model.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"currency.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/currency.model.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email-content.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/email-content.model.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hour.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/hour.model.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"language.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/language.model.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/menu.model.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"parameter.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/parameter.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paymentMethod.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/paymentMethod.model.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pick-options.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/pick-options.model.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point-validity.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/point-validity.model.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/point.model.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"queue.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/queue.model.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"type-of-food.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/general/type-of-food.model.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"menu":{"addition.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/addition.model.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"category.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/category.model.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"garnish-food.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/garnish-food.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"item.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/item.model.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option-value.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/option-value.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/option.model.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"section.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/section.model.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"subcategory.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/menu/subcategory.model.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"payment":{"cc-payment-method.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/cc-payment-method.model.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cc-request-colombia.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/cc-request-colombia.model.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * CcRequestColombia model
 */
class CcRequestColombia {
}
exports.CcRequestColombia = CcRequestColombia;
/**
 * Merchant model
 */
class Merchant {
}
exports.Merchant = Merchant;
/**
 * Transaction model
 */
class Transaction {
}
exports.Transaction = Transaction;
/**
 * Order model
 */
class Order {
}
exports.Order = Order;
/**
 * Payer model
 */
class Payer {
}
exports.Payer = Payer;
/**
 * CreditCard model
 */
class CreditCard {
}
exports.CreditCard = CreditCard;
/**
 * ExtraParameters model
 */
class ExtraParameters {
}
exports.ExtraParameters = ExtraParameters;
/**
 * AdditionalValues model
 */
class AdditionalValues {
}
exports.AdditionalValues = AdditionalValues;
/**
 * TX_VALUE model
 */
class TX_VALUE {
}
exports.TX_VALUE = TX_VALUE;
/**
 * TX_TAX model
 */
class TX_TAX {
}
exports.TX_TAX = TX_TAX;
/**
 * TX_TAX_RETURN_BASE model
 */
class TX_TAX_RETURN_BASE {
}
exports.TX_TAX_RETURN_BASE = TX_TAX_RETURN_BASE;
/**
 * Buyer model
 */
class Buyer {
}
exports.Buyer = Buyer;
/**
 * ShippingBillingAddress
 */
class ShippingBillingAddress {
}
exports.ShippingBillingAddress = ShippingBillingAddress;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoice-info.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/invoice-info.model.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"iurest-invoice.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/iurest-invoice.model.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-history.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/payment-history.model.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-transaction.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/payment-transaction.model.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"response-query.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/payment/response-query.model.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * ResponseQuery model
 */
class ResponseQuery {
}
exports.ResponseQuery = ResponseQuery;
/**
 * Merchant model
 */
class Merchant {
}
exports.Merchant = Merchant;
/**
 * Details model
 */
class Details {
}
exports.Details = Details;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collection-object.model.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/models/collection-object.model.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"shared-components":{"validators":{"custom-validator.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// both/shared-components/validators/custom-validator.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class CustomValidators {
    static emailValidator(control) {
        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])+?/)) {
            return null;
        }
        else {
            return { 'invalidEmailAddress': true };
        }
    }
    /*
    public static numericValidator(control: AbstractControl) {
      if (control.value.match(/^(0|[1-9][0-9]*)$/)) {
        return null;
      } else {
        return { 'invalidNumericField': true };
      }
    }
    */
    static numericValidator(control) {
        if (control.value.match(/^\d+$/)) {
            return null;
        }
        else {
            return { 'invalidNumericField': true };
        }
    }
    static letterValidator(control) {
        if (control.value.match(/^[A-z]+$/)) {
            return null;
        }
        else {
            return { 'invalidLetterField': true };
        }
    }
    static letterSpaceValidator(control) {
        if (control.value.match(/^[a-zA-Z\s]*$/)) {
            return null;
        }
        else {
            return { 'invalidLetterSpaceField': true };
        }
    }
    static dayOfDateValidator(control) {
        if (control.value >= 1 && control.value <= 31) {
            return null;
        }
        else {
            return { 'invalidDayField': true };
        }
    }
    static monthOfDateValidator(control) {
        if (control.value >= 1 && control.value <= 12) {
            return null;
        }
        else {
            return { 'invalidMonthField': true };
        }
    }
    static yearOfDateValidator(control) {
        if (control.value >= 1970) {
            return null;
        }
        else {
            return { 'invalidYearField': true };
        }
    }
    static noSpacesValidator(control) {
        if (control.value !== null && control.value !== undefined) {
            if (control.value.match(/^\S*$/)) {
                return null;
            }
            else {
                return { 'invalidNoSpacesValidator': true };
            }
        }
    }
}
exports.CustomValidators = CustomValidators;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"server":{"imports":{"fixtures":{"auth":{"account-creation.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/auth/account-creation.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const accounts_base_1 = require("meteor/accounts-base");
accounts_base_1.Accounts.onCreateUser(function (options, user) {
    user.profile = options.profile || {};
    user.profile.full_name = options.profile.full_name;
    user.profile.language_code = options.profile.language_code;
    user.profile.gender = options.profile.gender;
    // Returns the user object
    return user;
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email-config.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/auth/email-config.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const accounts_base_1 = require("meteor/accounts-base");
const meteor_1 = require("meteor/meteor");
const parameter_collection_1 = require("../../../../both/collections/general/parameter.collection");
const email_content_collection_1 = require("../../../../both/collections/general/email-content.collection");
accounts_base_1.Accounts.urls.resetPassword = function (token) {
    return meteor_1.Meteor.absoluteUrl('reset-password/' + token);
};
function greet() {
    return function (user, url) {
        let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
        let greetVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'greetVar');
        let welcomeMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'welcomeMsgVar');
        let btnTextVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'btnTextVar');
        let beforeMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'beforeMsgVar');
        let regardVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'regardVar');
        let followMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'followMsgVar');
        let facebookVar = parameter_collection_1.Parameters.collection.findOne({ name: 'facebook_link' }).value;
        let twitterVar = parameter_collection_1.Parameters.collection.findOne({ name: 'twitter_link' }).value;
        let instagramVar = parameter_collection_1.Parameters.collection.findOne({ name: 'instagram_link' }).value;
        let iurestVar = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_url' }).value;
        let iurestImgVar = parameter_collection_1.Parameters.collection.findOne({ name: 'iurest_img_url' }).value;
        var greeting = (user.profile && user.profile.first_name) ? (greetVar + ' ' + user.profile.first_name + ",") : greetVar;
        return `
        <table border="0" width="100%" cellspacing="0" cellpadding="0" bgcolor="#f5f5f5">
        <tbody>
            <tr>
                <td style="padding: 20px 0 30px 0;">
                    <table style="border-collapse: collapse; box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);"
                        border="0" width="60%" cellspacing="0" cellpadding="0" align="center">
                        <tbody>
                            <tr>
                                <td style="padding: 10px 0 10px 0;" align="center" bgcolor="#3c4146"><img style="display: block;" src=${iurestImgVar}logo_iurest_white.png alt="Reset passwd" /></td>
                            </tr>
                            <tr>
                                <td style="padding: 10px 30px 10px 30px;" bgcolor="#ffffff">
                                    <table border="0" width="100%" cellspacing="0" cellpadding="0">
                                        <tbody>
                                            <tr>
                                                <td style="padding: 15px 0 0 0; font-family: Arial, sans-serif; font-size: 24px; font-weight: bold;">${greeting}</td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 15px 0 10px 0; font-family: Arial, sans-serif;">${welcomeMsgVar}</td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 20px 0 20px 0; font-family: Arial, sans-serif;">
                                                    <div align="center"><a style="background-color: white; border-style: solid; border-width: 2px; color: #EF5350; text-align: center; padding: 10px 30px; text-decoration: none; font-weight: bold "
                                                            href="${url}">${btnTextVar}</a></div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 0 0 0 0; font-family: Arial, sans-serif;">
                                                    <p>${beforeMsgVar} <br /> ${regardVar}</p>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding: 0px 30px 10px 30px;" bgcolor="#ffffff">
                                    <hr />
                                    <table border="0" width="100%" cellspacing="0" cellpadding="0">
                                        <tbody>
                                            <tr>
                                                <td style="font-family: Arial, sans-serif;">${followMsgVar}</td>
                                                <td align="right">
                                                    <table border="0" cellspacing="0" cellpadding="0">
                                                        <tbody>
                                                            <tr>
                                                                <td><a href=${facebookVar}> <img style="display: block;" src=${iurestImgVar}facebook_red.png alt="Facebook" /> </a></td>
                                                                <td style="font-size: 0; line-height: 0;" width="20">&nbsp;</td>
                                                                <td><a href=${twitterVar}> <img style="display: block;" src=${iurestImgVar}twitter_red.png alt="Twitter" /> </a></td>
                                                                <td style="font-size: 0; line-height: 0;" width="20">&nbsp;</td>
                                                                <td><a href=${instagramVar}> <img style="display: block;" src=${iurestImgVar}instagram_red.png alt="Instagram" /> </a></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="font-family: Arial, sans-serif; padding: 10px 0 10px 0;"><a style="font-family: Arial, sans-serif; text-decoration: none; float: left;"
                                                        href=${iurestVar}>iurest.com</a></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>
               `;
    };
}
function greetText() {
    return function (user, url) {
        let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
        let greetVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'greetVar');
        let welcomeMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'welcomeMsgVar');
        let btnTextVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'btnTextVar');
        let beforeMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'beforeMsgVar');
        let regardVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'regardVar');
        let followMsgVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'followMsgVar');
        var greeting = (user.profile && user.profile.first_name) ? (greetVar + user.profile.first_name + ",") : greetVar;
        return `    ${greeting}
                    ${welcomeMsgVar}
                    ${url}
                    ${beforeMsgVar}
                    ${regardVar}
               `;
    };
}
accounts_base_1.Accounts.emailTemplates = {
    from: '',
    siteName: meteor_1.Meteor.absoluteUrl().replace(/^https?:\/\//, '').replace(/\/$/, ''),
    resetPassword: {
        subject: function (user) {
            let emailContent = email_content_collection_1.EmailContents.collection.findOne({ language: user.profile.language_code });
            let subjectVar = meteor_1.Meteor.call('getEmailContent', emailContent.lang_dictionary, 'resetPasswordSubjectVar');
            return subjectVar + ' ' + accounts_base_1.Accounts.emailTemplates.siteName;
        },
        html: greet(),
        text: greetText(),
    },
    verifyEmail: {
        subject: function (user) {
            return "How to verify email address on " + accounts_base_1.Accounts.emailTemplates.siteName;
        },
        text: greet()
    },
    enrollAccount: {
        subject: function (user) {
            return "An account has been created for you on " + accounts_base_1.Accounts.emailTemplates.siteName;
        },
        text: greet()
    }
};
accounts_base_1.Accounts.emailTemplates.resetPassword.from = () => {
    let fromVar = parameter_collection_1.Parameters.collection.findOne({ name: 'from_email' }).value;
    return fromVar;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menus.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/auth/menus.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const menu_collection_1 = require("../../../../both/collections/auth/menu.collection");
function loadMenus() {
    if (menu_collection_1.Menus.find().cursor.count() === 0) {
        const menus = [
            {
                _id: "900",
                is_active: true,
                name: "MENUS.DASHBOARD.DASHBOARD",
                url: "/app/dashboard",
                icon_name: "trending up",
                order: 900
            },
            {
                _id: "910",
                is_active: true,
                name: "MENUS.DASHBOARD.DASHBOARD",
                url: "/app/dashboards",
                icon_name: "trending up",
                order: 910
            },
            {
                _id: "10000",
                is_active: true,
                name: "MENUS.REWARDS",
                url: "/app/rewards",
                icon_name: "grade",
                order: 10000
            },
            {
                _id: "1000",
                is_active: true,
                name: "MENUS.ADMINISTRATION.MANAGEMENT",
                url: "",
                icon_name: "supervisor account",
                order: 1000,
                children: [
                    {
                        _id: "1001",
                        is_active: true,
                        name: "MENUS.ADMINISTRATION.RESTAURANTS",
                        url: "",
                        icon_name: "",
                        order: 1001,
                        children: [
                            {
                                _id: "10011",
                                is_active: true,
                                name: "MENUS.ADMINISTRATION.MY_RESTAURANTS",
                                url: "/app/establishment",
                                icon_name: "",
                                order: 10011
                            }, {
                                _id: "10012",
                                is_active: true,
                                name: "MENUS.ADMINISTRATION.PROFILE",
                                url: "/app/establishment-profile",
                                icon_name: "",
                                order: 10012
                            }, {
                                _id: "10013",
                                is_active: true,
                                name: "MENUS.ADMINISTRATION.MONTHLY_CONFIG",
                                url: "/app/monthly-config",
                                icon_name: "",
                                order: 10013
                            }
                        ]
                    }, {
                        _id: "1002",
                        is_active: true,
                        name: "MENUS.ADMINISTRATION.TABLES",
                        url: "",
                        icon_name: "",
                        order: 1002,
                        children: [
                            {
                                _id: "10021",
                                is_active: true,
                                name: "MENUS.ADMINISTRATION.TABLES_SEARCH",
                                url: "/app/tables",
                                icon_name: "",
                                order: 10021
                            }, {
                                _id: "10022",
                                is_active: true,
                                name: "MENUS.ADMINISTRATION.TABLE_CONTROL",
                                url: "/app/establishment-table-control",
                                icon_name: "",
                                order: 10022
                            }
                        ]
                    }, {
                        _id: "1003",
                        is_active: true,
                        name: "MENUS.ADMINISTRATION.COLLABORATORS",
                        url: "/app/collaborators",
                        icon_name: "",
                        order: 1003
                    }
                ]
            },
            {
                _id: "1100",
                is_active: true,
                name: "MENUS.ADMINISTRATION.COLLABORATORS",
                url: "/app/supervisor-collaborators",
                icon_name: "supervisor account",
                order: 1100
            },
            {
                _id: "1200",
                is_active: true,
                name: "MENUS.ADMINISTRATION.TABLES",
                url: "/app/supervisor-tables",
                icon_name: "restaurant",
                order: 1200
            },
            {
                _id: "1300",
                is_active: true,
                name: "MENUS.ADMINISTRATION.TABLE_CONTROL",
                url: "/app/supervisor-establishment-table-control",
                icon_name: "list",
                order: 1300
            },
            {
                _id: "2000",
                is_active: false,
                name: "MENUS.PAYMENTS.PAYMENTS",
                url: "",
                icon_name: "payment",
                order: 2000,
                children: [
                    {
                        _id: "2001",
                        is_active: true,
                        name: "MENUS.PAYMENTS.MONTHLY_PAYMENT",
                        url: "/app/monthly-payment",
                        icon_name: "",
                        order: 2001
                    },
                    {
                        _id: "2002",
                        is_active: true,
                        name: "MENUS.PAYMENTS.PAYMENT_HISTORY",
                        url: "/app/payment-history",
                        icon_name: "",
                        order: 2002
                    },
                    {
                        _id: "2003",
                        is_active: true,
                        name: "MENUS.PAYMENTS.REACTIVATE_RESTAURANT",
                        url: "/app/reactivate-establishment",
                        icon_name: "",
                        order: 2003
                    }
                ]
            },
            {
                _id: "1400",
                is_active: true,
                name: "MENUS.ADMINISTRATION.ORDERS_TODAY",
                url: "/app/orders-today",
                icon_name: "list",
                order: 1300
            },
            {
                _id: "3000",
                is_active: true,
                name: "MENUS.MENU_DEFINITION.MENU_DEFINITION",
                url: "",
                icon_name: "list",
                order: 3000,
                children: [
                    {
                        _id: "3001",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.SECTIONS",
                        url: "/app/sections",
                        icon_name: "",
                        order: 3001
                    }, {
                        _id: "3002",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.CATEGORIES",
                        url: "/app/categories",
                        icon_name: "",
                        order: 3002
                    }, {
                        _id: "3003",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.SUBCATEGORIES",
                        url: "/app/subcategories",
                        icon_name: "",
                        order: 3003
                    }, {
                        _id: "3004",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.ADDITIONS",
                        url: "/app/additions",
                        icon_name: "",
                        order: 3004
                    }, {
                        _id: "3005",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.OPTIONS_VALUES",
                        url: "",
                        icon_name: "",
                        order: 3005,
                        children: [
                            {
                                _id: "30051",
                                is_active: true,
                                name: "MENUS.MENU_DEFINITION.OPTIONS",
                                url: "/app/options",
                                icon_name: "",
                                order: 30051
                            },
                            {
                                _id: "30052",
                                is_active: true,
                                name: "MENUS.MENU_DEFINITION.VALUES",
                                url: "/app/option-values",
                                icon_name: "",
                                order: 30052
                            }
                        ]
                    }, {
                        _id: "3006",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.ITEMS",
                        url: "/app/items",
                        icon_name: "",
                        order: 3006
                    }, {
                        _id: "3007",
                        is_active: true,
                        name: "MENUS.MENU_DEFINITION.ITEMS_ENABLE",
                        url: "/app/items-enable",
                        icon_name: "",
                        order: 3007
                    }
                ]
            },
            {
                _id: "3100",
                is_active: true,
                name: "MENUS.MENU_DEFINITION.ITEMS_ENABLE",
                url: "/app/items-enable-sup",
                icon_name: "done all",
                order: 3100
            },
            {
                _id: "4000",
                is_active: true,
                name: "MENUS.ORDERS",
                url: "/app/orders",
                icon_name: "dns",
                order: 4000
            },
            {
                _id: "6000",
                is_active: true,
                name: "MENUS.WAITER_CALL",
                url: "/app/waiter-call",
                icon_name: "record_voice_over",
                order: 6000
            },
            {
                _id: "7000",
                is_active: true,
                name: "MENUS.MENU_DEFINITION.ORDERS_CHEF",
                url: "/app/chef-orders",
                icon_name: "list",
                order: 7000
            },
            {
                _id: "8000",
                is_active: true,
                name: "MENUS.CALLS",
                url: "/app/calls",
                icon_name: "pan_tool",
                order: 8000
            },
            {
                _id: "9000",
                is_active: true,
                name: "MENUS.MENU_DEFINITION.MENU_DEFINITION",
                url: "/app/menu-list",
                icon_name: "restaurant_menu",
                order: 9000
            },
            {
                _id: "20000",
                is_active: true,
                name: "MENUS.SETTINGS",
                url: "/app/settings",
                icon_name: "settings",
                order: 20000
            },
            {
                _id: "11000",
                is_active: true,
                name: "MENUS.TABLES",
                url: "/app/table-change",
                icon_name: "compare_arrows",
                order: 11000
            },
            {
                _id: "12000",
                is_active: true,
                name: "MENUS.RESTAURANT_EXIT",
                url: "/app/establishment-exit",
                icon_name: "exit_to_app",
                order: 12000
            },
            {
                _id: "19000",
                is_active: true,
                name: "MENUS.POINTS",
                url: "/app/points",
                icon_name: "payment",
                order: 19000
            },
            {
                _id: "13000",
                is_active: true,
                name: "MENUS.ADMINISTRATION.ORDERS_TODAY",
                url: "/app/cashier-orders-today",
                icon_name: "list",
                order: 13000
            }
        ];
        menus.forEach((menu) => menu_collection_1.Menus.insert(menu));
    }
}
exports.loadMenus = loadMenus;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"roles.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/auth/roles.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const role_collection_1 = require("../../../../both/collections/auth/role.collection");
function loadRoles() {
    if (role_collection_1.Roles.find().cursor.count() === 0) {
        const roles = [{
                _id: "100",
                is_active: true,
                name: "ROLE.ADMINISTRATOR",
                description: "establishment administrator",
                menus: ["900", "1000", "1400", "2000", "3000", "10000", "20000"]
            }, {
                _id: "200",
                is_active: true,
                name: "ROLE.WAITER",
                description: "establishment waiter",
                menus: ["8000", "9000", "20000"],
                user_prefix: 'wa'
            }, {
                _id: "300",
                is_active: true,
                name: "ROLE.CASHIER",
                description: "establishment cashier",
                menus: ["13000", "20000"],
                user_prefix: 'ca'
            }, {
                _id: "400",
                is_active: true,
                name: "ROLE.CUSTOMER",
                description: "establishment customer",
                menus: ["4000", "6000", "11000", "12000", "20000", "19000"]
            }, {
                _id: "600",
                is_active: true,
                name: "ROLE.SUPERVISOR",
                description: "establishment supervisor",
                menus: ["910", "1100", "3100", "1200", "1300", "20000"],
                user_prefix: 'sp'
            }];
        roles.forEach((role) => role_collection_1.Roles.insert(role));
    }
}
exports.loadRoles = loadRoles;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"general":{"cities.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/cities.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const city_collection_1 = require("../../../../both/collections/general/city.collection");
function loadCities() {
    if (city_collection_1.Cities.find().cursor.count() === 0) {
        const cities = [
            { _id: '1901', is_active: true, name: 'Aguadas', country: '1900' },
            { _id: '1902', is_active: true, name: 'Amazonas', country: '1900' },
            { _id: '1903', is_active: true, name: 'Arauca', country: '1900' },
            { _id: '1904', is_active: true, name: 'Armenia', country: '1900' },
            { _id: '1905', is_active: true, name: 'Barichara', country: '1900' },
            { _id: '1906', is_active: true, name: 'Barranquilla', country: '1900' },
            { _id: '1907', is_active: true, name: 'Bogotá D.C', country: '1900' },
            { _id: '1908', is_active: true, name: 'Bucaramanga', country: '1900' },
            { _id: '1909', is_active: true, name: 'Buenaventura', country: '1900' },
            { _id: '1910', is_active: true, name: 'Buga', country: '1900' },
            { _id: '1911', is_active: true, name: 'Cali', country: '1900' },
            { _id: '1912', is_active: true, name: 'Cartagena de Indias', country: '1900' },
            { _id: '1913', is_active: true, name: 'Cartago', country: '1900' },
            { _id: '1914', is_active: true, name: 'Chiquinquirá', country: '1900' },
            { _id: '1915', is_active: true, name: 'Chocó', country: '1900' },
            { _id: '1916', is_active: true, name: 'Ciénaga', country: '1900' },
            { _id: '1917', is_active: true, name: 'Cúcuta', country: '1900' },
            { _id: '1918', is_active: true, name: 'El Cocuy', country: '1900' },
            { _id: '1919', is_active: true, name: 'El Espinal', country: '1900' },
            { _id: '1920', is_active: true, name: 'El Hobo', country: '1900' },
            { _id: '1921', is_active: true, name: 'El Jardín', country: '1900' },
            { _id: '1922', is_active: true, name: 'Florencia', country: '1900' },
            { _id: '1923', is_active: true, name: 'Girardot', country: '1900' },
            { _id: '1924', is_active: true, name: 'Girón', country: '1900' },
            { _id: '1925', is_active: true, name: 'Guaduas', country: '1900' },
            { _id: '1926', is_active: true, name: 'Guainía', country: '1900' },
            { _id: '1927', is_active: true, name: 'Guapi', country: '1900' },
            { _id: '1928', is_active: true, name: 'Honda', country: '1900' },
            { _id: '1929', is_active: true, name: 'Ibagué', country: '1900' },
            { _id: '1930', is_active: true, name: 'Inzá', country: '1900' },
            { _id: '1931', is_active: true, name: 'Jericó', country: '1900' },
            { _id: '1932', is_active: true, name: 'La Calera', country: '1900' },
            { _id: '1933', is_active: true, name: 'La Macarena', country: '1900' },
            { _id: '1934', is_active: true, name: 'La Playa de Belén', country: '1900' },
            { _id: '1935', is_active: true, name: 'Lorica', country: '1900' },
            { _id: '1936', is_active: true, name: 'Manizales', country: '1900' },
            { _id: '1937', is_active: true, name: 'Medellín', country: '1900' },
            { _id: '1938', is_active: true, name: 'Melgar', country: '1900' },
            { _id: '1939', is_active: true, name: 'Mitú', country: '1900' },
            { _id: '1940', is_active: true, name: 'Mocoa', country: '1900' },
            { _id: '1941', is_active: true, name: 'Mompox', country: '1900' },
            { _id: '1942', is_active: true, name: 'Monguí', country: '1900' },
            { _id: '1943', is_active: true, name: 'Montería', country: '1900' },
            { _id: '1944', is_active: true, name: 'Neiva', country: '1900' },
            { _id: '1945', is_active: true, name: 'Paipa', country: '1900' },
            { _id: '1946', is_active: true, name: 'Pamplona', country: '1900' },
            { _id: '1947', is_active: true, name: 'Pasto', country: '1900' },
            { _id: '1948', is_active: true, name: 'Pereira', country: '1900' },
            { _id: '1949', is_active: true, name: 'Pitalito', country: '1900' },
            { _id: '1950', is_active: true, name: 'Popayán', country: '1900' },
            { _id: '1951', is_active: true, name: 'Prado', country: '1900' },
            { _id: '1952', is_active: true, name: 'Puerto Carreño', country: '1900' },
            { _id: '1953', is_active: true, name: 'Riohacha', country: '1900' },
            { _id: '1954', is_active: true, name: 'Salamina', country: '1900' },
            { _id: '1955', is_active: true, name: 'San Agustín', country: '1900' },
            { _id: '1956', is_active: true, name: 'San Andrés', country: '1900' },
            { _id: '1957', is_active: true, name: 'San Gil', country: '1900' },
            { _id: '1958', is_active: true, name: 'San José del Guaviare', country: '1900' },
            { _id: '1959', is_active: true, name: 'Santa Fe de Antioquia', country: '1900' },
            { _id: '1960', is_active: true, name: 'Santa Marta', country: '1900' },
            { _id: '1961', is_active: true, name: 'Santa Rosa de Cabal', country: '1900' },
            { _id: '1962', is_active: true, name: 'Sibundoy', country: '1900' },
            { _id: '1963', is_active: true, name: 'Sincelejo', country: '1900' },
            { _id: '1964', is_active: true, name: 'Socorro', country: '1900' },
            { _id: '1965', is_active: true, name: 'Sogamoso', country: '1900' },
            { _id: '1966', is_active: true, name: 'Tunja', country: '1900' },
            { _id: '1967', is_active: true, name: 'Valledupar', country: '1900' },
            { _id: '1968', is_active: true, name: 'Villa de Leyva', country: '1900' },
            { _id: '1969', is_active: true, name: 'Villavicencio', country: '1900' },
            { _id: '1970', is_active: true, name: 'Villeta', country: '1900' },
            { _id: '1971', is_active: true, name: 'Yopal', country: '1900' },
            { _id: '1972', is_active: true, name: 'Zipaquirá', country: '1900' },
            { _id: '1701', is_active: true, name: 'Aisén', country: '1700' },
            { _id: '1702', is_active: true, name: 'Algarrobo', country: '1700' },
            { _id: '1703', is_active: true, name: 'Alhué', country: '1700' },
            { _id: '1704', is_active: true, name: 'Alto Biobío', country: '1700' },
            { _id: '1705', is_active: true, name: 'Alto del Carmen', country: '1700' },
            { _id: '1706', is_active: true, name: 'Alto Hospicio', country: '1700' },
            { _id: '1707', is_active: true, name: 'Ancud', country: '1700' },
            { _id: '1708', is_active: true, name: 'Andacollo', country: '1700' },
            { _id: '1709', is_active: true, name: 'Angol', country: '1700' },
            { _id: '1710', is_active: true, name: 'Antártica', country: '1700' },
            { _id: '1711', is_active: true, name: 'Antofagasta', country: '1700' },
            { _id: '1712', is_active: true, name: 'Antuco', country: '1700' },
            { _id: '1713', is_active: true, name: 'Arauco', country: '1700' },
            { _id: '1714', is_active: true, name: 'Arica', country: '1700' },
            { _id: '1715', is_active: true, name: 'Buin', country: '1700' },
            { _id: '1716', is_active: true, name: 'Bulnes', country: '1700' },
            { _id: '1717', is_active: true, name: 'Cabildo', country: '1700' },
            { _id: '1718', is_active: true, name: 'Cabo de Hornos', country: '1700' },
            { _id: '1719', is_active: true, name: 'Cabrero', country: '1700' },
            { _id: '1720', is_active: true, name: 'Calama', country: '1700' },
            { _id: '1721', is_active: true, name: 'Calbuco', country: '1700' },
            { _id: '1722', is_active: true, name: 'Caldera', country: '1700' },
            { _id: '1723', is_active: true, name: 'Calera', country: '1700' },
            { _id: '1724', is_active: true, name: 'Calera de Tango', country: '1700' },
            { _id: '1725', is_active: true, name: 'Calle Larga', country: '1700' },
            { _id: '1726', is_active: true, name: 'Camarones', country: '1700' },
            { _id: '1727', is_active: true, name: 'Camiña', country: '1700' },
            { _id: '1728', is_active: true, name: 'Canela', country: '1700' },
            { _id: '1729', is_active: true, name: 'Cañete', country: '1700' },
            { _id: '1730', is_active: true, name: 'Carahue', country: '1700' },
            { _id: '1731', is_active: true, name: 'Cartagena', country: '1700' },
            { _id: '1732', is_active: true, name: 'Casablanca', country: '1700' },
            { _id: '1733', is_active: true, name: 'Castro', country: '1700' },
            { _id: '1734', is_active: true, name: 'Catemu', country: '1700' },
            { _id: '1735', is_active: true, name: 'Cauquenes', country: '1700' },
            { _id: '1736', is_active: true, name: 'Cerrillos', country: '1700' },
            { _id: '1737', is_active: true, name: 'Cerro Navia', country: '1700' },
            { _id: '1738', is_active: true, name: 'Chaitén', country: '1700' },
            { _id: '1739', is_active: true, name: 'Chanco', country: '1700' },
            { _id: '1740', is_active: true, name: 'Chañaral', country: '1700' },
            { _id: '1741', is_active: true, name: 'Chépica', country: '1700' },
            { _id: '1742', is_active: true, name: 'Chiguayante', country: '1700' },
            { _id: '1743', is_active: true, name: 'Chile Chico', country: '1700' },
            { _id: '1744', is_active: true, name: 'Chillán', country: '1700' },
            { _id: '1745', is_active: true, name: 'Chillán Viejo', country: '1700' },
            { _id: '1746', is_active: true, name: 'Chimbarongo', country: '1700' },
            { _id: '1747', is_active: true, name: 'Cholchol', country: '1700' },
            { _id: '1748', is_active: true, name: 'Chonchi', country: '1700' },
            { _id: '1749', is_active: true, name: 'Cisnes', country: '1700' },
            { _id: '1750', is_active: true, name: 'Cobquecura', country: '1700' },
            { _id: '1751', is_active: true, name: 'Cochamó', country: '1700' },
            { _id: '1752', is_active: true, name: 'Cochrane', country: '1700' },
            { _id: '1753', is_active: true, name: 'Codegua', country: '1700' },
            { _id: '1754', is_active: true, name: 'Coelemu', country: '1700' },
            { _id: '1755', is_active: true, name: 'Coihaique', country: '1700' },
            { _id: '1756', is_active: true, name: 'Coihueco', country: '1700' },
            { _id: '1757', is_active: true, name: 'Coinco', country: '1700' },
            { _id: '1758', is_active: true, name: 'Colbún', country: '1700' },
            { _id: '1759', is_active: true, name: 'Colchane', country: '1700' },
            { _id: '1760', is_active: true, name: 'Colina', country: '1700' },
            { _id: '1761', is_active: true, name: 'Collipulli', country: '1700' },
            { _id: '1762', is_active: true, name: 'Coltauco', country: '1700' },
            { _id: '1763', is_active: true, name: 'Combarbalá', country: '1700' },
            { _id: '1764', is_active: true, name: 'Concepción', country: '1700' },
            { _id: '1765', is_active: true, name: 'Conchalí', country: '1700' },
            { _id: '1766', is_active: true, name: 'Concón', country: '1700' },
            { _id: '1767', is_active: true, name: 'Constitución', country: '1700' },
            { _id: '1768', is_active: true, name: 'Contulmo', country: '1700' },
            { _id: '1769', is_active: true, name: 'Copiapó', country: '1700' },
            { _id: '1770', is_active: true, name: 'Coquimbo', country: '1700' },
            { _id: '1771', is_active: true, name: 'Coronel', country: '1700' },
            { _id: '1772', is_active: true, name: 'Corral', country: '1700' },
            { _id: '1773', is_active: true, name: 'Cunco', country: '1700' },
            { _id: '1774', is_active: true, name: 'Curacautín', country: '1700' },
            { _id: '1775', is_active: true, name: 'Curacaví', country: '1700' },
            { _id: '1776', is_active: true, name: 'Curaco de Vélez', country: '1700' },
            { _id: '1777', is_active: true, name: 'Curanilahue', country: '1700' },
            { _id: '1778', is_active: true, name: 'Curarrehue', country: '1700' },
            { _id: '1779', is_active: true, name: 'Curepto', country: '1700' },
            { _id: '1780', is_active: true, name: 'Curicó', country: '1700' },
            { _id: '1781', is_active: true, name: 'Dalcahue', country: '1700' },
            { _id: '1782', is_active: true, name: 'Diego de Almagro', country: '1700' },
            { _id: '1783', is_active: true, name: 'Doñihue', country: '1700' },
            { _id: '1784', is_active: true, name: 'El Bosque', country: '1700' },
            { _id: '1785', is_active: true, name: 'El Carmen', country: '1700' },
            { _id: '1786', is_active: true, name: 'El Monte', country: '1700' },
            { _id: '1787', is_active: true, name: 'El Quisco', country: '1700' },
            { _id: '1788', is_active: true, name: 'El Tabo', country: '1700' },
            { _id: '1789', is_active: true, name: 'Empedrado', country: '1700' },
            { _id: '1790', is_active: true, name: 'Ercilla', country: '1700' },
            { _id: '1791', is_active: true, name: 'Estación Central', country: '1700' },
            { _id: '1792', is_active: true, name: 'Florida', country: '1700' },
            { _id: '1793', is_active: true, name: 'Freire', country: '1700' },
            { _id: '1794', is_active: true, name: 'Freirina', country: '1700' },
            { _id: '1795', is_active: true, name: 'Fresia', country: '1700' },
            { _id: '1796', is_active: true, name: 'Frutillar', country: '1700' },
            { _id: '1797', is_active: true, name: 'Futaleufú', country: '1700' },
            { _id: '1798', is_active: true, name: 'Futrono', country: '1700' },
            { _id: '1799', is_active: true, name: 'Galvarino', country: '1700' },
            { _id: '17100', is_active: true, name: 'General Lagos', country: '1700' },
            { _id: '17101', is_active: true, name: 'Gorbea', country: '1700' },
            { _id: '17102', is_active: true, name: 'Graneros', country: '1700' },
            { _id: '17103', is_active: true, name: 'Guaitecas', country: '1700' },
            { _id: '17104', is_active: true, name: 'Hijuelas', country: '1700' },
            { _id: '17105', is_active: true, name: 'Hualaihué', country: '1700' },
            { _id: '17106', is_active: true, name: 'Hualañé', country: '1700' },
            { _id: '17107', is_active: true, name: 'Hualpén', country: '1700' },
            { _id: '17108', is_active: true, name: 'Hualqui', country: '1700' },
            { _id: '17109', is_active: true, name: 'Huara', country: '1700' },
            { _id: '17110', is_active: true, name: 'Huasco', country: '1700' },
            { _id: '17111', is_active: true, name: 'Huechuraba', country: '1700' },
            { _id: '17112', is_active: true, name: 'Ignorada', country: '1700' },
            { _id: '17113', is_active: true, name: 'Illapel', country: '1700' },
            { _id: '17114', is_active: true, name: 'Independencia', country: '1700' },
            { _id: '17115', is_active: true, name: 'Iquique', country: '1700' },
            { _id: '17116', is_active: true, name: 'Isla de Maipo', country: '1700' },
            { _id: '17117', is_active: true, name: 'Isla de Pascua', country: '1700' },
            { _id: '17118', is_active: true, name: 'Juan Fernández', country: '1700' },
            { _id: '17119', is_active: true, name: 'La Cisterna', country: '1700' },
            { _id: '17120', is_active: true, name: 'La Cruz', country: '1700' },
            { _id: '17121', is_active: true, name: 'La Estrella', country: '1700' },
            { _id: '17122', is_active: true, name: 'La Florida', country: '1700' },
            { _id: '17123', is_active: true, name: 'La Granja', country: '1700' },
            { _id: '17124', is_active: true, name: 'La Higuera', country: '1700' },
            { _id: '17125', is_active: true, name: 'La Ligua', country: '1700' },
            { _id: '17126', is_active: true, name: 'La Pintana', country: '1700' },
            { _id: '17127', is_active: true, name: 'La Reina', country: '1700' },
            { _id: '17128', is_active: true, name: 'La Serena', country: '1700' },
            { _id: '17129', is_active: true, name: 'La Unión', country: '1700' },
            { _id: '17130', is_active: true, name: 'Lago Ranco', country: '1700' },
            { _id: '17131', is_active: true, name: 'Lago Verde', country: '1700' },
            { _id: '17132', is_active: true, name: 'Laguna Blanca', country: '1700' },
            { _id: '17133', is_active: true, name: 'Laja', country: '1700' },
            { _id: '17134', is_active: true, name: 'Lampa', country: '1700' },
            { _id: '17135', is_active: true, name: 'Lanco', country: '1700' },
            { _id: '17136', is_active: true, name: 'Las Cabras', country: '1700' },
            { _id: '17137', is_active: true, name: 'Las Condes', country: '1700' },
            { _id: '17138', is_active: true, name: 'Lautaro', country: '1700' },
            { _id: '17139', is_active: true, name: 'Lebu', country: '1700' },
            { _id: '17140', is_active: true, name: 'Licantén', country: '1700' },
            { _id: '17141', is_active: true, name: 'Limache', country: '1700' },
            { _id: '17142', is_active: true, name: 'Linares', country: '1700' },
            { _id: '17143', is_active: true, name: 'Litueche', country: '1700' },
            { _id: '17144', is_active: true, name: 'Llaillay', country: '1700' },
            { _id: '17145', is_active: true, name: 'Llanquihue', country: '1700' },
            { _id: '17146', is_active: true, name: 'Lo Barnechea', country: '1700' },
            { _id: '17147', is_active: true, name: 'Lo Espejo', country: '1700' },
            { _id: '17148', is_active: true, name: 'Lo Prado', country: '1700' },
            { _id: '17149', is_active: true, name: 'Lolol', country: '1700' },
            { _id: '17150', is_active: true, name: 'Loncoche', country: '1700' },
            { _id: '17151', is_active: true, name: 'Longaví', country: '1700' },
            { _id: '17152', is_active: true, name: 'Lonquimay', country: '1700' },
            { _id: '17153', is_active: true, name: 'Los Álamos', country: '1700' },
            { _id: '17154', is_active: true, name: 'Los Andes', country: '1700' },
            { _id: '17155', is_active: true, name: 'Los Ángeles', country: '1700' },
            { _id: '17156', is_active: true, name: 'Los Lagos', country: '1700' },
            { _id: '17157', is_active: true, name: 'Los Muermos', country: '1700' },
            { _id: '17158', is_active: true, name: 'Los Sauces', country: '1700' },
            { _id: '17159', is_active: true, name: 'Los Vilos', country: '1700' },
            { _id: '17160', is_active: true, name: 'Lota', country: '1700' },
            { _id: '17161', is_active: true, name: 'Lumaco', country: '1700' },
            { _id: '17162', is_active: true, name: 'Machalí', country: '1700' },
            { _id: '17163', is_active: true, name: 'Macul', country: '1700' },
            { _id: '17164', is_active: true, name: 'Máfil', country: '1700' },
            { _id: '17165', is_active: true, name: 'Maipú', country: '1700' },
            { _id: '17166', is_active: true, name: 'Malloa', country: '1700' },
            { _id: '17167', is_active: true, name: 'Marchihue', country: '1700' },
            { _id: '17168', is_active: true, name: 'María Elena', country: '1700' },
            { _id: '17169', is_active: true, name: 'María Pinto', country: '1700' },
            { _id: '17170', is_active: true, name: 'Mariquina', country: '1700' },
            { _id: '17171', is_active: true, name: 'Maule', country: '1700' },
            { _id: '17172', is_active: true, name: 'Maullín', country: '1700' },
            { _id: '17173', is_active: true, name: 'Mejillones', country: '1700' },
            { _id: '17174', is_active: true, name: 'Melipeuco', country: '1700' },
            { _id: '17175', is_active: true, name: 'Melipilla', country: '1700' },
            { _id: '17176', is_active: true, name: 'Molina', country: '1700' },
            { _id: '17177', is_active: true, name: 'Monte Patria', country: '1700' },
            { _id: '17178', is_active: true, name: 'Mostazal', country: '1700' },
            { _id: '17179', is_active: true, name: 'Mulchén', country: '1700' },
            { _id: '17180', is_active: true, name: 'Nacimiento', country: '1700' },
            { _id: '17181', is_active: true, name: 'Nancagua', country: '1700' },
            { _id: '17182', is_active: true, name: 'Natales', country: '1700' },
            { _id: '17183', is_active: true, name: 'Navidad', country: '1700' },
            { _id: '17184', is_active: true, name: 'Negrete', country: '1700' },
            { _id: '17185', is_active: true, name: 'Ninhue', country: '1700' },
            { _id: '17186', is_active: true, name: 'Nogales', country: '1700' },
            { _id: '17187', is_active: true, name: 'Nueva Imperial', country: '1700' },
            { _id: '17188', is_active: true, name: 'Ñiquén', country: '1700' },
            { _id: '17189', is_active: true, name: 'Ñuñoa', country: '1700' },
            { _id: '17190', is_active: true, name: 'OHiggins', country: '1700' },
            { _id: '17191', is_active: true, name: 'Olivar', country: '1700' },
            { _id: '17192', is_active: true, name: 'Ollagüe', country: '1700' },
            { _id: '17193', is_active: true, name: 'Olmué', country: '1700' },
            { _id: '17194', is_active: true, name: 'Osorno', country: '1700' },
            { _id: '17195', is_active: true, name: 'Ovalle', country: '1700' },
            { _id: '17196', is_active: true, name: 'Padre Hurtado', country: '1700' },
            { _id: '17197', is_active: true, name: 'Padre Las Casas', country: '1700' },
            { _id: '17198', is_active: true, name: 'Paiguano', country: '1700' },
            { _id: '17199', is_active: true, name: 'Paillaco', country: '1700' },
            { _id: '17200', is_active: true, name: 'Paine', country: '1700' },
            { _id: '17201', is_active: true, name: 'Palena', country: '1700' },
            { _id: '17202', is_active: true, name: 'Palmilla', country: '1700' },
            { _id: '17203', is_active: true, name: 'Panguipulli', country: '1700' },
            { _id: '17204', is_active: true, name: 'Panquehue', country: '1700' },
            { _id: '17205', is_active: true, name: 'Papudo', country: '1700' },
            { _id: '17206', is_active: true, name: 'Paredones', country: '1700' },
            { _id: '17207', is_active: true, name: 'Parral', country: '1700' },
            { _id: '17208', is_active: true, name: 'Pedro Aguirre Cerda', country: '1700' },
            { _id: '17209', is_active: true, name: 'Pelarco', country: '1700' },
            { _id: '17210', is_active: true, name: 'Pelluhue', country: '1700' },
            { _id: '17211', is_active: true, name: 'Pemuco', country: '1700' },
            { _id: '17212', is_active: true, name: 'Pencahue', country: '1700' },
            { _id: '17213', is_active: true, name: 'Penco', country: '1700' },
            { _id: '17214', is_active: true, name: 'Peñaflor', country: '1700' },
            { _id: '17215', is_active: true, name: 'Peñalolén', country: '1700' },
            { _id: '17216', is_active: true, name: 'Peralillo', country: '1700' },
            { _id: '17217', is_active: true, name: 'Perquenco', country: '1700' },
            { _id: '17218', is_active: true, name: 'Petorca', country: '1700' },
            { _id: '17219', is_active: true, name: 'Peumo', country: '1700' },
            { _id: '17220', is_active: true, name: 'Pica', country: '1700' },
            { _id: '17221', is_active: true, name: 'Pichidegua', country: '1700' },
            { _id: '17222', is_active: true, name: 'Pichilemu', country: '1700' },
            { _id: '17223', is_active: true, name: 'Pinto', country: '1700' },
            { _id: '17224', is_active: true, name: 'Pirque', country: '1700' },
            { _id: '17225', is_active: true, name: 'Pitrufquén', country: '1700' },
            { _id: '17226', is_active: true, name: 'Placilla', country: '1700' },
            { _id: '17227', is_active: true, name: 'Portezuelo', country: '1700' },
            { _id: '17228', is_active: true, name: 'Porvenir', country: '1700' },
            { _id: '17229', is_active: true, name: 'Pozo Almonte', country: '1700' },
            { _id: '17230', is_active: true, name: 'Primavera', country: '1700' },
            { _id: '17231', is_active: true, name: 'Providencia', country: '1700' },
            { _id: '17232', is_active: true, name: 'Puchuncaví', country: '1700' },
            { _id: '17233', is_active: true, name: 'Pucón', country: '1700' },
            { _id: '17234', is_active: true, name: 'Pudahuel', country: '1700' },
            { _id: '17235', is_active: true, name: 'Puente Alto', country: '1700' },
            { _id: '17236', is_active: true, name: 'Puerto Montt', country: '1700' },
            { _id: '17237', is_active: true, name: 'Puerto Octay', country: '1700' },
            { _id: '17238', is_active: true, name: 'Puerto Varas', country: '1700' },
            { _id: '17239', is_active: true, name: 'Pumanque', country: '1700' },
            { _id: '17240', is_active: true, name: 'Punitaqui', country: '1700' },
            { _id: '17241', is_active: true, name: 'Punta Arenas', country: '1700' },
            { _id: '17242', is_active: true, name: 'Puqueldón', country: '1700' },
            { _id: '17243', is_active: true, name: 'Purén', country: '1700' },
            { _id: '17244', is_active: true, name: 'Purranque', country: '1700' },
            { _id: '17245', is_active: true, name: 'Putaendo', country: '1700' },
            { _id: '17246', is_active: true, name: 'Putre', country: '1700' },
            { _id: '17247', is_active: true, name: 'Puyehue', country: '1700' },
            { _id: '17248', is_active: true, name: 'Queilén', country: '1700' },
            { _id: '17249', is_active: true, name: 'Quellón', country: '1700' },
            { _id: '17250', is_active: true, name: 'Quemchi', country: '1700' },
            { _id: '17251', is_active: true, name: 'Quilaco', country: '1700' },
            { _id: '17252', is_active: true, name: 'Quilicura', country: '1700' },
            { _id: '17253', is_active: true, name: 'Quilleco', country: '1700' },
            { _id: '17254', is_active: true, name: 'Quillón', country: '1700' },
            { _id: '17255', is_active: true, name: 'Quillota', country: '1700' },
            { _id: '17256', is_active: true, name: 'Quilpué', country: '1700' },
            { _id: '17257', is_active: true, name: 'Quinchao', country: '1700' },
            { _id: '17258', is_active: true, name: 'Quinta de Tilcoco', country: '1700' },
            { _id: '17259', is_active: true, name: 'Quinta Normal', country: '1700' },
            { _id: '17260', is_active: true, name: 'Quintero', country: '1700' },
            { _id: '17261', is_active: true, name: 'Quirihue', country: '1700' },
            { _id: '17262', is_active: true, name: 'Rancagua', country: '1700' },
            { _id: '17263', is_active: true, name: 'Ránquil', country: '1700' },
            { _id: '17264', is_active: true, name: 'Rauco', country: '1700' },
            { _id: '17265', is_active: true, name: 'Recoleta', country: '1700' },
            { _id: '17266', is_active: true, name: 'Renaico', country: '1700' },
            { _id: '17267', is_active: true, name: 'Renca', country: '1700' },
            { _id: '17268', is_active: true, name: 'Rengo', country: '1700' },
            { _id: '17269', is_active: true, name: 'Requínoa', country: '1700' },
            { _id: '17270', is_active: true, name: 'Retiro', country: '1700' },
            { _id: '17271', is_active: true, name: 'Rinconada', country: '1700' },
            { _id: '17272', is_active: true, name: 'Río Bueno', country: '1700' },
            { _id: '17273', is_active: true, name: 'Río Claro', country: '1700' },
            { _id: '17274', is_active: true, name: 'Río Hurtado', country: '1700' },
            { _id: '17275', is_active: true, name: 'Río Ibáñez', country: '1700' },
            { _id: '17276', is_active: true, name: 'Río Negro', country: '1700' },
            { _id: '17277', is_active: true, name: 'Río Verde', country: '1700' },
            { _id: '17278', is_active: true, name: 'Romeral', country: '1700' },
            { _id: '17279', is_active: true, name: 'Saavedra', country: '1700' },
            { _id: '17280', is_active: true, name: 'Sagrada Familia', country: '1700' },
            { _id: '17281', is_active: true, name: 'Salamanca', country: '1700' },
            { _id: '17282', is_active: true, name: 'San Antonio', country: '1700' },
            { _id: '17283', is_active: true, name: 'San Bernardo', country: '1700' },
            { _id: '17284', is_active: true, name: 'San Carlos', country: '1700' },
            { _id: '17285', is_active: true, name: 'San Clemente', country: '1700' },
            { _id: '17286', is_active: true, name: 'San Esteban', country: '1700' },
            { _id: '17287', is_active: true, name: 'San Fabián', country: '1700' },
            { _id: '17288', is_active: true, name: 'San Felipe', country: '1700' },
            { _id: '17289', is_active: true, name: 'San Fernando', country: '1700' },
            { _id: '17290', is_active: true, name: 'San Gregorio', country: '1700' },
            { _id: '17291', is_active: true, name: 'San Ignacio', country: '1700' },
            { _id: '17292', is_active: true, name: 'San Javier', country: '1700' },
            { _id: '17293', is_active: true, name: 'San Joaquín', country: '1700' },
            { _id: '17294', is_active: true, name: 'San José de Maipo', country: '1700' },
            { _id: '17295', is_active: true, name: 'San Juan de la Costa', country: '1700' },
            { _id: '17296', is_active: true, name: 'San Miguel', country: '1700' },
            { _id: '17297', is_active: true, name: 'San Nicolás', country: '1700' },
            { _id: '17298', is_active: true, name: 'San Pablo', country: '1700' },
            { _id: '17299', is_active: true, name: 'San Pedro', country: '1700' },
            { _id: '17300', is_active: true, name: 'San Pedro de Atacama', country: '1700' },
            { _id: '17301', is_active: true, name: 'San Pedro de la Paz', country: '1700' },
            { _id: '17302', is_active: true, name: 'San Rafael', country: '1700' },
            { _id: '17303', is_active: true, name: 'San Ramón', country: '1700' },
            { _id: '17304', is_active: true, name: 'San Rosendo', country: '1700' },
            { _id: '17305', is_active: true, name: 'San Vicente', country: '1700' },
            { _id: '17306', is_active: true, name: 'Santa Bárbara', country: '1700' },
            { _id: '17307', is_active: true, name: 'Santa Cruz', country: '1700' },
            { _id: '17308', is_active: true, name: 'Santa Juana', country: '1700' },
            { _id: '17309', is_active: true, name: 'Santa María', country: '1700' },
            { _id: '17310', is_active: true, name: 'Santiago', country: '1700' },
            { _id: '17311', is_active: true, name: 'Santo Domingo', country: '1700' },
            { _id: '17312', is_active: true, name: 'Sierra Gorda', country: '1700' },
            { _id: '17313', is_active: true, name: 'Talagante', country: '1700' },
            { _id: '17314', is_active: true, name: 'Talca', country: '1700' },
            { _id: '17315', is_active: true, name: 'Talcahuano', country: '1700' },
            { _id: '17316', is_active: true, name: 'Taltal', country: '1700' },
            { _id: '17317', is_active: true, name: 'Temuco', country: '1700' },
            { _id: '17318', is_active: true, name: 'Teno', country: '1700' },
            { _id: '17319', is_active: true, name: 'Teodoro Schmidt', country: '1700' },
            { _id: '17320', is_active: true, name: 'Tierra Amarilla', country: '1700' },
            { _id: '17321', is_active: true, name: 'Tiltil', country: '1700' },
            { _id: '17322', is_active: true, name: 'Timaukel', country: '1700' },
            { _id: '17323', is_active: true, name: 'Tirúa', country: '1700' },
            { _id: '17324', is_active: true, name: 'Tocopilla', country: '1700' },
            { _id: '17325', is_active: true, name: 'Toltén', country: '1700' },
            { _id: '17326', is_active: true, name: 'Tomé', country: '1700' },
            { _id: '17327', is_active: true, name: 'Torres del Paine', country: '1700' },
            { _id: '17328', is_active: true, name: 'Tortel', country: '1700' },
            { _id: '17329', is_active: true, name: 'Traiguén', country: '1700' },
            { _id: '17330', is_active: true, name: 'Treguaco', country: '1700' },
            { _id: '17331', is_active: true, name: 'Tucapel', country: '1700' },
            { _id: '17332', is_active: true, name: 'Valdivia', country: '1700' },
            { _id: '17333', is_active: true, name: 'Vallenar', country: '1700' },
            { _id: '17334', is_active: true, name: 'Valparaíso', country: '1700' },
            { _id: '17335', is_active: true, name: 'Vichuquén', country: '1700' },
            { _id: '17336', is_active: true, name: 'Victoria', country: '1700' },
            { _id: '17337', is_active: true, name: 'Vicuña', country: '1700' },
            { _id: '17338', is_active: true, name: 'Vilcún', country: '1700' },
            { _id: '17339', is_active: true, name: 'Villa Alegre', country: '1700' },
            { _id: '17340', is_active: true, name: 'Villa Alemana', country: '1700' },
            { _id: '17341', is_active: true, name: 'Villarrica', country: '1700' },
            { _id: '17342', is_active: true, name: 'Viña del Mar', country: '1700' },
            { _id: '17343', is_active: true, name: 'Vitacura', country: '1700' },
            { _id: '17344', is_active: true, name: 'Yerbas Buenas', country: '1700' },
            { _id: '17345', is_active: true, name: 'Yumbel', country: '1700' },
            { _id: '17346', is_active: true, name: 'Yungay', country: '1700' },
            { _id: '17347', is_active: true, name: 'Zapallar', country: '1700' },
            { _id: '401', is_active: true, name: 'Azul', country: '400' },
            { _id: '402', is_active: true, name: 'Bahía Blanca', country: '400' },
            { _id: '403', is_active: true, name: 'Banda del Río Salí', country: '400' },
            { _id: '404', is_active: true, name: 'Banfield', country: '400' },
            { _id: '405', is_active: true, name: 'Barranqueras', country: '400' },
            { _id: '406', is_active: true, name: 'Béccar', country: '400' },
            { _id: '407', is_active: true, name: 'Belén de Escobar', country: '400' },
            { _id: '408', is_active: true, name: 'Bella Vista', country: '400' },
            { _id: '409', is_active: true, name: 'Berazategui', country: '400' },
            { _id: '410', is_active: true, name: 'Berisso', country: '400' },
            { _id: '411', is_active: true, name: 'Bernal', country: '400' },
            { _id: '412', is_active: true, name: 'Bosques', country: '400' },
            { _id: '413', is_active: true, name: 'Boulogne Sur Mer', country: '400' },
            { _id: '414', is_active: true, name: 'Buenos Aires', country: '400' },
            { _id: '415', is_active: true, name: 'Burzaco', country: '400' },
            { _id: '416', is_active: true, name: 'Campana', country: '400' },
            { _id: '417', is_active: true, name: 'Caseros', country: '400' },
            { _id: '418', is_active: true, name: 'Castelar', country: '400' },
            { _id: '419', is_active: true, name: 'Chimbas', country: '400' },
            { _id: '420', is_active: true, name: 'Chivilcoy', country: '400' },
            { _id: '421', is_active: true, name: 'Cipolletti', country: '400' },
            { _id: '422', is_active: true, name: 'Ciudad de Corrientes', country: '400' },
            { _id: '423', is_active: true, name: 'Ciudad de Formosa', country: '400' },
            { _id: '424', is_active: true, name: 'Ciudad de La Rioja', country: '400' },
            { _id: '425', is_active: true, name: 'Ciudad de Mendoza', country: '400' },
            { _id: '426', is_active: true, name: 'Ciudad de Neuquén', country: '400' },
            { _id: '427', is_active: true, name: 'Ciudad de Río Cuarto', country: '400' },
            { _id: '428', is_active: true, name: 'Ciudad de Salta', country: '400' },
            { _id: '429', is_active: true, name: 'Ciudad de San Juan', country: '400' },
            { _id: '430', is_active: true, name: 'Ciudad de San Luis', country: '400' },
            { _id: '431', is_active: true, name: 'Ciudad de Santa Fe', country: '400' },
            { _id: '432', is_active: true, name: 'Ciudad de Santiago del Estero', country: '400' },
            { _id: '433', is_active: true, name: 'Ciudad Evita', country: '400' },
            { _id: '434', is_active: true, name: 'Ciudad Jardín El Libertador', country: '400' },
            { _id: '435', is_active: true, name: 'Ciudadela', country: '400' },
            { _id: '436', is_active: true, name: 'Clorinda', country: '400' },
            { _id: '437', is_active: true, name: 'Comodoro Rivadavia', country: '400' },
            { _id: '438', is_active: true, name: 'Concepción', country: '400' },
            { _id: '439', is_active: true, name: 'Concepción del Uruguay', country: '400' },
            { _id: '440', is_active: true, name: 'Concordia', country: '400' },
            { _id: '441', is_active: true, name: 'Córdoba', country: '400' },
            { _id: '442', is_active: true, name: 'Don Torcuato', country: '400' },
            { _id: '443', is_active: true, name: 'El Jagüel', country: '400' },
            { _id: '444', is_active: true, name: 'El Palomar', country: '400' },
            { _id: '445', is_active: true, name: 'Eldorado', country: '400' },
            { _id: '446', is_active: true, name: 'Esperanza', country: '400' },
            { _id: '447', is_active: true, name: 'Ezeiza', country: '400' },
            { _id: '448', is_active: true, name: 'Ezpeleta', country: '400' },
            { _id: '449', is_active: true, name: 'Florencio Varela', country: '400' },
            { _id: '450', is_active: true, name: 'Florida (no es ciudad sino barrio)', country: '400' },
            { _id: '451', is_active: true, name: 'General Pico', country: '400' },
            { _id: '452', is_active: true, name: 'General Roca', country: '400' },
            { _id: '453', is_active: true, name: 'General Rodríguez', country: '400' },
            { _id: '454', is_active: true, name: 'Glew', country: '400' },
            { _id: '455', is_active: true, name: 'Gobernador Julio A Costa', country: '400' },
            { _id: '456', is_active: true, name: 'Godoy Cruz', country: '400' },
            { _id: '457', is_active: true, name: 'González Catán', country: '400' },
            { _id: '458', is_active: true, name: 'Goya', country: '400' },
            { _id: '459', is_active: true, name: 'Grand Bourg', country: '400' },
            { _id: '460', is_active: true, name: 'Gregorio de Laferrere', country: '400' },
            { _id: '461', is_active: true, name: 'Gualeguaychú', country: '400' },
            { _id: '462', is_active: true, name: 'Guaymallén', country: '400' },
            { _id: '463', is_active: true, name: 'Isidro Casanova', country: '400' },
            { _id: '464', is_active: true, name: 'Ituzaingó', country: '400' },
            { _id: '465', is_active: true, name: 'José C. Paz', country: '400' },
            { _id: '466', is_active: true, name: 'Junín', country: '400' },
            { _id: '467', is_active: true, name: 'La Banda', country: '400' },
            { _id: '468', is_active: true, name: 'La Plata', country: '400' },
            { _id: '469', is_active: true, name: 'La Tablada', country: '400' },
            { _id: '470', is_active: true, name: 'Lanús', country: '400' },
            { _id: '471', is_active: true, name: 'Las Heras', country: '400' },
            { _id: '472', is_active: true, name: 'Libertad', country: '400' },
            { _id: '473', is_active: true, name: 'Lomas de Zamora', country: '400' },
            { _id: '474', is_active: true, name: 'Lomas del Mirador', country: '400' },
            { _id: '475', is_active: true, name: 'Longchamps', country: '400' },
            { _id: '476', is_active: true, name: 'Los Polvorines', country: '400' },
            { _id: '477', is_active: true, name: 'Luján', country: '400' },
            { _id: '478', is_active: true, name: 'Luján de Cuyo', country: '400' },
            { _id: '479', is_active: true, name: 'Maipú', country: '400' },
            { _id: '480', is_active: true, name: 'Mar del Plata', country: '400' },
            { _id: '481', is_active: true, name: 'Mariano Acosta', country: '400' },
            { _id: '482', is_active: true, name: 'Martínez', country: '400' },
            { _id: '483', is_active: true, name: 'Mercedes', country: '400' },
            { _id: '484', is_active: true, name: 'Merlo', country: '400' },
            { _id: '485', is_active: true, name: 'Monte Chingolo', country: '400' },
            { _id: '486', is_active: true, name: 'Monte Grande', country: '400' },
            { _id: '487', is_active: true, name: 'Moreno', country: '400' },
            { _id: '488', is_active: true, name: 'Morón', country: '400' },
            { _id: '489', is_active: true, name: 'Necochea', country: '400' },
            { _id: '490', is_active: true, name: 'Oberá', country: '400' },
            { _id: '491', is_active: true, name: 'Olavarría', country: '400' },
            { _id: '492', is_active: true, name: 'Olivos (no es ciudad sino barrio)', country: '400' },
            { _id: '493', is_active: true, name: 'Palpalá', country: '400' },
            { _id: '494', is_active: true, name: 'Paraná', country: '400' },
            { _id: '495', is_active: true, name: 'Pergamino', country: '400' },
            { _id: '496', is_active: true, name: 'Pilar', country: '400' },
            { _id: '497', is_active: true, name: 'Posadas', country: '400' },
            { _id: '498', is_active: true, name: 'Presidencia Roque Sáenz Peña', country: '400' },
            { _id: '499', is_active: true, name: 'Presidente Perón', country: '400' },
            { _id: '4100', is_active: true, name: 'Puerto Madryn', country: '400' },
            { _id: '4101', is_active: true, name: 'Punta Alta', country: '400' },
            { _id: '4102', is_active: true, name: 'Quilmes', country: '400' },
            { _id: '4103', is_active: true, name: 'Rafael Calzada', country: '400' },
            { _id: '4104', is_active: true, name: 'Rafael Castillo', country: '400' },
            { _id: '4105', is_active: true, name: 'Rafaela', country: '400' },
            { _id: '4106', is_active: true, name: 'Ramos Mejía', country: '400' },
            { _id: '4107', is_active: true, name: 'Rawson', country: '400' },
            { _id: '4108', is_active: true, name: 'Reconquista', country: '400' },
            { _id: '4109', is_active: true, name: 'Remedios de Escalada (Partido de Lanús)', country: '400' },
            { _id: '4110', is_active: true, name: 'Resistencia', country: '400' },
            { _id: '4111', is_active: true, name: 'Río Gallegos', country: '400' },
            { _id: '4112', is_active: true, name: 'Río Grande', country: '400' },
            { _id: '4113', is_active: true, name: 'Rivadavia', country: '400' },
            { _id: '4114', is_active: true, name: 'Rosario', country: '400' },
            { _id: '4115', is_active: true, name: 'San Carlos de Bariloche', country: '400' },
            { _id: '4116', is_active: true, name: 'San Fernando', country: '400' },
            { _id: '4117', is_active: true, name: 'San Fernando del Valle de Catamarca', country: '400' },
            { _id: '4118', is_active: true, name: 'San Francisco', country: '400' },
            { _id: '4119', is_active: true, name: 'San Francisco Solano', country: '400' },
            { _id: '4120', is_active: true, name: 'San Isidro', country: '400' },
            { _id: '4121', is_active: true, name: 'San Justo', country: '400' },
            { _id: '4122', is_active: true, name: 'San Martín', country: '400' },
            { _id: '4123', is_active: true, name: 'San Miguel', country: '400' },
            { _id: '4124', is_active: true, name: 'San Miguel de Tucumán', country: '400' },
            { _id: '4125', is_active: true, name: 'San Nicolás de los Arroyos', country: '400' },
            { _id: '4126', is_active: true, name: 'San Pedro de Jujuy', country: '400' },
            { _id: '4127', is_active: true, name: 'San Rafael', country: '400' },
            { _id: '4128', is_active: true, name: 'San Ramón de la Nueva Orán', country: '400' },
            { _id: '4129', is_active: true, name: 'San Salvador de Jujuy', country: '400' },
            { _id: '4130', is_active: true, name: 'Santa Rosa', country: '400' },
            { _id: '4131', is_active: true, name: 'Sarandí', country: '400' },
            { _id: '4132', is_active: true, name: 'Tandil', country: '400' },
            { _id: '4133', is_active: true, name: 'Tartagal', country: '400' },
            { _id: '4134', is_active: true, name: 'Temperley', country: '400' },
            { _id: '4135', is_active: true, name: 'Trelew', country: '400' },
            { _id: '4136', is_active: true, name: 'Tres Arroyos', country: '400' },
            { _id: '4137', is_active: true, name: 'Trujui', country: '400' },
            { _id: '4138', is_active: true, name: 'Ushuaia', country: '400' },
            { _id: '4139', is_active: true, name: 'Venado Tuerto', country: '400' },
            { _id: '4140', is_active: true, name: 'Vicente López', country: '400' },
            { _id: '4141', is_active: true, name: 'Viedma', country: '400' },
            { _id: '4142', is_active: true, name: 'Villa Carlos Paz', country: '400' },
            { _id: '4143', is_active: true, name: 'Villa Centenario', country: '400' },
            { _id: '4144', is_active: true, name: 'Villa Dolores', country: '400' },
            { _id: '4145', is_active: true, name: 'Villa Domínico', country: '400' },
            { _id: '4146', is_active: true, name: 'Villa Gobernador Gálvez', country: '400' },
            { _id: '4147', is_active: true, name: 'Villa Luzuriaga', country: '400' },
            { _id: '4148', is_active: true, name: 'Villa Madero', country: '400' },
            { _id: '4149', is_active: true, name: 'Villa María', country: '400' },
            { _id: '4150', is_active: true, name: 'Villa Mariano Moreno-El Colmenar', country: '400' },
            { _id: '4151', is_active: true, name: 'Villa Mercedes', country: '400' },
            { _id: '4152', is_active: true, name: 'Villa Tesei', country: '400' },
            { _id: '4153', is_active: true, name: 'Virrey del Pino', country: '400' },
            { _id: '4154', is_active: true, name: 'Wilde', country: '400' },
            { _id: '4155', is_active: true, name: 'William Morris', country: '400' },
            { _id: '4156', is_active: true, name: 'Yerba Buena/Marcos Paz', country: '400' },
            { _id: '4157', is_active: true, name: 'Zárate', country: '400' },
            { _id: '6001', is_active: true, name: 'Abancay', country: '6000' },
            { _id: '6002', is_active: true, name: 'Andahuaylas', country: '6000' },
            { _id: '6003', is_active: true, name: 'Arequipa', country: '6000' },
            { _id: '6004', is_active: true, name: 'Ayacucho', country: '6000' },
            { _id: '6005', is_active: true, name: 'Bagua', country: '6000' },
            { _id: '6006', is_active: true, name: 'Bagua Grande', country: '6000' },
            { _id: '6007', is_active: true, name: 'Barranca', country: '6000' },
            { _id: '6008', is_active: true, name: 'Cajamarca', country: '6000' },
            { _id: '6009', is_active: true, name: 'Cañete', country: '6000' },
            { _id: '6010', is_active: true, name: 'Casa Grande', country: '6000' },
            { _id: '6011', is_active: true, name: 'Casma', country: '6000' },
            { _id: '6012', is_active: true, name: 'Cerro de Pasco', country: '6000' },
            { _id: '6013', is_active: true, name: 'Chachapoyas', country: '6000' },
            { _id: '6014', is_active: true, name: 'Chancay', country: '6000' },
            { _id: '6015', is_active: true, name: 'Chanchamayo', country: '6000' },
            { _id: '6016', is_active: true, name: 'Chepén', country: '6000' },
            { _id: '6017', is_active: true, name: 'Chiclayo', country: '6000' },
            { _id: '6018', is_active: true, name: 'Chimbote', country: '6000' },
            { _id: '6019', is_active: true, name: 'Chincha Alta', country: '6000' },
            { _id: '6020', is_active: true, name: 'Chulucanas', country: '6000' },
            { _id: '6021', is_active: true, name: 'Cusco', country: '6000' },
            { _id: '6022', is_active: true, name: 'Espinar', country: '6000' },
            { _id: '6023', is_active: true, name: 'Ferreñafe', country: '6000' },
            { _id: '6024', is_active: true, name: 'Guadalupe', country: '6000' },
            { _id: '6025', is_active: true, name: 'Huacho', country: '6000' },
            { _id: '6026', is_active: true, name: 'Huamachuco', country: '6000' },
            { _id: '6027', is_active: true, name: 'Huancavelica', country: '6000' },
            { _id: '6028', is_active: true, name: 'Huancayo', country: '6000' },
            { _id: '6029', is_active: true, name: 'Huanta', country: '6000' },
            { _id: '6030', is_active: true, name: 'Huánuco', country: '6000' },
            { _id: '6031', is_active: true, name: 'Huaral', country: '6000' },
            { _id: '6032', is_active: true, name: 'Huaraz', country: '6000' },
            { _id: '6033', is_active: true, name: 'Huaura', country: '6000' },
            { _id: '6034', is_active: true, name: 'Ica', country: '6000' },
            { _id: '6035', is_active: true, name: 'Ilave', country: '6000' },
            { _id: '6036', is_active: true, name: 'Ilo', country: '6000' },
            { _id: '6037', is_active: true, name: 'imperial', country: '6000' },
            { _id: '6038', is_active: true, name: 'Iquitos', country: '6000' },
            { _id: '6039', is_active: true, name: 'Jaén', country: '6000' },
            { _id: '6040', is_active: true, name: 'Juanjuí', country: '6000' },
            { _id: '6041', is_active: true, name: 'Juliaca', country: '6000' },
            { _id: '6042', is_active: true, name: 'La Arena', country: '6000' },
            { _id: '6043', is_active: true, name: 'La Unión', country: '6000' },
            { _id: '6044', is_active: true, name: 'Lambayeque', country: '6000' },
            { _id: '6045', is_active: true, name: 'Lima', country: '6000' },
            { _id: '6046', is_active: true, name: 'Majes', country: '6000' },
            { _id: '6047', is_active: true, name: 'Mala', country: '6000' },
            { _id: '6048', is_active: true, name: 'Marcavelica', country: '6000' },
            { _id: '6049', is_active: true, name: 'Mollendo', country: '6000' },
            { _id: '6050', is_active: true, name: 'Monsefú', country: '6000' },
            { _id: '6051', is_active: true, name: 'Moquegua', country: '6000' },
            { _id: '6052', is_active: true, name: 'Moyobamba', country: '6000' },
            { _id: '6053', is_active: true, name: 'Nazca', country: '6000' },
            { _id: '6054', is_active: true, name: 'Nueva Cajamarca', country: '6000' },
            { _id: '6055', is_active: true, name: 'Pacasmayo', country: '6000' },
            { _id: '6056', is_active: true, name: 'Paita', country: '6000' },
            { _id: '6057', is_active: true, name: 'Perené', country: '6000' },
            { _id: '6058', is_active: true, name: 'Pichanaqui', country: '6000' },
            { _id: '6059', is_active: true, name: 'Pisco', country: '6000' },
            { _id: '6060', is_active: true, name: 'Piura', country: '6000' },
            { _id: '6061', is_active: true, name: 'Pucallpa', country: '6000' },
            { _id: '6062', is_active: true, name: 'Puerto Maldonado', country: '6000' },
            { _id: '6063', is_active: true, name: 'Puno', country: '6000' },
            { _id: '6064', is_active: true, name: 'Querecotillo', country: '6000' },
            { _id: '6065', is_active: true, name: 'Quillabamba', country: '6000' },
            { _id: '6066', is_active: true, name: 'Requena', country: '6000' },
            { _id: '6067', is_active: true, name: 'Satipo', country: '6000' },
            { _id: '6068', is_active: true, name: 'Sechura', country: '6000' },
            { _id: '6069', is_active: true, name: 'Sicuani', country: '6000' },
            { _id: '6070', is_active: true, name: 'Sullana', country: '6000' },
            { _id: '6071', is_active: true, name: 'Tacna', country: '6000' },
            { _id: '6072', is_active: true, name: 'Talara', country: '6000' },
            { _id: '6073', is_active: true, name: 'Tarapoto', country: '6000' },
            { _id: '6074', is_active: true, name: 'Tarma', country: '6000' },
            { _id: '6075', is_active: true, name: 'Tingo María', country: '6000' },
            { _id: '6076', is_active: true, name: 'Trujillo', country: '6000' },
            { _id: '6077', is_active: true, name: 'Tumán', country: '6000' },
            { _id: '6078', is_active: true, name: 'Tumbes', country: '6000' },
            { _id: '6079', is_active: true, name: 'Virú', country: '6000' },
            { _id: '6080', is_active: true, name: 'Yurimaguas', country: '6000' },
        ];
        cities.forEach((city) => city_collection_1.Cities.insert(city));
    }
}
exports.loadCities = loadCities;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cooking-time.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/cooking-time.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cooking_time_collection_1 = require("../../../../both/collections/general/cooking-time.collection");
function loadCookingTimes() {
    if (cooking_time_collection_1.CookingTimes.find().cursor.count() === 0) {
        const cooking_times = [
            { _id: "10", cooking_time: "5 min aprox" },
            { _id: "20", cooking_time: "15 min aprox" },
            { _id: "30", cooking_time: "30 min aprox" },
            { _id: "40", cooking_time: "45 min aprox" },
            { _id: "50", cooking_time: "1 h aprox" },
            { _id: "60", cooking_time: "1 h 15 min aprox" },
            { _id: "70", cooking_time: "1 h 30 min aprox" },
            { _id: "80", cooking_time: "1 h 45 min aprox" },
            { _id: "90", cooking_time: "2 h aprox" },
            { _id: "100", cooking_time: "+ 2 h aprox" }
        ];
        cooking_times.forEach((cooking) => cooking_time_collection_1.CookingTimes.insert(cooking));
    }
}
exports.loadCookingTimes = loadCookingTimes;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"countries.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/countries.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const country_collection_1 = require("../../../../both/collections/general/country.collection");
function loadCountries() {
    if (country_collection_1.Countries.find().cursor.count() === 0) {
        const countries = [
            { _id: '100', is_active: false, name: 'COUNTRIES.ALBANIA', alfaCode2: 'AL', alfaCode3: 'ALB', numericCode: '008', indicative: '(+ 355)', currencyId: '270', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '200', is_active: false, name: 'COUNTRIES.GERMANY', alfaCode2: 'DE', alfaCode3: 'DEU', numericCode: '276', indicative: '(+ 49)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '300', is_active: false, name: 'COUNTRIES.ANDORRA', alfaCode2: 'AD', alfaCode3: 'AND', numericCode: '020', indicative: '(+ 376)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '400', is_active: false, name: 'COUNTRIES.ARGENTINA', alfaCode2: 'AR', alfaCode3: 'ARG', numericCode: '032', indicative: '(+ 54)', currencyId: '370', itemsWithDifferentTax: false, queue: ["4", "5"], establishment_price: 117, tablePrice: 3, cronValidateActive: '1 0 6 * *', cronChangeFreeDays: '0 0 1 * *', cronEmailChargeSoon: '30 17 28 * *', cronEmailExpireSoon: '30 17 3 * *', cronEmailRestExpired: '10 0 6 * *', max_number_tables: 100, cronPointsExpire: '' },
            { _id: '500', is_active: false, name: 'COUNTRIES.ARMENIA', alfaCode2: 'AM', alfaCode3: 'ARM', numericCode: '051', indicative: '(+ 374)', currencyId: '190', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '600', is_active: false, name: 'COUNTRIES.AUSTRIA', alfaCode2: 'AT', alfaCode3: 'AUT', numericCode: '040', indicative: '(+ 43)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '700', is_active: false, name: 'COUNTRIES.AZERBAIJAN', alfaCode2: 'AZ', alfaCode3: 'AZE', numericCode: '031', indicative: '(+ 994)', currencyId: '350', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '800', is_active: false, name: 'COUNTRIES.BELGIUM', alfaCode2: 'BE', alfaCode3: 'BEL', numericCode: '056', indicative: '(+ 32)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '900', is_active: false, name: 'COUNTRIES.BELIZE', alfaCode2: 'BZ', alfaCode3: 'BLZ', numericCode: '084', indicative: '(+ 501)', currencyId: '130', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1000', is_active: false, name: 'COUNTRIES.BERMUDAS', alfaCode2: 'BM', alfaCode3: 'BMU', numericCode: '060', indicative: '(+ 1004)', currencyId: '140', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1100', is_active: false, name: 'COUNTRIES.BELARUS', alfaCode2: 'BY', alfaCode3: 'BLR', numericCode: '112', indicative: '(+ 375)', currencyId: '440', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1200', is_active: false, name: 'COUNTRIES.BOLIVIA', alfaCode2: 'BO', alfaCode3: 'BOL', numericCode: '068', indicative: '(+ 591)', currencyId: '30', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1300', is_active: false, name: 'COUNTRIES.BOSNIA_HERZEGOVINA', alfaCode2: 'BA', alfaCode3: 'BIH', numericCode: '070', indicative: '(+ 387)', currencyId: '360', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1400', is_active: false, name: 'COUNTRIES.BRAZIL', alfaCode2: 'BR', alfaCode3: 'BRA', numericCode: '076', indicative: '(+ 55)', currencyId: '430', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1500', is_active: false, name: 'COUNTRIES.BULGARIA', alfaCode2: 'BG', alfaCode3: 'BGR', numericCode: '100', indicative: '(+ 359)', currencyId: '310', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1600', is_active: false, name: 'COUNTRIES.CANADA', alfaCode2: 'CA', alfaCode3: 'CAN', numericCode: '124', indicative: '(+ 001)', currencyId: '150', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1700', is_active: false, name: 'COUNTRIES.CHILE', alfaCode2: 'CL', alfaCode3: 'CHL', numericCode: '152', indicative: '(+ 56)', currencyId: '380', itemsWithDifferentTax: false, queue: ["2", "3"], establishment_price: 4300, tablePrice: 106, cronValidateActive: '1 0 6 * *', cronChangeFreeDays: '0 0 1 * *', cronEmailChargeSoon: '30 17 28 * *', cronEmailExpireSoon: '30 17 3 * *', cronEmailRestExpired: '10 0 6 * *', max_number_tables: 100, cronPointsExpire: '' },
            { _id: '1800', is_active: false, name: 'COUNTRIES.CYPRUS', alfaCode2: 'CY', alfaCode3: 'CYP', numericCode: '196', indicative: '(+357)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '1900', is_active: true, name: 'COUNTRIES.COLOMBIA', alfaCode2: 'CO', alfaCode3: 'COL', numericCode: '170', indicative: '(+ 57)', currencyId: '390', itemsWithDifferentTax: false, queue: ["0", "1"], establishment_price: 22000, tablePrice: 200, cronValidateActive: '1 0 6 * *', cronChangeFreeDays: '0 0 1 * *', cronEmailChargeSoon: '30 17 28 * *', cronEmailExpireSoon: '30 17 3 * *', cronEmailRestExpired: '10 0 6 * *', max_number_tables: 100, cronPointsExpire: '15 0 * * *' },
            { _id: '2000', is_active: false, name: 'COUNTRIES.COSTA_RICA', alfaCode2: 'CR', alfaCode3: 'CRI', numericCode: '188', indicative: '(+ 506)', currencyId: '40', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2100', is_active: false, name: 'COUNTRIES.CROATIA', alfaCode2: 'HR', alfaCode3: 'HRV', numericCode: '191', indicative: '(+ 385)', currencyId: '250', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2200', is_active: false, name: 'COUNTRIES.DENMARK', alfaCode2: 'DK', alfaCode3: 'DNK', numericCode: '208', indicative: '(+ 45)', currencyId: '70', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2300', is_active: false, name: 'COUNTRIES.ECUADOR', alfaCode2: 'EC', alfaCode3: 'ECU', numericCode: '218', indicative: '(+ 593)', currencyId: '160', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2400', is_active: false, name: 'COUNTRIES.EL_SALVADOR', alfaCode2: 'SV', alfaCode3: 'SLV', numericCode: '222', indicative: '(+ 503)', currencyId: '160', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2500', is_active: false, name: 'COUNTRIES.SLOVAKIA', alfaCode2: 'SK', alfaCode3: 'SVK', numericCode: '703', indicative: '(+ 421)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2600', is_active: false, name: 'COUNTRIES.SLOVENIA', alfaCode2: 'SI', alfaCode3: 'SVN', numericCode: '705', indicative: '(+ 386)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2700', is_active: false, name: 'COUNTRIES.SPAIN', alfaCode2: 'ES', alfaCode3: 'ESP', numericCode: '724', indicative: '(+ 34)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2800', is_active: false, name: 'COUNTRIES.UNITED_STATES', alfaCode2: 'US', alfaCode3: 'USA', numericCode: '840', indicative: '(+ 1)', currencyId: '160', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '2900', is_active: false, name: 'COUNTRIES.ESTONIA', alfaCode2: 'EE', alfaCode3: 'EST', numericCode: '233', indicative: '(+ 372)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3000', is_active: false, name: 'COUNTRIES.FINLAND', alfaCode2: 'FI', alfaCode3: 'FIN', numericCode: '246', indicative: '(+ 358)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3100', is_active: false, name: 'COUNTRIES.FRANCE', alfaCode2: 'FR', alfaCode3: 'FRA', numericCode: '250', indicative: '(+ 33)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3200', is_active: false, name: 'COUNTRIES.GEORGIA', alfaCode2: 'GE', alfaCode3: 'GEO', numericCode: '268', indicative: '(+ 995)', currencyId: '260', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3300', is_active: false, name: 'COUNTRIES.GREECE', alfaCode2: 'GR', alfaCode3: 'GRC', numericCode: '300', indicative: '(+ 30)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3400', is_active: false, name: 'COUNTRIES.GREENLAND', alfaCode2: 'GL', alfaCode3: 'GRL', numericCode: '304', indicative: '(+ 299)', currencyId: '70', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3500', is_active: false, name: 'COUNTRIES.GUATEMALA', alfaCode2: 'GT', alfaCode3: 'GTM', numericCode: '320', indicative: '(+ 502)', currencyId: '420', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3600', is_active: false, name: 'COUNTRIES.FRENCH_GUIANA', alfaCode2: 'GF', alfaCode3: 'GUF', numericCode: '254', indicative: '(+ 594)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3700', is_active: false, name: 'COUNTRIES.GUYANA', alfaCode2: 'GY', alfaCode3: 'GUY', numericCode: '328', indicative: '(+ 592)', currencyId: '170', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3800', is_active: false, name: 'COUNTRIES.HONDURAS', alfaCode2: 'HN', alfaCode3: 'HND', numericCode: '340', indicative: '(+ 504)', currencyId: '280', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '3900', is_active: false, name: 'COUNTRIES.HUNGARY', alfaCode2: 'HU', alfaCode3: 'HUN', numericCode: '348', indicative: '(+ 36)', currencyId: '210', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4000', is_active: false, name: 'COUNTRIES.IRELAND', alfaCode2: 'IE', alfaCode3: 'IRL', numericCode: '372', indicative: '(+ 353)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4100', is_active: false, name: 'COUNTRIES.ICELAND', alfaCode2: 'IS', alfaCode3: 'ISL', numericCode: '352', indicative: '(+ 354)', currencyId: '80', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4200', is_active: false, name: 'COUNTRIES.FALKLAND_ISLANDS', alfaCode2: 'FK', alfaCode3: 'FLK', numericCode: '238', indicative: '(+ 500)', currencyId: '330', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4300', is_active: false, name: 'COUNTRIES.ITALY', alfaCode2: 'IT', alfaCode3: 'ITA', numericCode: '380', indicative: '(+ 39)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4400', is_active: false, name: 'COUNTRIES.KAZAKHSTAN', alfaCode2: 'KZ', alfaCode3: 'KAZ', numericCode: '398', indicative: '(+ 731)', currencyId: '470', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4500', is_active: false, name: 'COUNTRIES.LATVIA', alfaCode2: 'LV', alfaCode3: 'LVA', numericCode: '428', indicative: '(+ 371)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4600', is_active: false, name: 'COUNTRIES.LIECHTENSTEIN', alfaCode2: 'LI', alfaCode3: 'LIE', numericCode: '438', indicative: '(+ 417)', currencyId: '220', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4700', is_active: false, name: 'COUNTRIES.LITHUANIA', alfaCode2: 'LT', alfaCode3: 'LTU', numericCode: '440', indicative: '(+ 370)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4800', is_active: false, name: 'COUNTRIES.LUXEMBOURG', alfaCode2: 'LU', alfaCode3: 'LUX', numericCode: '442', indicative: '(+ 352)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '4900', is_active: false, name: 'COUNTRIES.MACEDONIA', alfaCode2: 'MK', alfaCode3: 'MKD', numericCode: '807', indicative: '(+ 389)', currencyId: '110', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5000', is_active: false, name: 'COUNTRIES.MALTA', alfaCode2: 'MT', alfaCode3: 'MLT', numericCode: '470', indicative: '(+ 356)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5100', is_active: false, name: 'COUNTRIES.MEXICO', alfaCode2: 'MX', alfaCode3: 'MEX', numericCode: '484', indicative: '(+ 52)', currencyId: '400', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5200', is_active: false, name: 'COUNTRIES.MOLDAVIA', alfaCode2: 'MD', alfaCode3: 'MDA', numericCode: '498', indicative: '(+ 373)', currencyId: '290', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5300', is_active: false, name: 'COUNTRIES.MONACO', alfaCode2: 'MC', alfaCode3: 'MCO', numericCode: '492', indicative: '(+ 377)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5400', is_active: false, name: 'COUNTRIES.MONTENEGRO', alfaCode2: 'ME', alfaCode3: 'MNE', numericCode: '499', indicative: '(+ 382)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5500', is_active: false, name: 'COUNTRIES.NICARAGUA', alfaCode2: 'NI', alfaCode3: 'NIC', numericCode: '558', indicative: '(+ 505)', currencyId: '50', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5600', is_active: false, name: 'COUNTRIES.NORWAY', alfaCode2: 'NO', alfaCode3: 'NOR', numericCode: '578', indicative: '(+ 47)', currencyId: '90', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5700', is_active: false, name: 'COUNTRIES.NETHERLANDS', alfaCode2: 'NL', alfaCode3: 'NLD', numericCode: '528', indicative: '(+ 31)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5800', is_active: false, name: 'COUNTRIES.PANAMA', alfaCode2: 'PA', alfaCode3: 'PAN', numericCode: '591', indicative: '(+ 507)', currencyId: '10', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '5900', is_active: false, name: 'COUNTRIES.PARAGUAY', alfaCode2: 'PY', alfaCode3: 'PRY', numericCode: '600', indicative: '(+ 595)', currencyId: '240', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6000', is_active: false, name: 'COUNTRIES.PERU', alfaCode2: 'PE', alfaCode3: 'PER', numericCode: '604', indicative: '(+ 51)', currencyId: '460', itemsWithDifferentTax: false, queue: ["6", "7"], establishment_price: 22, tablePrice: 0.6, cronValidateActive: '1 0 6 * *', cronChangeFreeDays: '0 0 1 * *', cronEmailChargeSoon: '30 17 28 * *', cronEmailExpireSoon: '30 17 3 * *', cronEmailRestExpired: '10 0 6 * *', max_number_tables: 100, cronPointsExpire: '' },
            { _id: '6100', is_active: false, name: 'COUNTRIES.POLAND', alfaCode2: 'PL', alfaCode3: 'POL', numericCode: '616', indicative: '(+ 48)', currencyId: '480', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6200', is_active: false, name: 'COUNTRIES.PORTUGAL', alfaCode2: 'PT', alfaCode3: 'PRT', numericCode: '620', indicative: '(+ 351)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6300', is_active: false, name: 'COUNTRIES.UNITED_KINGDOM', alfaCode2: 'GB', alfaCode3: 'GBR', numericCode: '826', indicative: '(+ 44)', currencyId: '320', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6400', is_active: false, name: 'COUNTRIES.CZECH_REPUBLIC', alfaCode2: 'CZ', alfaCode3: 'CZE', numericCode: '203', indicative: '(+ 42)', currencyId: '60', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6500', is_active: false, name: 'COUNTRIES.ROMANIA', alfaCode2: 'RO', alfaCode3: 'ROU', numericCode: '642', indicative: '(+ 40)', currencyId: '300', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6600', is_active: false, name: 'COUNTRIES.RUSSIA', alfaCode2: 'RU', alfaCode3: 'RUS', numericCode: '643', indicative: '(+ 7)', currencyId: '450', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6700', is_active: false, name: 'COUNTRIES.SAN_MARINO', alfaCode2: 'SM', alfaCode3: 'SMR', numericCode: '674', indicative: '(+ 378)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6800', is_active: false, name: 'COUNTRIES.SAINT_PIERRE_MIQUELON', alfaCode2: 'PM', alfaCode3: 'SPM', numericCode: '666', indicative: '(+ 508)', currencyId: '200', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '6900', is_active: false, name: 'COUNTRIES.SERBIA', alfaCode2: 'RS', alfaCode3: 'SRB', numericCode: '688', indicative: '(+ 381)', currencyId: '120', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7000', is_active: false, name: 'COUNTRIES.SWEDEN', alfaCode2: 'SE', alfaCode3: 'SWE', numericCode: '752', indicative: '(+ 46)', currencyId: '100', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7100', is_active: false, name: 'COUNTRIES.SWITZERLAND', alfaCode2: 'CH', alfaCode3: 'CHE', numericCode: '756', indicative: '(+ 41)', currencyId: '220', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7200', is_active: false, name: 'COUNTRIES.SURINAM', alfaCode2: 'SR', alfaCode3: 'SUR', numericCode: '740', indicative: '(+ 597)', currencyId: '180', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7300', is_active: false, name: 'COUNTRIES.TURKEY', alfaCode2: 'TR', alfaCode3: 'TUR', numericCode: '792', indicative: '(+ 90)', currencyId: '340', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7400', is_active: false, name: 'COUNTRIES.UKRAINE', alfaCode2: 'UA', alfaCode3: 'UKR', numericCode: '804', indicative: '(+ 380)', currencyId: '230', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7500', is_active: false, name: 'COUNTRIES.URUGUAY', alfaCode2: 'UY', alfaCode3: 'URY', numericCode: '858', indicative: '(+ 598)', currencyId: '410', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' },
            { _id: '7600', is_active: false, name: 'COUNTRIES.VENEZUELA', alfaCode2: 'VE', alfaCode3: 'VEN', numericCode: '862', indicative: '(+ 58)', currencyId: '20', itemsWithDifferentTax: false, queue: [], establishment_price: 0, tablePrice: 0, cronValidateActive: '', cronChangeFreeDays: '', cronEmailChargeSoon: '', cronEmailExpireSoon: '', cronEmailRestExpired: '', max_number_tables: 0, cronPointsExpire: '' }
        ];
        countries.forEach((country) => country_collection_1.Countries.insert(country));
    }
}
exports.loadCountries = loadCountries;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"currencies.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/currencies.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const currency_collection_1 = require("../../../../both/collections/general/currency.collection");
function loadCurrencies() {
    if (currency_collection_1.Currencies.find().cursor.count() === 0) {
        const currencies = [
            { _id: '10', isActive: true, name: 'CURRENCIES.BALBOA', code: 'PAB', numericCode: '590', decimal: 0.01 },
            { _id: '20', isActive: true, name: 'CURRENCIES.BOLIVAR', code: 'VEF', numericCode: '937', decimal: 0.01 },
            { _id: '30', isActive: true, name: 'CURRENCIES.BOLIVIANO', code: 'BOB', numericCode: '068', decimal: 0.01 },
            { _id: '40', isActive: true, name: 'CURRENCIES.COSTA_RICA_COLON', code: 'CRC', numericCode: '188', decimal: 0.01 },
            { _id: '50', isActive: true, name: 'CURRENCIES.CORDOBA', code: 'NIO', numericCode: '558', decimal: 0.01 },
            { _id: '60', isActive: true, name: 'CURRENCIES.CZECH_REPUBLIC_KORUNA', code: 'CZK', numericCode: '203', decimal: 0.01 },
            { _id: '70', isActive: true, name: 'CURRENCIES.DENMARK_KRONE', code: 'DKK', numericCode: '208', decimal: 0.01 },
            { _id: '80', isActive: true, name: 'CURRENCIES.ICELAND_KRONA', code: 'ISK', numericCode: '352', decimal: 0 },
            { _id: '90', isActive: true, name: 'CURRENCIES.NORWAY_KRONE', code: 'NOK', numericCode: '578', decimal: 0.01 },
            { _id: '100', isActive: true, name: 'CURRENCIES.SWEDEN_KRONA', code: 'SEK', numericCode: '752', decimal: 0.01 },
            { _id: '110', isActive: true, name: 'CURRENCIES.DENAR', code: 'MKD', numericCode: '807', decimal: 0.01 },
            { _id: '120', isActive: true, name: 'CURRENCIES.SERBIA_DINAR', code: 'RSD', numericCode: '941', decimal: 0.01 },
            { _id: '130', isActive: true, name: 'CURRENCIES.BELIZE_DOLLAR', code: 'BZD', numericCode: '084', decimal: 0.01 },
            { _id: '140', isActive: true, name: 'CURRENCIES.BERMUDIAN_DOLLAR', code: 'BMD', numericCode: '060', decimal: 0.01 },
            { _id: '150', isActive: true, name: 'CURRENCIES.CANADIAN_DOLLAR', code: 'CAD', numericCode: '124', decimal: 0.01 },
            { _id: '160', isActive: true, name: 'CURRENCIES.UNITED_STATES_DOLLAR', code: 'USD', numericCode: '840', decimal: 0.01 },
            { _id: '170', isActive: true, name: 'CURRENCIES.GUYANA_DOLLAR', code: 'GYD', numericCode: '328', decimal: 0.01 },
            { _id: '180', isActive: true, name: 'CURRENCIES.SURINAME_DOLLAR', code: 'SRD', numericCode: '968', decimal: 0.01 },
            { _id: '190', isActive: true, name: 'CURRENCIES.ARMENIAM_DRAM', code: 'AMD', numericCode: '051', decimal: 0.01 },
            { _id: '200', isActive: true, name: 'CURRENCIES.EURO', code: 'EUR', numericCode: '978', decimal: 0.01 },
            { _id: '210', isActive: true, name: 'CURRENCIES.HUNGARY_FORINT', code: 'HUF', numericCode: '348', decimal: 0.01 },
            { _id: '220', isActive: true, name: 'CURRENCIES.FRANC', code: 'CHF', numericCode: '756', decimal: 0.01 },
            { _id: '230', isActive: true, name: 'CURRENCIES.UKRAINE_HRYVNIA', code: 'UAH', numericCode: '980', decimal: 0.01 },
            { _id: '240', isActive: true, name: 'CURRENCIES.GUARANI', code: 'PYG', numericCode: '600', decimal: 0 },
            { _id: '250', isActive: true, name: 'CURRENCIES.KUNA', code: 'HRK', numericCode: '191', decimal: 0.01 },
            { _id: '260', isActive: true, name: 'CURRENCIES.LARI', code: 'GEL', numericCode: '981', decimal: 0.01 },
            { _id: '270', isActive: true, name: 'CURRENCIES.LEK', code: 'ALL', numericCode: '008', decimal: 0.01 },
            { _id: '280', isActive: true, name: 'CURRENCIES.LEMPIRA', code: 'HNL', numericCode: '340', decimal: 0.01 },
            { _id: '290', isActive: true, name: 'CURRENCIES.MOLDOVA_LEU', code: 'MDL', numericCode: '498', decimal: 0.01 },
            { _id: '300', isActive: true, name: 'CURRENCIES.ROMANIAN_LEU', code: 'RON', numericCode: '946', decimal: 0.01 },
            { _id: '310', isActive: true, name: 'CURRENCIES.BULGARIA_LEV', code: 'BGN', numericCode: '975', decimal: 0.01 },
            { _id: '320', isActive: true, name: 'CURRENCIES.POUND_STERLING', code: 'GBP', numericCode: '826', decimal: 0.01 },
            { _id: '330', isActive: true, name: 'CURRENCIES.FALKLAND_ISLANDS_POUND', code: 'FKP', numericCode: '238', decimal: 0.01 },
            { _id: '340', isActive: true, name: 'CURRENCIES.TURKISH_LIRA', code: 'TRY', numericCode: '949', decimal: 0.01 },
            { _id: '350', isActive: true, name: 'CURRENCIES.AZERBAIJANI_MANAT', code: 'AZN', numericCode: '944', decimal: 0.01 },
            { _id: '360', isActive: true, name: 'CURRENCIES.CONVERTIBLE_MARK', code: 'BAM', numericCode: '977', decimal: 0.01 },
            { _id: '370', isActive: true, name: 'CURRENCIES.ARGENTINA_PESO', code: 'ARS', numericCode: '032', decimal: 0.01 },
            { _id: '380', isActive: true, name: 'CURRENCIES.CHILE_PESO', code: 'CLP', numericCode: '152', decimal: 0 },
            { _id: '390', isActive: true, name: 'CURRENCIES.COLOMBIA_PESO', code: 'COP', numericCode: '170', decimal: 0.01 },
            { _id: '400', isActive: true, name: 'CURRENCIES.MEXICO_PESO', code: 'MXN', numericCode: '484', decimal: 0.01 },
            { _id: '410', isActive: true, name: 'CURRENCIES.URUGUAY_PESO', code: 'UYU', numericCode: '858', decimal: 0.01 },
            { _id: '420', isActive: true, name: 'CURRENCIES.QUETZAL', code: 'GTQ', numericCode: '320', decimal: 0.01 },
            { _id: '430', isActive: true, name: 'CURRENCIES.BRAZILIAN_REAL', code: 'BRL', numericCode: '986', decimal: 0.01 },
            { _id: '440', isActive: true, name: 'CURRENCIES.BELARUSIAN_RUBLE', code: 'BYR', numericCode: '974', decimal: 0 },
            { _id: '450', isActive: true, name: 'CURRENCIES.RUSSIAN_RUBLE', code: 'RUB', numericCode: '643', decimal: 0.01 },
            { _id: '460', isActive: true, name: 'CURRENCIES.SOL', code: 'PEN', numericCode: '604', decimal: 0.01 },
            { _id: '470', isActive: true, name: 'CURRENCIES.TENGE', code: 'KZT', numericCode: '398', decimal: 0.01 },
            { _id: '480', isActive: true, name: 'CURRENCIES.ZLOTY', code: 'PLN', numericCode: '985', decimal: 0.01 }
        ];
        currencies.forEach((cur) => currency_collection_1.Currencies.insert(cur));
    }
}
exports.loadCurrencies = loadCurrencies;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email-contents.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/email-contents.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const email_content_collection_1 = require("../../../../both/collections/general/email-content.collection");
function loadEmailContents() {
    if (email_content_collection_1.EmailContents.find().cursor.count() === 0) {
        const emailContents = [
            {
                _id: '100',
                language: 'en',
                lang_dictionary: [
                    { label: 'chargeSoonEmailSubjectVar', traduction: 'Your monthly comeygana service will ends soon' },
                    { label: 'greetVar', traduction: 'Hello' },
                    { label: 'welcomeMsgVar', traduction: 'We got a request to reset you password, if it was you click the button above.' },
                    { label: 'btnTextVar', traduction: 'Reset' },
                    { label: 'beforeMsgVar', traduction: 'If you do not want to change the password, ignore this message.' },
                    { label: 'regardVar', traduction: 'Thanks, comeygana team.' },
                    { label: 'followMsgVar', traduction: 'Follow us on social networks' },
                    { label: 'reminderChargeSoonMsgVar', traduction: 'Remember that your monthly comeygana service for: ' },
                    { label: 'reminderChargeSoonMsgVar2', traduction: 'Ends on: ' },
                    { label: 'instructionchargeSoonMsgVar', traduction: 'If you want to continue using all the system features, entering with your email or username and select the menu Establishments > Administration > Edit establishment > # Tables' },
                    { label: 'reminderExpireSoonMsgVar', traduction: 'Remember that your monthly comeygana service for: ' },
                    { label: 'reminderExpireSoonMsgVar2', traduction: 'Expires on: ' },
                    { label: 'reminderExpireSoonMsgVar3', traduction: 'If you want to continue using all the system features, entering with your email or username and select the menu Payments > Monthly payment' },
                    { label: 'expireSoonEmailSubjectVar', traduction: 'Your comeygana service will expire soon' },
                    { label: 'reminderRestExpiredVar', traduction: 'Your monthly comeygana service for: ' },
                    { label: 'reminderRestExpiredVar2', traduction: 'Has expired' },
                    { label: 'reminderRestExpiredVar3', traduction: 'If you want to continue using all the system features, entering with your email or username and select the menu Payments > Reactivate ' },
                    { label: 'restExpiredEmailSubjectVar', traduction: 'Your comeygana service has expired' },
                    { label: 'resetPasswordSubjectVar', traduction: 'Reset your password on' }
                ]
            },
            {
                _id: '200',
                language: 'es',
                lang_dictionary: [
                    { label: 'chargeSoonEmailSubjectVar', traduction: 'Tu servicio mensual de comeygana terminará pronto' },
                    { label: 'greetVar', traduction: 'Hola' },
                    { label: 'welcomeMsgVar', traduction: 'Hemos recibido una petición para cambiar tu contraseña, si fuiste tu haz click en el botón abajo' },
                    { label: 'btnTextVar', traduction: 'Cambiar' },
                    { label: 'beforeMsgVar', traduction: 'Si no quieres cambiar la contraseña, ignora este mensaje.' },
                    { label: 'regardVar', traduction: 'Gracias, equipo comeygana' },
                    { label: 'followMsgVar', traduction: 'Siguenos en redes sociales' },
                    { label: 'reminderChargeSoonMsgVar', traduction: 'Recuerda que tu servicio mensual de comeygana para: ' },
                    { label: 'reminderChargeSoonMsgVar2', traduction: 'Finaliza el: ' },
                    { label: 'instructionchargeSoonMsgVar', traduction: 'Si deseas seguir usando todas las funcionalidades del sistema, ingresa con tu usuario o correo y selecciona el menú Establecimientos > Administración > Editar establecimiento > # Mesas' },
                    { label: 'reminderExpireSoonMsgVar', traduction: 'Recuerda que tu servicio mensual de comeygana para: ' },
                    { label: 'reminderExpireSoonMsgVar2', traduction: 'Expira el: ' },
                    { label: 'reminderExpireSoonMsgVar3', traduction: 'Si deseas seguir usando todas las funcionalidades del sistema, ingresa con tu usuario o correo y selecciona el menú Pagos > Pago mensual' },
                    { label: 'expireSoonEmailSubjectVar', traduction: 'Tu servicio comeygana expirará pronto' },
                    { label: 'reminderRestExpiredVar', traduction: 'Tu servicio mensual de comeygana para: ' },
                    { label: 'reminderRestExpiredVar2', traduction: 'ha expirado' },
                    { label: 'reminderRestExpiredVar3', traduction: 'Si deseas seguir usando todas las funcionalidades del sistema, ingresa con tu usuario o correo y selecciona la opción Pagos > Reactivar ' },
                    { label: 'restExpiredEmailSubjectVar', traduction: 'Tu servicio de comeygana ha expirado' },
                    { label: 'resetPasswordSubjectVar', traduction: 'Cambio de contraseña en' }
                ]
            }
        ];
        emailContents.forEach((emailContent) => email_content_collection_1.EmailContents.insert(emailContent));
    }
}
exports.loadEmailContents = loadEmailContents;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hours.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/hours.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hours_collection_1 = require("../../../../both/collections/general/hours.collection");
function loadHours() {
    if (hours_collection_1.Hours.find().cursor.count() === 0) {
        const hours = [
            { hour: '00:00' },
            { hour: '00:30' },
            { hour: '01:00' },
            { hour: '01:30' },
            { hour: '02:00' },
            { hour: '02:30' },
            { hour: '03:00' },
            { hour: '03:30' },
            { hour: '04:00' },
            { hour: '04:30' },
            { hour: '05:00' },
            { hour: '05:30' },
            { hour: '06:00' },
            { hour: '06:30' },
            { hour: '07:00' },
            { hour: '07:30' },
            { hour: '08:00' },
            { hour: '08:30' },
            { hour: '09:00' },
            { hour: '09:30' },
            { hour: '10:00' },
            { hour: '10:30' },
            { hour: '11:00' },
            { hour: '11:30' },
            { hour: '12:00' },
            { hour: '12:30' },
            { hour: '13:00' },
            { hour: '13:30' },
            { hour: '14:00' },
            { hour: '14:30' },
            { hour: '15:00' },
            { hour: '15:30' },
            { hour: '16:00' },
            { hour: '16:30' },
            { hour: '17:00' },
            { hour: '17:30' },
            { hour: '18:00' },
            { hour: '18:30' },
            { hour: '19:00' },
            { hour: '19:30' },
            { hour: '20:00' },
            { hour: '20:30' },
            { hour: '21:00' },
            { hour: '21:30' },
            { hour: '22:00' },
            { hour: '22:30' },
            { hour: '23:00' },
            { hour: '23:30' }
        ];
        hours.forEach((hour) => hours_collection_1.Hours.insert(hour));
    }
}
exports.loadHours = loadHours;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"languages.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/languages.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const language_collection_1 = require("../../../../both/collections/general/language.collection");
function loadLanguages() {
    if (language_collection_1.Languages.find().cursor.count() === 0) {
        const languages = [{
                _id: "1000",
                is_active: true,
                language_code: 'es',
                name: 'Español',
                image: null
            }, {
                _id: "2000",
                is_active: true,
                language_code: 'en',
                name: 'English',
                image: null
            }, {
                _id: "3000",
                is_active: false,
                language_code: 'fr',
                name: 'Français',
                image: null
            }, {
                _id: "4000",
                is_active: false,
                language_code: 'pt',
                name: 'Portuguese',
                image: null
            }, {
                _id: "5000",
                is_active: false,
                language_code: 'it',
                name: 'Italiano',
                image: null
            } /*,{
                    _id: "6000",
                    is_active: true,
                    language_code: 'al',
                    name: 'Deutsch',
                    image: null
                }*/
        ];
        languages.forEach((language) => language_collection_1.Languages.insert(language));
    }
}
exports.loadLanguages = loadLanguages;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"parameters.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/parameters.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parameter_collection_1 = require("../../../../both/collections/general/parameter.collection");
function loadParameters() {
    if (parameter_collection_1.Parameters.find().cursor.count() === 0) {
        const parameters = [
            { _id: '100', name: 'start_payment_day', value: '1', description: 'initial day of month to validate client payment' },
            { _id: '200', name: 'end_payment_day', value: '5', description: 'final day of month to validate client payment' },
            { _id: '300', name: 'from_email', value: 'comeygana <no-reply@comeygana.com>', description: 'default from account email to send messages' },
            { _id: '400', name: 'first_pay_discount', value: '50', description: 'discount in percent to service first pay' },
            { _id: '500', name: 'colombia_tax_iva', value: '19', description: 'Colombia tax iva to monthly comeygana payment' },
            { _id: '600', name: 'payu_script_p_tag', value: 'url(https://maf.pagosonline.net/ws/fp?id=', description: 'url for security script for payu form in <p> tag' },
            { _id: '700', name: 'payu_script_img_tag', value: 'https://maf.pagosonline.net/ws/fp/clear.png?id=', description: 'url for security script for payu form in <img> tag' },
            { _id: '800', name: 'payu_script_script_tag', value: 'https://maf.pagosonline.net/ws/fp/check.js?id=', description: 'url for security script for payu form in <script> tag' },
            { _id: '900', name: 'payu_script_object_tag', value: 'https://maf.pagosonline.net/ws/fp/fp.swf?id=', description: 'url for security script for payu form in <object> tag' },
            { _id: '1000', name: 'payu_payments_url_test', value: 'https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi', description: 'url for connect test payu payments API' },
            { _id: '2000', name: 'payu_reports_url_test', value: 'https://sandbox.api.payulatam.com/reports-api/4.0/service.cgi', description: 'url for connect test payu reports API' },
            { _id: '3000', name: 'ip_public_service_url', value: 'https://api.ipify.org?format=json', description: 'url for retrieve the client public ip' },
            { _id: '1100', name: 'company_name', value: 'Realbind S.A.S', description: 'Realbind company name for invoice' },
            { _id: '1150', name: 'company_phone', value: 'Tel: (57 1) 6959537', description: 'Realbind phone' },
            { _id: '1200', name: 'company_address', value: 'Cra 6 # 58-43 Of 201', description: 'Realbind company address' },
            { _id: '1300', name: 'company_country', value: 'Colombia', description: 'Realbind country location' },
            { _id: '1400', name: 'company_city', value: 'Bogotá', description: 'Realbind city location' },
            { _id: '1500', name: 'company_nit', value: 'NIT: 901.036.585-0', description: 'Realbind NIT' },
            { _id: '1510', name: 'company_regime', value: 'Régimen común', description: 'Realbind regime in Colombia' },
            { _id: '1520', name: 'company_contribution', value: 'No somos grandes contribuyentes', description: 'Realbind contribution in Colombia' },
            { _id: '1530', name: 'company_retainer', value: 'No somos autoretenedores por ventas ni servicios', description: 'Realbind retention in Colombia' },
            { _id: '1540', name: 'company_agent_retainer', value: 'No somos agentes retenedores de IVA e ICA', description: 'Realbind iva and ica agent retention in Colombia' },
            { _id: '1550', name: 'invoice_generated_msg', value: 'Factura emitida por computador', description: 'Invoice message for invoice' },
            { _id: '1600', name: 'iurest_url', value: 'https://www.comeygana.com', description: 'comeygana url page' },
            { _id: '1650', name: 'iurest_url_short', value: 'www.comeygana.com', description: 'comeygana url page short' },
            { _id: '1700', name: 'facebook_link', value: 'https://www.facebook.com', description: 'facebook link for comeygana' },
            { _id: '1800', name: 'twitter_link', value: 'https://www.twitter.com', description: 'twitter link for comeygana' },
            { _id: '1900', name: 'instagram_link', value: 'https://www.instagram.com', description: 'instagram link for comeygana' },
            { _id: '1610', name: 'iurest_img_url', value: 'https://www.comeygana.com/images/', description: 'comeygana images url' },
            { _id: '3100', name: 'ip_public_service_url2', value: 'https://ipinfo.io/json', description: 'url for retrieve the client public ip #2' },
            { _id: '3200', name: 'ip_public_service_url3', value: 'https://ifconfig.co/json', description: 'url for retrieve the client public ip #3' },
            { _id: '9000', name: 'payu_is_prod', value: 'false', description: 'Flag to enable to prod payu payment' },
            { _id: '9100', name: 'payu_test_state', value: 'APPROVED', description: 'Test state for payu payment transaction' },
            { _id: '9200', name: 'payu_reference_code', value: 'M0N_P_', description: 'Prefix for reference code on payu transactions' },
            { _id: '2100', name: 'max_user_penalties', value: '3', description: 'Max number of user penalties' },
            { _id: '2200', name: 'penalty_days', value: '30', description: 'User penalty days' },
            { _id: '8000', name: 'date_test_monthly_pay', value: 'March 5, 2018', description: 'Date test for monthly payment of comeygana service' },
            { _id: '10000', name: 'payu_payments_url_prod', value: 'https://api.payulatam.com/payments-api/4.0/service.cgi', description: 'url for connect prod payu payments API' },
            { _id: '20000', name: 'payu_reports_url_prod', value: 'https://api.payulatam.com/reports-api/4.0/service.cgi', description: 'url for connect prod payu reports API' },
            { _id: '8500', name: 'date_test_reactivate', value: 'January 6, 2018', description: 'Date test for reactivate restaurant for pay' },
            { _id: '30000', name: 'terms_url', value: 'http://www.tsti4t-1935943095.com/signin/', description: 'url to see terms and conditions' },
            { _id: '40000', name: 'policy_url', value: 'http://www.tsti4t-1935943095.com/signup/', description: 'url to see privacy policy' },
            { _id: '50000', name: 'QR_code_url', value: 'http://www.tsti4t-1935943095.com/qr?', description: 'This url redirect to page the comeygana/download when scanned QR code from other application' }
        ];
        parameters.forEach((parameter) => parameter_collection_1.Parameters.insert(parameter));
    }
}
exports.loadParameters = loadParameters;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paymentMethods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/paymentMethods.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const paymentMethod_collection_1 = require("../../../../both/collections/general/paymentMethod.collection");
function loadPaymentMethods() {
    if (paymentMethod_collection_1.PaymentMethods.find().cursor.count() === 0) {
        const payments = [
            { _id: "10", isActive: true, name: 'PAYMENT_METHODS.CASH' },
            { _id: "20", isActive: true, name: 'PAYMENT_METHODS.CREDIT_CARD' },
            { _id: "30", isActive: true, name: 'PAYMENT_METHODS.DEBIT_CARD' },
            { _id: "40", isActive: false, name: 'PAYMENT_METHODS.ONLINE' },
        ];
        payments.forEach((pay) => paymentMethod_collection_1.PaymentMethods.insert(pay));
    }
}
exports.loadPaymentMethods = loadPaymentMethods;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point-validity.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/point-validity.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const point_validity_collection_1 = require("../../../../both/collections/general/point-validity.collection");
function loadPointsValidity() {
    if (point_validity_collection_1.PointsValidity.find().cursor.count() === 0) {
        const poinst_validity = [
            { _id: "15", point_validity: "15" },
            { _id: "16", point_validity: "16" },
            { _id: "17", point_validity: "17" },
            { _id: "18", point_validity: "18" },
            { _id: "19", point_validity: "19" },
            { _id: "20", point_validity: "20" },
            { _id: "21", point_validity: "21" },
            { _id: "22", point_validity: "22" },
            { _id: "23", point_validity: "23" },
            { _id: "24", point_validity: "24" },
            { _id: "25", point_validity: "25" },
            { _id: "26", point_validity: "26" },
            { _id: "27", point_validity: "27" },
            { _id: "28", point_validity: "28" },
            { _id: "29", point_validity: "29" },
            { _id: "30", point_validity: "30" },
        ];
        poinst_validity.forEach((pnt_validity) => point_validity_collection_1.PointsValidity.insert(pnt_validity));
    }
}
exports.loadPointsValidity = loadPointsValidity;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/point.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const point_collection_1 = require("../../../../both/collections/general/point.collection");
function loadPoints() {
    if (point_collection_1.Points.find().cursor.count() === 0) {
        const points = [
            { _id: "5", point: "5 pts" },
            { _id: "10", point: "10 pts" },
            { _id: "15", point: "15 pts" },
            { _id: "20", point: "20 pts" },
            { _id: "25", point: "25 pts" },
            { _id: "30", point: "30 pts" },
            { _id: "35", point: "35 pts" },
            { _id: "40", point: "40 pts" },
            { _id: "45", point: "45 pts" },
            { _id: "50", point: "50 pts" },
            { _id: "55", point: "55 pts" },
            { _id: "60", point: "60 pts" },
            { _id: "65", point: "65 pts" },
            { _id: "70", point: "70 pts" },
            { _id: "75", point: "75 pts" },
            { _id: "80", point: "80 pts" },
            { _id: "85", point: "85 pts" },
            { _id: "90", point: "90 pts" },
            { _id: "95", point: "95 pts" },
            { _id: "100", point: "100 pts" }
        ];
        points.forEach((point) => point_collection_1.Points.insert(point));
    }
}
exports.loadPoints = loadPoints;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"type-of-food.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/general/type-of-food.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const type_of_food_collection_1 = require("../../../../both/collections/general/type-of-food.collection");
function loadTypesOfFood() {
    if (type_of_food_collection_1.TypesOfFood.find().cursor.count() === 0) {
        const types = [
            { _id: "10", type_of_food: "TYPE_OF_FOOD.GERMAN_FOOD" },
            { _id: "20", type_of_food: "TYPE_OF_FOOD.AMERICAN_FOOD" },
            { _id: "30", type_of_food: "TYPE_OF_FOOD.ARABIC_FOOD" },
            { _id: "40", type_of_food: "TYPE_OF_FOOD.ARGENTINE_FOOD" },
            { _id: "50", type_of_food: "TYPE_OF_FOOD.ASIAN_FOOD" },
            { _id: "60", type_of_food: "TYPE_OF_FOOD.BRAZILIAN_FOOD" },
            { _id: "70", type_of_food: "TYPE_OF_FOOD.HOMEMADE_FOOD" },
            { _id: "80", type_of_food: "TYPE_OF_FOOD.CHILEAN_FOOD" },
            { _id: "90", type_of_food: "TYPE_OF_FOOD.CHINESE_FOOD" },
            { _id: "100", type_of_food: "TYPE_OF_FOOD.COLOMBIAN_FOOD" },
            { _id: "110", type_of_food: "TYPE_OF_FOOD.COREAN_FOOD" },
            { _id: "120", type_of_food: "TYPE_OF_FOOD.MIDDLE_EASTERN_FOOD" },
            { _id: "130", type_of_food: "TYPE_OF_FOOD.SPANISH_FOOD" },
            { _id: "140", type_of_food: "TYPE_OF_FOOD.FRENCH_FOOD" },
            { _id: "150", type_of_food: "TYPE_OF_FOOD.FUSION_FOOD" },
            { _id: "160", type_of_food: "TYPE_OF_FOOD.GOURMET_FOOD" },
            { _id: "170", type_of_food: "TYPE_OF_FOOD.GREEK_FOOD" },
            { _id: "180", type_of_food: "TYPE_OF_FOOD.INDIAN_FOOD" },
            { _id: "190", type_of_food: "TYPE_OF_FOOD.INTERNATIONAL_FOOD" },
            { _id: "200", type_of_food: "TYPE_OF_FOOD.ITALIAN_FOOD" },
            { _id: "210", type_of_food: "TYPE_OF_FOOD.JAPANESE_FOOD" },
            { _id: "220", type_of_food: "TYPE_OF_FOOD.LATIN_AMERICAN_FOOD" },
            { _id: "230", type_of_food: "TYPE_OF_FOOD.MEDITERRANEAN_FOOD" },
            { _id: "240", type_of_food: "TYPE_OF_FOOD.MEXICAN_FOOD" },
            { _id: "250", type_of_food: "TYPE_OF_FOOD.ORGANIC_FOOD" },
            { _id: "260", type_of_food: "TYPE_OF_FOOD.PERUVIAN_FOOD" },
            { _id: "270", type_of_food: "TYPE_OF_FOOD.FAST_FOOD" },
            { _id: "280", type_of_food: "TYPE_OF_FOOD.THAI_FOOD" },
            { _id: "290", type_of_food: "TYPE_OF_FOOD.VEGETARIAN_FOOD" },
            { _id: "300", type_of_food: "TYPE_OF_FOOD.VIETNAMESE_FOOD" },
            { _id: "310", type_of_food: "TYPE_OF_FOOD.OTHERS" },
            { _id: "320", type_of_food: "TYPE_OF_FOOD.BARBECUE" },
            { _id: "330", type_of_food: "TYPE_OF_FOOD.PASTA" },
            { _id: "340", type_of_food: "TYPE_OF_FOOD.FISH_AND_SEAFOOD" },
            { _id: "350", type_of_food: "TYPE_OF_FOOD.PIZZA" },
            { _id: "360", type_of_food: "TYPE_OF_FOOD.SANDWICHES" },
            { _id: "370", type_of_food: "TYPE_OF_FOOD.SUSHI" },
            { _id: "380", type_of_food: "TYPE_OF_FOOD.VEGANISM" }
        ];
        types.forEach((type) => { type_of_food_collection_1.TypesOfFood.insert(type); });
    }
}
exports.loadTypesOfFood = loadTypesOfFood;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"payments":{"cc-payment-methods.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/payments/cc-payment-methods.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cc_payment_methods_collection_1 = require("../../../../both/collections/payment/cc-payment-methods.collection");
function loadCcPaymentMethods() {
    if (cc_payment_methods_collection_1.CcPaymentMethods.find().cursor.count() == 0) {
        const ccPaymentMethods = [
            { _id: '10', is_active: true, name: 'Visa', payu_code: 'VISA', logo_name: 'visa' },
            { _id: '20', is_active: true, name: 'Mastercard', payu_code: 'MASTERCARD', logo_name: 'mastercard' },
            { _id: '30', is_active: true, name: 'American Express', payu_code: 'AMEX', logo_name: 'amex' },
            { _id: '40', is_active: true, name: 'Diners Club', payu_code: 'DINERS', logo_name: 'diners' }
        ];
        ccPaymentMethods.forEach((ccPaymentMethod) => { cc_payment_methods_collection_1.CcPaymentMethods.insert(ccPaymentMethod); });
    }
}
exports.loadCcPaymentMethods = loadCcPaymentMethods;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoices-info.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/payments/invoices-info.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const invoices_info_collection_1 = require("../../../../both/collections/payment/invoices-info.collection");
function loadInvoicesInfo() {
    if (invoices_info_collection_1.InvoicesInfo.find().cursor.count() == 0) {
        const invoicesInfo = [
            {
                _id: '100',
                country_id: '1900',
                resolution_one: '310000089509',
                prefix_one: 'I4T',
                start_date_one: new Date('2017-08-31T00:00:00.00Z'),
                end_date_one: new Date('2017-10-31T00:00:00.00Z'),
                start_value_one: 422000,
                end_value_one: 1000000,
                resolution_two: null,
                prefix_two: null,
                start_date_two: null,
                end_date_two: null,
                start_value_two: null,
                end_value_two: null,
                enable_two: false,
                current_value: null,
                start_new_value: true
            }
        ];
        invoicesInfo.forEach((invoiceInfo) => invoices_info_collection_1.InvoicesInfo.insert(invoiceInfo));
    }
}
exports.loadInvoicesInfo = loadInvoicesInfo;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"remove-fixtures.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/fixtures/remove-fixtures.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const menu_collection_1 = require("../../../both/collections/auth/menu.collection");
const role_collection_1 = require("../../../both/collections/auth/role.collection");
const hours_collection_1 = require("../../../both/collections/general/hours.collection");
const currency_collection_1 = require("../../../both/collections/general/currency.collection");
const paymentMethod_collection_1 = require("../../../both/collections/general/paymentMethod.collection");
const country_collection_1 = require("../../../both/collections/general/country.collection");
const city_collection_1 = require("../../../both/collections/general/city.collection");
const language_collection_1 = require("../../../both/collections/general/language.collection");
const email_content_collection_1 = require("../../../both/collections/general/email-content.collection");
const parameter_collection_1 = require("../../../both/collections/general/parameter.collection");
const cc_payment_methods_collection_1 = require("../../../both/collections/payment/cc-payment-methods.collection");
const point_collection_1 = require("../../../both/collections/general/point.collection");
const cooking_time_collection_1 = require("../../../both/collections/general/cooking-time.collection");
const type_of_food_collection_1 = require("../../../both/collections/general/type-of-food.collection");
function removeFixtures() {
    /**
     * Remove Menus Collection
     */
    menu_collection_1.Menus.remove({});
    /**
     * Remove Roles Collection
     */
    role_collection_1.Roles.remove({});
    /**
     * Remove Hours Collection
     */
    hours_collection_1.Hours.remove({});
    /**
     * Remove Currencies Collection
     */
    currency_collection_1.Currencies.remove({});
    /**
     * Remove PaymentMethods Collection
     */
    paymentMethod_collection_1.PaymentMethods.remove({});
    /**
     * Remove Countries Collection
     */
    country_collection_1.Countries.remove({});
    /**
     * Remove Cities Collection
     */
    city_collection_1.Cities.remove({});
    /**
     * Remove Languages Collection
     */
    language_collection_1.Languages.remove({});
    /**
     * Remove EmailContents Collection
     */
    email_content_collection_1.EmailContents.remove({});
    /**
     * Remove Parameters Collection
     */
    parameter_collection_1.Parameters.remove({});
    /**
     * Remove CcPaymentMethods Collection
     */
    cc_payment_methods_collection_1.CcPaymentMethods.remove({});
    /**
     * Remove Points Collection
     */
    point_collection_1.Points.remove({});
    /**
     * Remove CookingTimes Collection
     */
    cooking_time_collection_1.CookingTimes.remove({});
    /**
     * Remove TypesOfFood Collection
     */
    type_of_food_collection_1.TypesOfFood.remove({});
}
exports.removeFixtures = removeFixtures;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"publications":{"auth":{"collaborators.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/auth/collaborators.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const check_1 = require("meteor/check");
const user_collection_1 = require("../../../../both/collections/auth/user.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
meteor_1.Meteor.publish('getUsersDetailsForEstablishment', function (_establishment_work) {
    if (_establishment_work) {
        return user_detail_collection_1.UserDetails.find({ establishment_work: _establishment_work });
    }
});
meteor_1.Meteor.publish('getUsersByEstablishment', function (_establishment_work) {
    if (_establishment_work) {
        let _lUserDetails = [];
        check_1.check(_establishment_work, String);
        user_detail_collection_1.UserDetails.collection.find({ establishment_work: _establishment_work }).fetch().forEach(function (usdet, index, arr) {
            _lUserDetails.push(usdet.user_id);
        });
        return user_collection_1.Users.find({ _id: { $in: _lUserDetails } });
    }
});
/**
 * Get users with role '200' by current establishment.
 * @param { string } _usrId
 */ ;
meteor_1.Meteor.publish('getWaitersByCurrentEstablishment', function (_usrId) {
    let _lUserDetail = user_detail_collection_1.UserDetails.find({ user_id: _usrId }).fetch()[0];
    if (_lUserDetail) {
        return user_detail_collection_1.UserDetails.find({ establishment_work: _lUserDetail.current_establishment, role_id: '200' });
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menus.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/auth/menus.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const menu_collection_1 = require("../../../../both/collections/auth/menu.collection");
meteor_1.Meteor.publish('getMenus', function () {
    return menu_collection_1.Menus.find({}, { sort: { order: 1 } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"roles.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/auth/roles.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const role_collection_1 = require("../../../../both/collections/auth/role.collection");
meteor_1.Meteor.publish('getRoleComplete', function () {
    return role_collection_1.Roles.find({});
});
meteor_1.Meteor.publish('getRoleCollaborators', function () {
    return role_collection_1.Roles.find({ _id: { $in: ["200", "300", "600"] } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-details.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/auth/user-details.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
meteor_1.Meteor.publish('getUsersDetails', function () {
    return user_detail_collection_1.UserDetails.find({});
});
meteor_1.Meteor.publish('getUserDetailsByUser', function (_userId) {
    check(_userId, String);
    return user_detail_collection_1.UserDetails.find({ user_id: _userId });
});
meteor_1.Meteor.publish('getUserDetailsByCurrentTable', function (_establishmentId, _tableId) {
    return user_detail_collection_1.UserDetails.find({ current_establishment: _establishmentId, current_table: _tableId });
});
/**
 * Meteor publication return users by establishments Id
 * @param {string[]} _pEstablishmentsId
 */
meteor_1.Meteor.publish('getUsersByEstablishmentsId', function (_pEstablishmentsId) {
    return user_detail_collection_1.UserDetails.find({ current_establishment: { $in: _pEstablishmentsId } });
});
/**
 * Meteor publication return users details by admin user
 */
meteor_1.Meteor.publish('getUserDetailsByAdminUser', function (_userId) {
    check(_userId, String);
    let _lEstablishmentsId = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: _userId }).fetch().forEach(function (establishment, index, arr) {
        _lEstablishmentsId.push(establishment._id);
    });
    return user_detail_collection_1.UserDetails.find({ current_establishment: { $in: _lEstablishmentsId } });
});
meteor_1.Meteor.publish('getUserDetailsByEstablishmentWork', function (_userId) {
    check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return user_detail_collection_1.UserDetails.find({ current_establishment: _lUserDetail.establishment_work });
    }
    else {
        return;
    }
});
/**
 * Meteor publication return establishment collaborators
 */
meteor_1.Meteor.publish('getUsersCollaboratorsByEstablishmentsId', function (_pEstablishmentsId) {
    return user_detail_collection_1.UserDetails.find({ establishment_work: { $in: _pEstablishmentsId } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"users.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/auth/users.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const user_collection_1 = require("../../../../both/collections/auth/user.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const check_1 = require("meteor/check");
meteor_1.Meteor.publish('getUserSettings', function () {
    return user_collection_1.Users.find({ _id: this.userId }, { fields: { username: 1, "services.profile.name": 1, "services.facebook": 1, "services.twitter": 1, "services.google": 1 } });
});
/**
 * Meteor publish, get all users
 */
meteor_1.Meteor.publish('getUsers', function () {
    return user_collection_1.Users.find({});
});
/**
 * Meteor publish. Get user by Id
 */
meteor_1.Meteor.publish('getUserByUserId', function (_usrId) {
    return user_collection_1.Users.find({ _id: _usrId });
});
/**
 * Meteor publication return users with establishment and table Id conditions
 * @param {string} _pEstablishmentId
 * @param {string} _pTableId
 */
meteor_1.Meteor.publish('getUserByTableId', function (_pEstablishmentId, _pTableId) {
    check_1.check(_pEstablishmentId, String);
    check_1.check(_pTableId, String);
    let _lUsers = [];
    user_detail_collection_1.UserDetails.collection.find({ current_establishment: _pEstablishmentId, current_table: _pTableId }).fetch().forEach(function (user, index, arr) {
        _lUsers.push(user.user_id);
    });
    return user_collection_1.Users.find({ _id: { $in: _lUsers } });
});
/**
 * Meteor publication return users by admin user Id
 */
meteor_1.Meteor.publish('getUsersByAdminUser', function (_pUserId) {
    check_1.check(_pUserId, String);
    let _lEstablishmentsId = [];
    let _lUsers = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: _pUserId }).fetch().forEach(function (establishment, index, arr) {
        _lEstablishmentsId.push(establishment._id);
    });
    user_detail_collection_1.UserDetails.collection.find({ current_establishment: { $in: _lEstablishmentsId } }).fetch().forEach(function (userDetail, index, arr) {
        _lUsers.push(userDetail.user_id);
    });
    return user_collection_1.Users.find({ _id: { $in: _lUsers } });
});
/**
 * Meteor publication return users with establishment condition
 * @param {string} _pEstablishmentId
 */
meteor_1.Meteor.publish('getUsersByEstablishmentId', function (_pEstablishmentId) {
    check_1.check(_pEstablishmentId, String);
    let _lUsers = [];
    user_detail_collection_1.UserDetails.collection.find({ current_establishment: _pEstablishmentId }).fetch().forEach(function (user, index, arr) {
        _lUsers.push(user.user_id);
    });
    return user_collection_1.Users.find({ _id: { $in: _lUsers } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"establishment":{"establishment.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/establishment.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
const payment_history_collection_1 = require("../../../../both/collections/payment/payment-history.collection");
/**
 * Meteor publication establishments with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('establishments', function (_userId) {
    check_1.check(_userId, String);
    return establishment_collection_1.Establishments.find({ creation_user: _userId });
});
/**
 * Meteor publications establishmentByCurrentUser
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getEstablishmentByCurrentUser', function (_userId) {
    check_1.check(_userId, String);
    var user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        return establishment_collection_1.Establishments.find({ _id: user_detail.current_establishment });
    }
    else {
        return;
    }
});
/**
 * Meteor publications establishmentByEstablishmentWork
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getEstablishmentByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    var user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        return establishment_collection_1.Establishments.find({ _id: user_detail.establishment_work });
    }
    else {
        return;
    }
});
/**
 * Meteor publication to find current establishments with no pay
 * @param {string} _userId
 */
meteor_1.Meteor.publish('currentEstablishmentsNoPayed', function (_userId) {
    check_1.check(_userId, String);
    let currentDate = new Date();
    let currentMonth = (currentDate.getMonth() + 1).toString();
    let currentYear = currentDate.getFullYear().toString();
    let historyPaymentRes = [];
    let establishmentsInitial = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: _userId, isActive: true, freeDays: false }).fetch().forEach(function (establishment, index, arr) {
        establishmentsInitial.push(establishment._id);
    });
    payment_history_collection_1.PaymentsHistory.collection.find({
        establishmentIds: {
            $in: establishmentsInitial
        }, month: currentMonth, year: currentYear, $or: [{ status: 'TRANSACTION_STATUS.APPROVED' }, { status: 'TRANSACTION_STATUS.PENDING' }]
    }).fetch().forEach(function (historyPayment, index, arr) {
        historyPayment.establishment_ids.forEach((establishment) => {
            historyPaymentRes.push(establishment);
        });
    });
    return establishment_collection_1.Establishments.find({ _id: { $nin: historyPaymentRes }, creation_user: _userId, isActive: true, freeDays: false });
});
/**
 * Meteor publication to find inactive establishments by user
 */
meteor_1.Meteor.publish('getInactiveEstablishments', function (_userId) {
    check_1.check(_userId, String);
    return establishment_collection_1.Establishments.find({ creation_user: _userId, isActive: false });
});
/**
 * Meteor publication return active establishments by user
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getActiveEstablishments', function (_userId) {
    check_1.check(_userId, String);
    return establishment_collection_1.Establishments.find({ creation_user: _userId, isActive: true });
});
/**
 * Meteor publication return establishments by id
 * @param {string} _pId
 */
meteor_1.Meteor.publish('getEstablishmentById', function (_pId) {
    check_1.check(_pId, String);
    return establishment_collection_1.Establishments.find({ _id: _pId });
});
/**
 * Meteor publication return establishment profile by establishment id
 */
meteor_1.Meteor.publish('getEstablishmentProfile', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return establishment_collection_1.EstablishmentsProfile.find({ establishment_id: _establishmentId });
});
/**
 * Meteor publication return establishments by ids
 * @param {string[]} _pId
 */
meteor_1.Meteor.publish('getEstablishmentsByIds', function (_pIds) {
    return establishment_collection_1.Establishments.find({ _id: { $in: _pIds } });
});
/**
 * Meteor publication return establishments
 */
meteor_1.Meteor.publish('getEstablishments', function () {
    return establishment_collection_1.Establishments.find({});
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order-history.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/order-history.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const check_1 = require("meteor/check");
const order_history_collection_1 = require("../../../../both/collections/establishment/order-history.collection");
/**
 * Meteor publication return orders history by user Id
 * @param {string} _userId
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('getOrdersHistoryByUserId', function (_userId, _establishmentId) {
    check_1.check(_userId, String);
    check_1.check(_establishmentId, String);
    return order_history_collection_1.OrderHistories.find({ customer_id: _userId, establishment_id: _establishmentId });
});
/**
 * Meteor publication return orders history by establishment Id
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('getOrderHistoryByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return order_history_collection_1.OrderHistories.find({ establishment_id: _establishmentId });
});
/**
 * Meteor publication return orders history by establishment Ids
 * @param {string[]} _establishmentIds
 */
meteor_1.Meteor.publish('getOrderHistoryByEstablishmentIds', function (_pEstablishmentIds) {
    return order_history_collection_1.OrderHistories.find({ establishment_id: { $in: _pEstablishmentIds } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"order.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/order.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const order_collection_1 = require("../../../../both/collections/establishment/order.collection");
const check_1 = require("meteor/check");
const table_collection_1 = require("../../../../both/collections/establishment/table.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
/**
 * Meteor publication orders with establishmentId and status conditions
 * @param {string} _establishmentId
 * @param {string} _status
 */
meteor_1.Meteor.publish('getOrders', function (_establishmentId, _tableQRCode, _status) {
    check_1.check(_establishmentId, String);
    check_1.check(_tableQRCode, String);
    let _lTable = table_collection_1.Tables.findOne({ QR_code: _tableQRCode });
    if (_lTable) {
        return order_collection_1.Orders.find({ establishment_id: _establishmentId, tableId: _lTable._id, status: { $in: _status } });
    }
    else {
        return;
    }
});
/**
 * Meteor publications orders with establishmentId and status conditions
 * @param {string}
 * @param {string}
*/
meteor_1.Meteor.publish('getOrdersByTableId', function (_establishmentId, _tableId, _status) {
    check_1.check(_establishmentId, String);
    return order_collection_1.Orders.find({ establishment_id: _establishmentId, tableId: _tableId, status: { $in: _status } });
});
/**
 * Meteor publications orders with userId and status conditions
 * @param {string}
 * @param {string}
*/
meteor_1.Meteor.publish('getOrdersByUserId', function (_userId, _status) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        if (_lUserDetail.current_establishment !== '' && _lUserDetail.current_table !== '') {
            return order_collection_1.Orders.find({ establishment_id: _lUserDetail.current_establishment, tableId: _lUserDetail.current_table, status: { $in: _status } });
        }
        else {
            return;
        }
    }
    else {
        return;
    }
});
/**
 * Meteor publication orders with establishmentId condition
 * @param {string} _establishmentId
*/
meteor_1.Meteor.publish('getOrdersByEstablishmentId', function (_establishmentId, _status) {
    check_1.check(_establishmentId, String);
    return order_collection_1.Orders.find({ establishment_id: _establishmentId, status: { $in: _status } });
});
/**
 * Meteor publication orders by establishment work
 * @param {string} _userId
 * @param {sring[]} _status
 */
meteor_1.Meteor.publish('getOrdersByEstablishmentWork', function (_userId, _status) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return order_collection_1.Orders.find({ establishment_id: _lUserDetail.establishment_work, status: { $in: _status } });
    }
    else {
        return;
    }
});
/**
 * Meteor publications return orders by id
 */
meteor_1.Meteor.publish('getOrderById', function (_orderId) {
    return order_collection_1.Orders.find({ _id: _orderId });
});
/**
 * Meteor publications orders with establishment Ids and status conditions
 * @param {string[]} _pEstablishmentIds
 * @param {string[]} _status
*/
meteor_1.Meteor.publish('getOrdersByEstablishmentIds', function (_pEstablishmentIds, _status) {
    return order_collection_1.Orders.find({ establishment_id: { $in: _pEstablishmentIds }, status: { $in: _status } });
});
/**
 * Meteor publication return orders by user admin establishments
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getOrdersByAdminUser', function (_userId, _status) {
    check_1.check(_userId, String);
    let _lEstablishmentId = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: _userId }).fetch().forEach(function (establishment, index, arr) {
        _lEstablishmentId.push(establishment._id);
    });
    return order_collection_1.Orders.find({ establishment_id: { $in: _lEstablishmentId }, status: { $in: _status } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward-point.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/reward-point.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const check_1 = require("meteor/check");
const reward_point_collection_1 = require("../../../../both/collections/establishment/reward-point.collection");
/**
 * Meteor publication return user reward points
 * @param {string} _user_id
 */
meteor_1.Meteor.publish('getRewardPointsByUserId', function (_user_id) {
    check_1.check(_user_id, String);
    return reward_point_collection_1.RewardPoints.find({ id_user: _user_id });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reward.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/reward.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const reward_collection_1 = require("../../../../both/collections/establishment/reward.collection");
const check_1 = require("meteor/check");
const item_collection_1 = require("../../../../both/collections/menu/item.collection");
/**
 * Meteor publication rewards with creation user condition
 */
meteor_1.Meteor.publish('getRewards', function (_userId) {
    check_1.check(_userId, String);
    return reward_collection_1.Rewards.find({ creation_user: _userId });
});
/**
 * Meteor publication return rewards by establishment Id
 */
meteor_1.Meteor.publish('getEstablishmentRewards', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return reward_collection_1.Rewards.find({ establishments: { $in: [_establishmentId] }, is_active: true });
});
/**
 * Meteor publication to return the rewards
 */
meteor_1.Meteor["publishComposite"]('getRewardsToItems', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    if (_establishmentId !== null || _establishmentId !== '') {
        return {
            find() {
                return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_establishmentId] } });
            },
            children: [{
                    find(item) {
                        return reward_collection_1.Rewards.find({ item_id: item._id });
                    }
                }]
        };
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/table.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const table_collection_1 = require("../../../../both/collections/establishment/table.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication tables with user creation condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('tables', function (_userId) {
    check_1.check(_userId, String);
    return table_collection_1.Tables.find({ creation_user: _userId });
});
/**
 * Meteor publication tables
 * @param {string} _tableId
 */
meteor_1.Meteor.publish('getTableById', function (_tableId) {
    check_1.check(_tableId, String);
    return table_collection_1.Tables.find({ _id: _tableId });
});
/**
 * Meteor publication table by current_table
 */
meteor_1.Meteor.publish('getTableByCurrentTable', function (_userId) {
    check_1.check(_userId, String);
    var user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        return table_collection_1.Tables.find({ _id: user_detail.current_table });
    }
    else {
        return;
    }
});
/**
 * Meteor publication return all tables
 */
meteor_1.Meteor.publish('getAllTables', function () {
    return table_collection_1.Tables.find({});
});
/**
 * Meteor publication return tables with establishment condition
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('getTablesByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return table_collection_1.Tables.find({ establishment_id: _establishmentId, is_active: true });
});
/**
 * Meteor publication return tables by establishment Work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getTablesByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return table_collection_1.Tables.find({ establishment_id: _lUserDetail.establishment_work, is_active: true });
    }
    else {
        return;
    }
});
/**
 * Meteor publication tables by QR Code
 * @param {string} _lQRCode
 */
meteor_1.Meteor.publish('getTableByQRCode', function (_lQRCode) {
    check_1.check(_lQRCode, String);
    return table_collection_1.Tables.find({ QR_code: _lQRCode });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"waiter-call.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/establishment/waiter-call.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const waiter_call_detail_collection_1 = require("../../../../both/collections/establishment/waiter-call-detail.collection");
/**
 * Meteor publication waiter call details. userId
 * @param { string } _userId
 */
meteor_1.Meteor.publish('countWaiterCallDetailByUsrId', function (_userId) {
    return waiter_call_detail_collection_1.WaiterCallDetails.find({ user_id: _userId, status: { $in: ["waiting", "completed"] } });
});
/**
 * Meteor publication waiter call details, for to payment.
 * @param { string } _establishmentId
 * @param { string } _tableId
 * @param { string } _type
 * @param { string[] } _status
 */
meteor_1.Meteor.publish('WaiterCallDetailForPayment', function (_establishmentId, _tableId, _type) {
    return waiter_call_detail_collection_1.WaiterCallDetails.find({
        establishment_id: _establishmentId,
        table_id: _tableId,
        type: _type,
        status: { $in: ['waiting', 'completed'] }
    });
});
/**
 * Meteor publication waiter call details. userId (Waiter id)
 * @param { string } _waiterId
 */
meteor_1.Meteor.publish('waiterCallDetailByWaiterId', function (_waiterId) {
    return waiter_call_detail_collection_1.WaiterCallDetails.find({ waiter_id: _waiterId, status: "completed" });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"general":{"cities.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/cities.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const city_collection_1 = require("../../../../both/collections/general/city.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication cities
 */
meteor_1.Meteor.publish('cities', () => city_collection_1.Cities.find({ is_active: true }));
/**
 * City by establishment
 */
meteor_1.Meteor.publish('getCityByEstablishmentId', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    let establishment = establishment_collection_1.Establishments.findOne({ _id: _establishmentId });
    if (establishment) {
        return city_collection_1.Cities.find({ _id: establishment.cityId });
    }
    else {
        return city_collection_1.Cities.find({ is_active: true });
    }
});
/**
 * Meteor publications cities by country
 */
meteor_1.Meteor.publish('citiesByCountry', function (_countryId) {
    check_1.check(_countryId, String);
    return city_collection_1.Cities.find({ country: _countryId, is_active: true });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cooking-time.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/cooking-time.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const cooking_time_collection_1 = require("../../../../both/collections/general/cooking-time.collection");
/**
 * Meteor publication cooking times
 */
meteor_1.Meteor.publish('cookingTimes', () => cooking_time_collection_1.CookingTimes.find());

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"countries.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/countries.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const country_collection_1 = require("../../../../both/collections/general/country.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication countries
 */
meteor_1.Meteor.publish('countries', function () {
    return country_collection_1.Countries.find({ is_active: true });
});
/**
 * Country by establishment
 */
meteor_1.Meteor.publish('getCountryByEstablishmentId', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    let establishment = establishment_collection_1.Establishments.findOne({ _id: _establishmentId });
    if (establishment) {
        return country_collection_1.Countries.find({ _id: establishment.countryId });
    }
    else {
        return country_collection_1.Countries.find({ is_active: true });
        ;
    }
});
/**
 * Meteor publication return countries by establishments Id
 */
meteor_1.Meteor.publish('getCountriesByEstablishmentsId', function (_establishmentsId) {
    let _ids = [];
    establishment_collection_1.Establishments.collection.find({ _id: { $in: _establishmentsId } }).forEach(function (establishment, index, ar) {
        _ids.push(establishment.countryId);
    });
    return country_collection_1.Countries.find({ _id: { $in: _ids } });
});
/**
 * Meteor publicaation return countries by admin user Id
 */
meteor_1.Meteor.publish('getCountriesByAdminUser', function () {
    let _countriesIds = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: this.userId }).forEach(function (establishment, index, ar) {
        _countriesIds.push(establishment.countryId);
    });
    return country_collection_1.Countries.find({ _id: { $in: _countriesIds }, is_active: true });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"currency.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/currency.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const currency_collection_1 = require("../../../../both/collections/general/currency.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
/**
 * Meteor publication currencies
 */
meteor_1.Meteor.publish('currencies', () => currency_collection_1.Currencies.find({ isActive: true }));
/**
 * Meteor publication return currencies by establishments Id
 */
meteor_1.Meteor.publish('getCurrenciesByEstablishmentsId', function (_establishmentsId) {
    let _ids = [];
    establishment_collection_1.Establishments.collection.find({ _id: { $in: _establishmentsId } }).forEach(function (establishment, index, ar) {
        _ids.push(establishment.currencyId);
    });
    return currency_collection_1.Currencies.find({ _id: { $in: _ids } });
});
/**
 * Meteor publication return currencies by  userId
 */
meteor_1.Meteor.publish('getCurrenciesByUserId', function () {
    let _currenciesIds = [];
    establishment_collection_1.Establishments.collection.find({ creation_user: this.userId }).forEach(function (establishment, index, args) {
        _currenciesIds.push(establishment.currencyId);
    });
    return currency_collection_1.Currencies.find({ _id: { $in: _currenciesIds } });
});
/**
 * Meteor publication return currencies by
 */
meteor_1.Meteor.publish('getCurrenciesByCurrentUser', function (_userId) {
    let _userDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_userDetail.current_establishment != '') {
        let establishment = establishment_collection_1.Establishments.findOne({ _id: _userDetail.current_establishment });
        return currency_collection_1.Currencies.find({ _id: establishment.currencyId });
    }
    else {
        return currency_collection_1.Currencies.find({ _id: '0' });
    }
});
/**
 * Meteor publication return currency by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getCurrenciesByEstablishmentWork', function (_userId) {
    let _userDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    let _currenciesIds = [];
    if (_userDetail.establishment_work != '') {
        let establishment = establishment_collection_1.Establishments.findOne({ _id: _userDetail.establishment_work });
        return currency_collection_1.Currencies.find({ _id: establishment.currencyId });
    }
    else {
        return currency_collection_1.Currencies.find({ _id: '0' });
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email-content.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/email-content.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const email_content_collection_1 = require("../../../../both/collections/general/email-content.collection");
/**
 * Meteor publication EmailContents
 */
meteor_1.Meteor.publish('getEmailContents', function () {
    return email_content_collection_1.EmailContents.find({});
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hour.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/hour.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const hours_collection_1 = require("../../../../both/collections/general/hours.collection");
/**
 * Meteor publication hours
 */
meteor_1.Meteor.publish('hours', () => hours_collection_1.Hours.find());

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"languages.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/languages.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const language_collection_1 = require("../../../../both/collections/general/language.collection");
/**
 * Meteor publication languages
 */
meteor_1.Meteor.publish('languages', () => language_collection_1.Languages.find({ is_active: true }));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"parameter.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/parameter.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const parameter_collection_1 = require("../../../../both/collections/general/parameter.collection");
/**
 * Meteor publication EmailContents
 */
meteor_1.Meteor.publish('getParameters', function () {
    return parameter_collection_1.Parameters.find({});
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paymentMethod.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/paymentMethod.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const check_1 = require("meteor/check");
const paymentMethod_collection_1 = require("../../../../both/collections/general/paymentMethod.collection");
const establishment_collection_1 = require("../../../../both/collections/establishment/establishment.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
/**
 * Meteor publication paymentMethods
 */
meteor_1.Meteor.publish('paymentMethods', () => paymentMethod_collection_1.PaymentMethods.find({ isActive: true }));
/**
 * Meteor publication return payment methods by current establishment of the user
 */
meteor_1.Meteor.publish('getPaymentMethodsByUserCurrentEstablishment', function (_pUserId) {
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _pUserId });
    if (_lUserDetail.current_establishment) {
        let _lEstablishment = establishment_collection_1.Establishments.findOne({ _id: _lUserDetail.current_establishment });
        return paymentMethod_collection_1.PaymentMethods.find({ _id: { $in: _lEstablishment.paymentMethods }, isActive: true });
    }
    else {
        return paymentMethod_collection_1.PaymentMethods.find({ isActive: true });
    }
});
/*
 * Meteor publication return establishment payment methods
 */
meteor_1.Meteor.publish('getPaymentMethodsByEstablishmentId', function (_pEstablishmentId) {
    check_1.check(_pEstablishmentId, String);
    let _lEstablishment = establishment_collection_1.Establishments.findOne({ _id: _pEstablishmentId });
    if (_lEstablishment) {
        return paymentMethod_collection_1.PaymentMethods.find({ _id: { $in: _lEstablishment.paymentMethods }, isActive: true });
    }
    else {
        return paymentMethod_collection_1.PaymentMethods.find({ isActive: true });
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point-validity.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/point-validity.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const point_validity_collection_1 = require("../../../../both/collections/general/point-validity.collection");
/**
 * Meteor publication points validity
 */
meteor_1.Meteor.publish('pointsValidity', () => point_validity_collection_1.PointsValidity.find());

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"point.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/point.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const point_collection_1 = require("../../../../both/collections/general/point.collection");
/**
 * Meteor publication points
 */
meteor_1.Meteor.publish('points', () => point_collection_1.Points.find());

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"type-of-food.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/general/type-of-food.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const type_of_food_collection_1 = require("../../../../both/collections/general/type-of-food.collection");
/**
 * Meteor publication typesOfFood
 */
meteor_1.Meteor.publish('typesOfFood', () => type_of_food_collection_1.TypesOfFood.find());

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"menu":{"additions.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/additions.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const addition_collection_1 = require("../../../../both/collections/menu/addition.collection");
const item_collection_1 = require("../../../../both/collections/menu/item.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication additions with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('additions', function (_userId) {
    check_1.check(_userId, String);
    return addition_collection_1.Additions.find({ creation_user: _userId });
});
/**
 * Meteor publication return additions with establishment condition
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('additionsByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return addition_collection_1.Additions.find({ 'establishments.establishment_id': { $in: [_establishmentId] }, is_active: true });
});
/**
 * Meteor publication return additions with id condition
 * @param {string} _pId
 */
meteor_1.Meteor.publish('additionsById', function (_pId) {
    check_1.check(_pId, String);
    return addition_collection_1.Additions.find({ _id: _pId });
});
/**
 * Meteor publication return additions with userId condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('additionsByCurrentEstablishment', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return addition_collection_1.Additions.find({ 'establishments.establishment_id': { $in: [_lUserDetail.current_establishment] }, is_active: true });
    }
    else {
        return;
    }
});
/**
 * Meteor publication return addtions by itemId  condition
 * @param {string} _itemId
*/
meteor_1.Meteor.publish('additionsByItem', function (_itemId) {
    check_1.check(_itemId, String);
    var item = item_collection_1.Items.findOne({ _id: _itemId, additionsIsAccepted: true });
    if (typeof item !== 'undefined') {
        var aux = addition_collection_1.Additions.find({ _id: { $in: item.additions } }).fetch();
        return addition_collection_1.Additions.find({ _id: { $in: item.additions } });
    }
    else {
        return addition_collection_1.Additions.find({ _id: { $in: [] } });
    }
});
/**
 * Meteor publication additions by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('additionsByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return addition_collection_1.Additions.find({ 'establishments.establishment_id': { $in: [_lUserDetail.establishment_work] }, is_active: true });
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"categories.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/categories.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const category_collection_1 = require("../../../../both/collections/menu/category.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const section_collection_1 = require("../../../../both/collections/menu/section.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication categories with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('categories', function (_userId) {
    check_1.check(_userId, String);
    return category_collection_1.Categories.find({ creation_user: _userId });
});
/**
 * Meteor publication return categories with establishment condition
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('categoriesByEstablishment', function (_establishmentId) {
    let _sections = [];
    check_1.check(_establishmentId, String);
    section_collection_1.Sections.collection.find({ establishments: { $in: [_establishmentId] }, is_active: true }).fetch().forEach(function (s, index, arr) {
        _sections.push(s._id);
    });
    return category_collection_1.Categories.find({ section: { $in: _sections }, is_active: true });
});
/**
 * Meteor ppublication return categories by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getCategoriesByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _sections = [];
    let user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        section_collection_1.Sections.collection.find({ establishments: { $in: [user_detail.establishment_work] }, is_active: true }).fetch().forEach(function (s, index, arr) {
            _sections.push(s._id);
        });
        return category_collection_1.Categories.find({ section: { $in: _sections }, is_active: true });
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"garnish-food.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/garnish-food.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const garnish_food_collection_1 = require("../../../../both/collections/menu/garnish-food.collection");
const item_collection_1 = require("../../../../both/collections/menu/item.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication garnishFood with creation user condition
 * @param {String} _userId
 */
meteor_1.Meteor.publish('garnishFood', function (_userId) {
    check_1.check(_userId, String);
    return garnish_food_collection_1.GarnishFoodCol.find({ creation_user: _userId });
});
/**
 * Meteor publication return garnish food with establishment condition
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('garnishFoodByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return garnish_food_collection_1.GarnishFoodCol.find({ 'establishments.establishment_id': { $in: [_establishmentId] }, is_active: true });
});
/**
 * Meteor publication return garnish food with _id
 * @param {string} _pId
 */
meteor_1.Meteor.publish('garnishFoodById', function (_pId) {
    check_1.check(_pId, String);
    return garnish_food_collection_1.GarnishFoodCol.find({ _id: _pId });
});
/**
 * Meteor publication return garnish food by itemId  condition
 * @param {string}
 */
meteor_1.Meteor.publish('garnishesByItem', function (_itemId) {
    check_1.check(_itemId, String);
    var item = item_collection_1.Items.findOne({ _id: _itemId, garnishFoodIsAcceped: true });
    if (item) {
        return garnish_food_collection_1.GarnishFoodCol.find({ _id: { $in: item.garnishFood } });
    }
    else {
        return;
    }
});
/**
 * Meteor publication garnish food by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('garnishFoodByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return garnish_food_collection_1.GarnishFoodCol.find({ 'establishments.establishment_id': { $in: [_lUserDetail.establishment_work] }, is_active: true });
    }
    else {
        return;
    }
});
/**
 * Meteor publication return garnish food with userId condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('garnishFoodByCurrentEstablishment', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        return garnish_food_collection_1.GarnishFoodCol.find({ 'establishments.establishment_id': { $in: [_lUserDetail.current_establishment] }, is_active: true });
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"item.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/item.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const item_collection_1 = require("../../../../both/collections/menu/item.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication items with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('items', function (_userId) {
    check_1.check(_userId, String);
    return item_collection_1.Items.find({ creation_user: _userId });
});
/**
 * Meteor publication admin active items
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getAdminActiveItems', function (_userId) {
    check_1.check(_userId, String);
    return item_collection_1.Items.find({ creation_user: _userId, is_active: true });
});
/**
 * Meteor publication return items with establishment condition
 */
meteor_1.Meteor.publish('itemsByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_establishmentId] }, is_active: true });
});
/**
 * Meteor publication return items with user condition
 */
meteor_1.Meteor.publish('itemsByUser', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        if (_lUserDetail.current_establishment) {
            return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_lUserDetail.current_establishment] }, is_active: true });
        }
        else {
            return;
        }
    }
    else {
        return;
    }
});
/**
 * Meteor publication return item by id
 */
meteor_1.Meteor.publish('itemById', function (_itemId) {
    check_1.check(_itemId, String);
    return item_collection_1.Items.find({ _id: _itemId });
});
/**
 * Meteor publication return items by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getItemsByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    let _sections = [];
    if (_lUserDetail) {
        if (_lUserDetail.establishment_work) {
            return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_lUserDetail.establishment_work] }, is_active: true });
        }
        else {
            return;
        }
    }
    else {
        return;
    }
});
/**
 * Meteor publication return establishments items
 * @param {string[]} _pEstablishmentIds
 */
meteor_1.Meteor.publish('getItemsByEstablishmentIds', function (_pEstablishmentIds) {
    return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: _pEstablishmentIds } });
});
/**
 * Meetor publication return items by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getItemsByUserEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _lUserDetail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (_lUserDetail) {
        if (_lUserDetail.establishment_work) {
            return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_lUserDetail.establishment_work] }, is_active: true });
        }
        else {
            return;
        }
    }
    else {
        return;
    }
});
/***
 * Meteor publication return items sorted by item name
 */
/**
 * Meteor publication return items with establishment condition
 */
meteor_1.Meteor.publish('itemsByEstablishmentSortedByName', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return item_collection_1.Items.find({ 'establishments.establishment_id': { $in: [_establishmentId] }, is_active: true }, { sort: { name: 1 } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option-values.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/option-values.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const option_value_collection_1 = require("../../../../both/collections/menu/option-value.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication option values with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getAdminOptionValues', function (_userId) {
    check_1.check(_userId, String);
    return option_value_collection_1.OptionValues.find({ creation_user: _userId });
});
/**
 * Meteor publication option values with option ids condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getOptionValuesByOptionIds', function (_pOptionIds) {
    return option_value_collection_1.OptionValues.find({ option_id: { $in: _pOptionIds }, is_active: true });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"options.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/options.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const option_collection_1 = require("../../../../both/collections/menu/option.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication option with creation user condition
 * @param {String} _userId
 */
meteor_1.Meteor.publish('getAdminOptions', function (_userId) {
    check_1.check(_userId, String);
    return option_collection_1.Options.find({ creation_user: _userId });
});
/**
 * Meteor publication establishments options
 * @param {string} _establishmentId
*/
meteor_1.Meteor.publish('optionsByEstablishment', function (_establishmentsId) {
    return option_collection_1.Options.find({ establishments: { $in: _establishmentsId }, is_active: true });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sections.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/sections.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const section_collection_1 = require("../../../../both/collections/menu/section.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication section with creation user condition
 * @param {String} _userId
 */
meteor_1.Meteor.publish('sections', function (_userId) {
    check_1.check(_userId, String);
    return section_collection_1.Sections.find({ creation_user: _userId });
});
/**
 * Meteor publication establishments sections
 * @param {string} _establishmentId
*/
meteor_1.Meteor.publish('sectionsByEstablishment', function (_establishmentId) {
    check_1.check(_establishmentId, String);
    return section_collection_1.Sections.find({ establishments: { $in: [_establishmentId] }, is_active: true });
});
meteor_1.Meteor.publish('getSections', function () {
    return section_collection_1.Sections.find({});
});
/**
 * Meteor publication establishments sections by establishment work
 * @param {string} _userId
*/
meteor_1.Meteor.publish('getSectionsByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        return section_collection_1.Sections.find({ establishments: { $in: [user_detail.establishment_work] }, is_active: true });
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"subcategories.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/menu/subcategories.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const subcategory_collection_1 = require("../../../../both/collections/menu/subcategory.collection");
const section_collection_1 = require("../../../../both/collections/menu/section.collection");
const category_collection_1 = require("../../../../both/collections/menu/category.collection");
const user_detail_collection_1 = require("../../../../both/collections/auth/user-detail.collection");
const check_1 = require("meteor/check");
/**
 * Meteor publication subcategories with creation user condition
 * @param {string} _userId
 */
meteor_1.Meteor.publish('subcategories', function (_userId) {
    check_1.check(_userId, String);
    return subcategory_collection_1.Subcategories.find({ creation_user: _userId });
});
/**
 * Meteor publication return subcategories with establishment condition
 * @param {string} _establishmentId
 */
meteor_1.Meteor.publish('subcategoriesByEstablishment', function (_establishmentId) {
    let _sections = [];
    let _categories = [];
    check_1.check(_establishmentId, String);
    section_collection_1.Sections.collection.find({ establishments: { $in: [_establishmentId] }, is_active: true }).fetch().forEach(function (s, index, arr) {
        _sections.push(s._id);
    });
    category_collection_1.Categories.collection.find({ section: { $in: _sections }, is_active: true }).fetch().forEach(function (c, index, arr) {
        _categories.push(c._id);
    });
    return subcategory_collection_1.Subcategories.find({ category: { $in: _categories }, is_active: true });
});
/**
 * Meteor publication return subcategories by establishment work
 * @param {string} _userId
 */
meteor_1.Meteor.publish('getSubcategoriesByEstablishmentWork', function (_userId) {
    check_1.check(_userId, String);
    let _sections = [];
    let _categories = [];
    let user_detail = user_detail_collection_1.UserDetails.findOne({ user_id: _userId });
    if (user_detail) {
        section_collection_1.Sections.collection.find({ establishments: { $in: [user_detail.establishment_work] }, is_active: true }).fetch().forEach(function (s, index, arr) {
            _sections.push(s._id);
        });
        category_collection_1.Categories.collection.find({ section: { $in: _sections }, is_active: true }).fetch().forEach(function (c, index, arr) {
            _categories.push(c._id);
        });
        return subcategory_collection_1.Subcategories.find({ category: { $in: _categories }, is_active: true });
    }
    else {
        return;
    }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"payment":{"cc-payment-method.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/payment/cc-payment-method.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const cc_payment_methods_collection_1 = require("../../../../both/collections/payment/cc-payment-methods.collection");
/**
 * Meteor publication EmailContents
 */
meteor_1.Meteor.publish('getCcPaymentMethods', function () {
    return cc_payment_methods_collection_1.CcPaymentMethods.find({ is_active: true });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoice-info.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/payment/invoice-info.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const invoices_info_collection_1 = require("../../../../both/collections/payment/invoices-info.collection");
/**
 * Meteor publication InvoicesInfo
 */
meteor_1.Meteor.publish('getInvoicesInfoByCountry', function (countryId) {
    return invoices_info_collection_1.InvoicesInfo.find({ country_id: countryId });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"iurest-invoices.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/payment/iurest-invoices.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const iurest_invoices_collection_1 = require("../../../../both/collections/payment/iurest-invoices.collection");
/**
 * Meteor publication InvoicesInfo
 */
meteor_1.Meteor.publish('getAllIurestInvoices', function () {
    return iurest_invoices_collection_1.IurestInvoices.find({});
});
meteor_1.Meteor.publish('getIurestInvoiceByUser', function (_userId) {
    check(_userId, String);
    return iurest_invoices_collection_1.IurestInvoices.find({ creation_user: _userId });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-history.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/payment/payment-history.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const payment_history_collection_1 = require("../../../../both/collections/payment/payment-history.collection");
/**
 * Meteor publication EmailContents
 */
meteor_1.Meteor.publish('getHistoryPaymentsByUser', function (_userId) {
    return payment_history_collection_1.PaymentsHistory.find({ creation_user: _userId, isInitial: false }, { sort: { creation_date: -1 } });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment-transaction.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/publications/payment/payment-transaction.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
const payment_transaction_collection_1 = require("../../../../both/collections/payment/payment-transaction.collection");
/**
 * Meteor publication EmailContents
 */
meteor_1.Meteor.publish('getTransactions', function () {
    return payment_transaction_collection_1.PaymentTransactions.find({});
});
meteor_1.Meteor.publish('getTransactionsByUser', function (_userId) {
    return payment_transaction_collection_1.PaymentTransactions.find({ creation_user: _userId });
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"indexes":{"indexdb.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/imports/indexes/indexdb.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const establishment_collection_1 = require("../../../both/collections/establishment/establishment.collection");
const user_detail_collection_1 = require("../../../both/collections/auth/user-detail.collection");
const section_collection_1 = require("../../../both/collections/menu/section.collection");
const category_collection_1 = require("../../../both/collections/menu/category.collection");
const subcategory_collection_1 = require("../../../both/collections/menu/subcategory.collection");
const addition_collection_1 = require("../../../both/collections/menu/addition.collection");
const item_collection_1 = require("../../../both/collections/menu/item.collection");
const garnish_food_collection_1 = require("../../../both/collections/menu/garnish-food.collection");
const paymentMethod_collection_1 = require("../../../both/collections/general/paymentMethod.collection");
const payment_history_collection_1 = require("../../../both/collections/payment/payment-history.collection");
const order_collection_1 = require("../../../both/collections/establishment/order.collection");
const table_collection_1 = require("../../../both/collections/establishment/table.collection");
const waiter_call_detail_collection_1 = require("../../../both/collections/establishment/waiter-call-detail.collection");
const cc_payment_methods_collection_1 = require("../../../both/collections/payment/cc-payment-methods.collection");
const payment_transaction_collection_1 = require("../../../both/collections/payment/payment-transaction.collection");
const order_history_collection_1 = require("../../../both/collections/establishment/order-history.collection");
const city_collection_1 = require("../../../both/collections/general/city.collection");
const country_collection_1 = require("../../../both/collections/general/country.collection");
const language_collection_1 = require("../../../both/collections/general/language.collection");
function createdbindexes() {
    // Establishment Collection Indexes
    establishment_collection_1.Establishments.collection._ensureIndex({ creation_user: 1 });
    establishment_collection_1.Establishments.collection._ensureIndex({ name: 1 });
    establishment_collection_1.Establishments.collection._ensureIndex({ isActive: 1 });
    // User Collections Indexes
    user_detail_collection_1.UserDetails.collection._ensureIndex({ user_id: 1 });
    user_detail_collection_1.UserDetails.collection._ensureIndex({ establishment_work: 1 });
    user_detail_collection_1.UserDetails.collection._ensureIndex({ current_establishment: 1, current_table: 1 });
    // Section Collection Indexes
    section_collection_1.Sections.collection._ensureIndex({ creation_user: 1 });
    section_collection_1.Sections.collection._ensureIndex({ establishments: 1 });
    // Category Collection Indexes
    category_collection_1.Categories.collection._ensureIndex({ creation_user: 1 });
    category_collection_1.Categories.collection._ensureIndex({ section: 1 });
    // Subcategory Collection Indexes
    subcategory_collection_1.Subcategories.collection._ensureIndex({ creation_user: 1 });
    subcategory_collection_1.Subcategories.collection._ensureIndex({ category: 1 });
    // Addition Collection Indexes
    addition_collection_1.Additions.collection._ensureIndex({ creation_user: 1 });
    addition_collection_1.Additions.collection._ensureIndex({ establishments: 1 });
    // Item Collection Indexes
    item_collection_1.Items.collection._ensureIndex({ additionsIsAccepted: 1 });
    item_collection_1.Items.collection._ensureIndex({ garnishFoodIsAcceped: 1 });
    item_collection_1.Items.collection._ensureIndex({ creation_user: 1 });
    item_collection_1.Items.collection._ensureIndex({ sectionId: 1 });
    item_collection_1.Items.collection._ensureIndex({ establishments: 1 });
    // GarnishFood Collection Indexes
    garnish_food_collection_1.GarnishFoodCol.collection._ensureIndex({ creation_user: 1 });
    garnish_food_collection_1.GarnishFoodCol.collection._ensureIndex({ establishments: 1 });
    // PaymentMethod Collection Indexes
    paymentMethod_collection_1.PaymentMethods.collection._ensureIndex({ isActive: 1 });
    // PaymentsHistory Collection Indexes
    payment_history_collection_1.PaymentsHistory.collection._ensureIndex({ establishment_ids: 1 });
    payment_history_collection_1.PaymentsHistory.collection._ensureIndex({ creation_user: 1 });
    payment_history_collection_1.PaymentsHistory.collection._ensureIndex({ creation_date: 1 });
    // Tables Collection Indexes
    table_collection_1.Tables.collection._ensureIndex({ QR_code: 1 });
    table_collection_1.Tables.collection._ensureIndex({ establishment_id: 1 });
    // Orders Collection Indexes
    order_collection_1.Orders.collection._ensureIndex({ establishment_id: 1 });
    order_collection_1.Orders.collection._ensureIndex({ tableId: 1 });
    order_collection_1.Orders.collection._ensureIndex({ status: 1 });
    order_collection_1.Orders.collection._ensureIndex({ accountId: 1 });
    // WaiterCallDetails Collection Indexes
    waiter_call_detail_collection_1.WaiterCallDetails.collection._ensureIndex({ status: 1 });
    waiter_call_detail_collection_1.WaiterCallDetails.collection._ensureIndex({ user_id: 1 });
    waiter_call_detail_collection_1.WaiterCallDetails.collection._ensureIndex({ establishment_id: 1, table_id: 1, type: 1 });
    // CcPaymentMethods Collection Indexes
    cc_payment_methods_collection_1.CcPaymentMethods.collection._ensureIndex({ is_active: 1 });
    // PaymentTransactions Collection Indexes
    payment_transaction_collection_1.PaymentTransactions.collection._ensureIndex({ creation_user: 1 });
    // OrderHistories Collection Indexes
    order_history_collection_1.OrderHistories.collection._ensureIndex({ customer_id: 1, establishment_id: 1 });
    // Cities Collection Indexes
    city_collection_1.Cities.collection._ensureIndex({ country: 1 });
    city_collection_1.Cities.collection._ensureIndex({ is_active: 1 });
    // Countries Collection Indexes
    country_collection_1.Countries.collection._ensureIndex({ is_active: 1 });
    // Languages Collection Indexes
    language_collection_1.Languages.collection._ensureIndex({ is_active: 1 });
}
exports.createdbindexes = createdbindexes;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"cron-config.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/cron-config.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const percolate_synced_cron_1 = require("meteor/percolate:synced-cron");
percolate_synced_cron_1.SyncedCron.config({
    // Log job run details to console
    log: true,
    // Use a custom logger function (defaults to Meteor's logging package)
    logger: null,
    // Name of collection to use for synchronisation and logging
    collectionName: 'cron_history',
    // Default to using localTime
    utc: false,
    /*
      TTL in seconds for history records in collection to expire
      NOTE: Unset to remove expiry but ensure you remove the index from
      mongo by hand

      ALSO: SyncedCron can't use the `_ensureIndex` command to modify
      the TTL index. The best way to modify the default value of
      `collectionTTL` is to remove the index by hand (in the mongo shell
      run `db.cronHistory.dropIndex({startedAt: 1})`) and re-run your
      project. SyncedCron will recreate the index with the updated TTL.
    */
    collectionTTL: 172800
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cron.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/cron.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const percolate_synced_cron_1 = require("meteor/percolate:synced-cron");
const country_collection_1 = require("../both/collections/general/country.collection");
function createCrons() {
    let activeCountries = country_collection_1.Countries.collection.find({ is_active: true }).fetch();
    activeCountries.forEach(country => {
        /**
        * This cron evaluates the freeDays flag on establishments with value true, and change it to false
        */
        /**
         SyncedCron.add({
           name: 'cronChangeFreeDays.' + country.name,
           schedule: function (parser) {
             return parser.cron(country.cronChangeFreeDays);
           },
           job: function () {
             Meteor.call('changeFreeDaysToFalse', country._id);
           }
         });
          */
        /**
        * This cron sends email to warn the charge soon of iurest service
        */
        /**
         SyncedCron.add({
           name: 'cronEmailChargeSoon.' + country.name,
           schedule: function (parser) {
             return parser.cron(country.cronEmailChargeSoon);
           },
           job: function () {
             Meteor.call('sendEmailChargeSoon', country._id);
           }
         });
          */
        /**
        * This cron sends email to warn the expire soon the iurest service
        */
        /**
         SyncedCron.add({
           name: 'cronEmailExpireSoon.' + country.name,
           schedule: function (parser) {
             return parser.cron(country.cronEmailExpireSoon);
           },
           job: function () {
             Meteor.call('sendEmailExpireSoon', country._id);
           }
         });
          */
        /**
         * This cron evaluates the isActive flag on establishments with value true, and insert them on history_payment collection
         */
        /**
        SyncedCron.add({
          name: 'cronValidateActive.' + country.name,
          schedule: function (parser) {
            return parser.cron(country.cronValidateActive);
          },
          job: function () {
            Meteor.call('validateActiveEstablishments', country._id);
          }
        });
         */
        /**
        * This cron sends an email to warn that the service has expired
        */
        /**
         SyncedCron.add({
           name: 'cronEmailRestExpired.' + country.name,
           schedule: function (parser) {
             return parser.cron(country.cronEmailRestExpired);
           },
           job: function () {
             Meteor.call('sendEmailRestExpired', country._id);
           }
         });
          */
        /**
        * This cron validate the points expiration date
        */
        percolate_synced_cron_1.SyncedCron.add({
            name: 'cronPointsExpire.' + country.name,
            schedule: function (parser) {
                return parser.cron(country.cronPointsExpire);
            },
            job: function () {
                Meteor.call('checkPointsToExpire', country._id);
            }
        });
    });
}
exports.createCrons = createCrons;
percolate_synced_cron_1.SyncedCron.start();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/main.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const meteor_1 = require("meteor/meteor");
require("./imports/publications/menu/sections");
require("./imports/publications/menu/categories");
require("./imports/publications/menu/subcategories");
require("./imports/publications/menu/additions");
require("./imports/publications/menu/garnish-food");
require("./imports/publications/menu/item");
require("./imports/publications/menu/options");
require("./imports/publications/menu/option-values");
require("./imports/publications/auth/users");
require("./imports/publications/auth/roles");
require("./imports/publications/auth/menus");
require("./imports/publications/auth/collaborators");
require("./imports/publications/auth/user-details");
require("./imports/publications/general/hour");
require("./imports/publications/general/currency");
require("./imports/publications/general/paymentMethod");
require("./imports/publications/general/email-content");
require("./imports/publications/general/parameter");
require("./imports/publications/general/cities");
require("./imports/publications/general/countries");
require("./imports/publications/general/languages");
require("./imports/publications/general/point");
require("./imports/publications/general/cooking-time");
require("./imports/publications/general/point-validity");
require("/server/imports/publications/general/type-of-food");
require("./imports/publications/payment/payment-history");
require("./imports/publications/payment/cc-payment-method");
require("./imports/publications/payment/payment-transaction");
require("./imports/publications/payment/invoice-info");
require("./imports/publications/payment/iurest-invoices");
require("./imports/publications/establishment/establishment");
require("./imports/publications/establishment/table");
require("./imports/publications/establishment/order");
require("./imports/publications/establishment/waiter-call");
require("./imports/publications/establishment/reward");
require("./imports/publications/establishment/reward-point");
require("./imports/publications/establishment/order-history");
require("../both/methods/menu/item.methods");
require("../both/methods/auth/collaborators.methods");
require("../both/methods/auth/menu.methods");
require("../both/methods/auth/user-detail.methods");
require("../both/methods/auth/user-devices.methods");
require("../both/methods/auth/user-login.methods");
require("../both/methods/auth/user.methods");
require("../both/methods/general/cron.methods");
require("../both/methods/general/email.methods");
require("../both/methods/general/parameter.methods");
require("../both/methods/general/change-email.methods");
require("../both/methods/general/country.methods");
require("../both/methods/general/iurest-invoice.methods");
require("../both/methods/general/push-notifications.methods");
require("../both/methods/establishment/establishment.methods");
require("../both/methods/establishment/order-history.methods");
require("../both/methods/establishment/order.methods");
require("../both/methods/establishment/schedule.methods");
require("../both/methods/establishment/table.method");
require("../both/methods/establishment/waiter-queue/waiter-queue.methods");
require("../both/methods/establishment/waiter-queue/queues.methods");
require("./imports/fixtures/auth/account-creation");
require("./imports/fixtures/auth/email-config");
const remove_fixtures_1 = require("/server/imports/fixtures/remove-fixtures");
const roles_1 = require("./imports/fixtures/auth/roles");
const menus_1 = require("./imports/fixtures/auth/menus");
const hours_1 = require("./imports/fixtures/general/hours");
const currencies_1 = require("./imports/fixtures/general/currencies");
const paymentMethods_1 = require("./imports/fixtures/general/paymentMethods");
const countries_1 = require("./imports/fixtures/general/countries");
const cities_1 = require("./imports/fixtures/general/cities");
const languages_1 = require("./imports/fixtures/general/languages");
const email_contents_1 = require("./imports/fixtures/general/email-contents");
const parameters_1 = require("./imports/fixtures/general/parameters");
const cc_payment_methods_1 = require("./imports/fixtures/payments/cc-payment-methods");
const invoices_info_1 = require("./imports/fixtures/payments/invoices-info");
const point_1 = require("./imports/fixtures/general/point");
const cooking_time_1 = require("./imports/fixtures/general/cooking-time");
const point_validity_1 = require("./imports/fixtures/general/point-validity");
const type_of_food_1 = require("/server/imports/fixtures/general/type-of-food");
const indexdb_1 = require("./imports/indexes/indexdb");
const cron_1 = require("./cron");
meteor_1.Meteor.startup(() => {
    remove_fixtures_1.removeFixtures();
    menus_1.loadMenus();
    roles_1.loadRoles();
    hours_1.loadHours();
    currencies_1.loadCurrencies();
    paymentMethods_1.loadPaymentMethods();
    countries_1.loadCountries();
    cities_1.loadCities();
    languages_1.loadLanguages();
    indexdb_1.createdbindexes();
    email_contents_1.loadEmailContents();
    parameters_1.loadParameters();
    cc_payment_methods_1.loadCcPaymentMethods();
    invoices_info_1.loadInvoicesInfo();
    point_1.loadPoints();
    cooking_time_1.loadCookingTimes();
    point_validity_1.loadPointsValidity();
    type_of_food_1.loadTypesOfFood();
    cron_1.createCrons();
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{
  "extensions": [
    ".js",
    ".json",
    ".html",
    ".ts",
    ".scss"
  ]
});
require("./both/methods/establishment/QR/codeGenerator.js");
require("./both/methods/establishment/waiter-queue/queues.methods.js");
require("./both/methods/establishment/waiter-queue/waiter-queue.methods.js");
require("./both/collections/auth/device.collection.js");
require("./both/collections/auth/menu.collection.js");
require("./both/collections/auth/role.collection.js");
require("./both/collections/auth/user-detail.collection.js");
require("./both/collections/auth/user-login.collection.js");
require("./both/collections/auth/user-penalty.collection.js");
require("./both/collections/auth/user.collection.js");
require("./both/collections/establishment/establishment.collection.js");
require("./both/collections/establishment/order-history.collection.js");
require("./both/collections/establishment/order.collection.js");
require("./both/collections/establishment/reward-point.collection.js");
require("./both/collections/establishment/reward.collection.js");
require("./both/collections/establishment/table.collection.js");
require("./both/collections/establishment/waiter-call-detail.collection.js");
require("./both/collections/general/city.collection.js");
require("./both/collections/general/cooking-time.collection.js");
require("./both/collections/general/country.collection.js");
require("./both/collections/general/currency.collection.js");
require("./both/collections/general/email-content.collection.js");
require("./both/collections/general/hours.collection.js");
require("./both/collections/general/language.collection.js");
require("./both/collections/general/parameter.collection.js");
require("./both/collections/general/paymentMethod.collection.js");
require("./both/collections/general/point-validity.collection.js");
require("./both/collections/general/point.collection.js");
require("./both/collections/general/queue.collection.js");
require("./both/collections/general/type-of-food.collection.js");
require("./both/collections/menu/addition.collection.js");
require("./both/collections/menu/category.collection.js");
require("./both/collections/menu/garnish-food.collection.js");
require("./both/collections/menu/item.collection.js");
require("./both/collections/menu/option-value.collection.js");
require("./both/collections/menu/option.collection.js");
require("./both/collections/menu/section.collection.js");
require("./both/collections/menu/subcategory.collection.js");
require("./both/collections/payment/cc-payment-methods.collection.js");
require("./both/collections/payment/invoices-info.collection.js");
require("./both/collections/payment/iurest-invoices.collection.js");
require("./both/collections/payment/payment-history.collection.js");
require("./both/collections/payment/payment-transaction.collection.js");
require("./both/methods/auth/collaborators.methods.js");
require("./both/methods/auth/menu.methods.js");
require("./both/methods/auth/user-detail.methods.js");
require("./both/methods/auth/user-devices.methods.js");
require("./both/methods/auth/user-login.methods.js");
require("./both/methods/auth/user.methods.js");
require("./both/methods/establishment/establishment.methods.js");
require("./both/methods/establishment/order-history.methods.js");
require("./both/methods/establishment/order.methods.js");
require("./both/methods/establishment/schedule.methods.js");
require("./both/methods/establishment/table.method.js");
require("./both/methods/general/change-email.methods.js");
require("./both/methods/general/country.methods.js");
require("./both/methods/general/cron.methods.js");
require("./both/methods/general/email.methods.js");
require("./both/methods/general/iurest-invoice.methods.js");
require("./both/methods/general/parameter.methods.js");
require("./both/methods/general/push-notifications.methods.js");
require("./both/methods/menu/item.methods.js");
require("./both/models/auth/device.model.js");
require("./both/models/auth/menu.model.js");
require("./both/models/auth/role.model.js");
require("./both/models/auth/user-detail.model.js");
require("./both/models/auth/user-login.model.js");
require("./both/models/auth/user-penalty.model.js");
require("./both/models/auth/user-profile.model.js");
require("./both/models/auth/user.model.js");
require("./both/models/establishment/establishment.model.js");
require("./both/models/establishment/node.js");
require("./both/models/establishment/order-history.model.js");
require("./both/models/establishment/order.model.js");
require("./both/models/establishment/reward-point.model.js");
require("./both/models/establishment/reward.model.js");
require("./both/models/establishment/table.model.js");
require("./both/models/establishment/waiter-call-detail.model.js");
require("./both/models/general/city.model.js");
require("./both/models/general/cooking-time.model.js");
require("./both/models/general/country.model.js");
require("./both/models/general/currency.model.js");
require("./both/models/general/email-content.model.js");
require("./both/models/general/hour.model.js");
require("./both/models/general/language.model.js");
require("./both/models/general/menu.model.js");
require("./both/models/general/parameter.model.js");
require("./both/models/general/paymentMethod.model.js");
require("./both/models/general/pick-options.model.js");
require("./both/models/general/point-validity.model.js");
require("./both/models/general/point.model.js");
require("./both/models/general/queue.model.js");
require("./both/models/general/type-of-food.model.js");
require("./both/models/menu/addition.model.js");
require("./both/models/menu/category.model.js");
require("./both/models/menu/garnish-food.model.js");
require("./both/models/menu/item.model.js");
require("./both/models/menu/option-value.model.js");
require("./both/models/menu/option.model.js");
require("./both/models/menu/section.model.js");
require("./both/models/menu/subcategory.model.js");
require("./both/models/payment/cc-payment-method.model.js");
require("./both/models/payment/cc-request-colombia.model.js");
require("./both/models/payment/invoice-info.model.js");
require("./both/models/payment/iurest-invoice.model.js");
require("./both/models/payment/payment-history.model.js");
require("./both/models/payment/payment-transaction.model.js");
require("./both/models/payment/response-query.model.js");
require("./both/shared-components/validators/custom-validator.js");
require("./both/models/collection-object.model.js");
require("./server/cron-config.js");
require("./server/cron.js");
require("./server/main.js");
//# sourceURL=meteor://💻app/app/app.js
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvUVIvY29kZUdlbmVyYXRvci50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvd2FpdGVyLXF1ZXVlL3F1ZXVlcy5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvZXN0YWJsaXNobWVudC93YWl0ZXItcXVldWUvd2FpdGVyLXF1ZXVlLm1ldGhvZHMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbWV0aG9kcy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvb3JkZXItaGlzdG9yeS5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvZXN0YWJsaXNobWVudC9vcmRlci5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvZXN0YWJsaXNobWVudC9zY2hlZHVsZS5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvZXN0YWJsaXNobWVudC90YWJsZS5tZXRob2QudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbWV0aG9kcy9hdXRoL2NvbGxhYm9yYXRvcnMubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2F1dGgvbWVudS5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvYXV0aC91c2VyLWRldGFpbC5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvYXV0aC91c2VyLWRldmljZXMubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2F1dGgvdXNlci1sb2dpbi5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvYXV0aC91c2VyLm1ldGhvZHMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbWV0aG9kcy9nZW5lcmFsL2NoYW5nZS1lbWFpbC5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvZ2VuZXJhbC9jb3VudHJ5Lm1ldGhvZHMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbWV0aG9kcy9nZW5lcmFsL2Nyb24ubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2dlbmVyYWwvZW1haWwubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2dlbmVyYWwvaXVyZXN0LWludm9pY2UubWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tZXRob2RzL2dlbmVyYWwvcGFyYW1ldGVyLm1ldGhvZHMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbWV0aG9kcy9nZW5lcmFsL3B1c2gtbm90aWZpY2F0aW9ucy5tZXRob2RzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21ldGhvZHMvbWVudS9pdGVtLm1ldGhvZHMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvYXV0aC9kZXZpY2UuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9hdXRoL21lbnUuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9hdXRoL3JvbGUuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLWxvZ2luLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLXBlbmFsdHkuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXIuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9yZXdhcmQtcG9pbnQuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3Jld2FyZC5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvdGFibGUuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY2l0eS5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY29va2luZy10aW1lLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jb3VudHJ5LmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jdXJyZW5jeS5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvZW1haWwtY29udGVudC5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvaG91cnMuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2xhbmd1YWdlLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BheW1lbnRNZXRob2QuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BvaW50LXZhbGlkaXR5LmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wb2ludC5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvcXVldWUuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3R5cGUtb2YtZm9vZC5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL21lbnUvYWRkaXRpb24uY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9tZW51L2NhdGVnb3J5LmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvbWVudS9nYXJuaXNoLWZvb2QuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9tZW51L2l0ZW0uY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9tZW51L29wdGlvbi12YWx1ZS5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL21lbnUvb3B0aW9uLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvbWVudS9zZWN0aW9uLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvbWVudS9zdWJjYXRlZ29yeS5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL3BheW1lbnQvY2MtcGF5bWVudC1tZXRob2RzLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9pbnZvaWNlcy1pbmZvLmNvbGxlY3Rpb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9pdXJlc3QtaW52b2ljZXMuY29sbGVjdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9jb2xsZWN0aW9ucy9wYXltZW50L3BheW1lbnQtaGlzdG9yeS5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL2NvbGxlY3Rpb25zL3BheW1lbnQvcGF5bWVudC10cmFuc2FjdGlvbi5jb2xsZWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21vZGVscy9hdXRoL2RldmljZS5tb2RlbC50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tb2RlbHMvYXV0aC91c2VyLWRldGFpbC5tb2RlbC50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tb2RlbHMvYXV0aC91c2VyLWxvZ2luLm1vZGVsLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21vZGVscy9hdXRoL3VzZXItcHJvZmlsZS5tb2RlbC50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tb2RlbHMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50Lm1vZGVsLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9ib3RoL21vZGVscy9lc3RhYmxpc2htZW50L25vZGUudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL2JvdGgvbW9kZWxzL3BheW1lbnQvY2MtcmVxdWVzdC1jb2xvbWJpYS5tb2RlbC50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9tb2RlbHMvcGF5bWVudC9yZXNwb25zZS1xdWVyeS5tb2RlbC50cyIsIm1ldGVvcjovL/CfkrthcHAvYm90aC9zaGFyZWQtY29tcG9uZW50cy92YWxpZGF0b3JzL2N1c3RvbS12YWxpZGF0b3IudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2F1dGgvYWNjb3VudC1jcmVhdGlvbi50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvYXV0aC9lbWFpbC1jb25maWcudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2F1dGgvbWVudXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2F1dGgvcm9sZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvY2l0aWVzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9maXh0dXJlcy9nZW5lcmFsL2Nvb2tpbmctdGltZS50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9jb3VudHJpZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvY3VycmVuY2llcy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9lbWFpbC1jb250ZW50cy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9ob3Vycy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9sYW5ndWFnZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvcGFyYW1ldGVycy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9wYXltZW50TWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9wb2ludC12YWxpZGl0eS50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9wb2ludC50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC90eXBlLW9mLWZvb2QudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL2ZpeHR1cmVzL3BheW1lbnRzL2NjLXBheW1lbnQtbWV0aG9kcy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvcGF5bWVudHMvaW52b2ljZXMtaW5mby50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvZml4dHVyZXMvcmVtb3ZlLWZpeHR1cmVzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC9jb2xsYWJvcmF0b3JzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC9tZW51cy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2F1dGgvcm9sZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9hdXRoL3VzZXItZGV0YWlscy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2F1dGgvdXNlcnMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvZXN0YWJsaXNobWVudC9yZXdhcmQtcG9pbnQudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L3Jld2FyZC50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2VzdGFibGlzaG1lbnQvdGFibGUudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9jaXRpZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL2Nvb2tpbmctdGltZS50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvY291bnRyaWVzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9jdXJyZW5jeS50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvZW1haWwtY29udGVudC50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvaG91ci50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvbGFuZ3VhZ2VzLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL3BheW1lbnRNZXRob2QudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL3BvaW50LXZhbGlkaXR5LnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9wb2ludC50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvdHlwZS1vZi1mb29kLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvbWVudS9hZGRpdGlvbnMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L2NhdGVnb3JpZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L2dhcm5pc2gtZm9vZC50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvaXRlbS50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvb3B0aW9uLXZhbHVlcy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvb3B0aW9ucy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvc2VjdGlvbnMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L3N1YmNhdGVnb3JpZXMudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9wYXltZW50L2NjLXBheW1lbnQtbWV0aG9kLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvcGF5bWVudC9pbnZvaWNlLWluZm8udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9pbXBvcnRzL3B1YmxpY2F0aW9ucy9wYXltZW50L2l1cmVzdC1pbnZvaWNlcy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2ltcG9ydHMvcHVibGljYXRpb25zL3BheW1lbnQvcGF5bWVudC1oaXN0b3J5LnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9wdWJsaWNhdGlvbnMvcGF5bWVudC9wYXltZW50LXRyYW5zYWN0aW9uLnRzIiwibWV0ZW9yOi8v8J+Su2FwcC9zZXJ2ZXIvaW1wb3J0cy9pbmRleGVzL2luZGV4ZGIudHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9jcm9uLWNvbmZpZy50cyIsIm1ldGVvcjovL/CfkrthcHAvc2VydmVyL2Nyb24udHMiLCJtZXRlb3I6Ly/wn5K7YXBwL3NlcnZlci9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSw2REFBMEQ7QUFFMUQsc0RBQXVEO0FBRXZEO0lBWUksWUFBYSxpQkFBd0I7UUFUN0IsZUFBVSxHQUFHLElBQUksV0FBVyxDQUFDLFVBQVUsRUFBZSxDQUFDO1FBQ3ZELGFBQVEsR0FBZSxJQUFJLEtBQUssRUFBUSxDQUFDO1FBQ3pDLFFBQUcsR0FBRyxJQUFJLFdBQVcsQ0FBQyxVQUFVLEVBQWlCLENBQUM7UUFDbEQsY0FBUyxHQUFRLElBQUksV0FBSSxFQUFFLENBQUM7UUFDNUIsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNoQixzQkFBaUIsR0FBVSxDQUFDLENBQUM7UUFLakMsSUFBSSxDQUFDLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxZQUFZO1FBQ2YsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTyxtQkFBbUI7UUFDdkIsSUFBSSxNQUFXLENBQUM7UUFDaEIsSUFBSSxPQUFPLEdBQVUsQ0FBQyxDQUFDO1FBRXZCLEdBQUcsRUFBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7WUFDckQsT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFFLEVBQUUsQ0FBRSxDQUFDO1lBQ2hELE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBRSxFQUFFLEdBQUcsT0FBTyxDQUFFLENBQUM7WUFFbEQsRUFBRSxFQUFFLE1BQU0sSUFBSSxJQUFJLENBQUMsRUFBQztnQkFDaEIsSUFBSSxLQUFLLEdBQVEsSUFBSSxXQUFJLEVBQUUsQ0FBQztnQkFDNUIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUUsT0FBTyxHQUFHLEVBQUUsRUFBRSxLQUFLLENBQUUsQ0FBQztZQUNwRCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLFlBQVksQ0FBRSxNQUFNLENBQUMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxDQUFFLENBQUM7WUFDckQsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDO0lBRU8sUUFBUTtRQUNaLElBQUksTUFBVyxDQUFDO1FBQ2hCLElBQUksV0FBa0IsQ0FBQztRQUN2QixJQUFJLGVBQWUsR0FBWSxFQUFFLENBQUM7UUFDbEMsSUFBSSxTQUFTLEdBQWlCLElBQUksS0FBSyxFQUFVLENBQUM7UUFDbEQsSUFBSSxRQUFRLEdBQVUsQ0FBQyxDQUFDO1FBRXhCLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO1lBQy9CLFNBQVMsQ0FBQyxNQUFNLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQztRQUNoQyxDQUFDO1FBRUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUMsRUFBRTtZQUNwQyxlQUFlLENBQUMsTUFBTSxDQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFFLENBQUM7WUFDMUQsU0FBUyxDQUFDLE1BQU0sQ0FBRSxHQUFHLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBRSxDQUFDO1lBQ3pELFFBQVEsRUFBRSxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7UUFFSCxlQUFlLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFdkIsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBQyxFQUFFO1lBQzNCLElBQUksR0FBRyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUUsR0FBRyxDQUFFLENBQUM7WUFDbkMsU0FBUyxDQUFDLE1BQU0sQ0FBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBRSxDQUFDO1lBQzlCLElBQUksT0FBTyxHQUFRLElBQUksV0FBSSxFQUFFLENBQUM7WUFDOUIsT0FBTyxDQUFDLGdCQUFnQixDQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBRSxDQUFDO1lBQ2pELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLGFBQWEsQ0FBRSxVQUFlLEVBQUUsV0FBZ0I7UUFDcEQsSUFBSSxTQUFTLEdBQVEsSUFBSSxXQUFJLEVBQUUsQ0FBQztRQUNoQyxJQUFJLGtCQUF5QixDQUFDO1FBRTlCLGtCQUFrQixHQUFHLENBQUUsVUFBVSxDQUFDLFlBQVksRUFBRSxHQUFHLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBRSxDQUFDO1FBQ2hGLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUUsQ0FBQztRQUNqRCxTQUFTLENBQUMsWUFBWSxDQUFFLGtCQUFrQixDQUFFLENBQUM7UUFDN0MsU0FBUyxDQUFDLFdBQVcsQ0FBRSxVQUFVLENBQUUsQ0FBQztRQUNwQyxTQUFTLENBQUMsWUFBWSxDQUFFLFdBQVcsQ0FBRSxDQUFDO1FBQ3RDLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVPLGFBQWEsQ0FBRSxTQUFjLEVBQUUsVUFBc0I7UUFDekQsSUFBSSxXQUFXLEdBQVEsSUFBSSxXQUFJLEVBQUUsQ0FBQztRQUNsQyxJQUFJLFlBQVksR0FBUSxJQUFJLFdBQUksRUFBRSxDQUFDO1FBRW5DLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRCxZQUFZLENBQUMsZ0JBQWdCLENBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFFLENBQUM7UUFDcEQsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUcsQ0FBQyxFQUFFLFNBQVMsQ0FBRSxDQUFDO1FBRXJDLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7WUFDaEQsV0FBVyxHQUFHLFVBQVUsQ0FBRSxFQUFFLENBQUUsQ0FBQztZQUMvQixZQUFZLEdBQUcsVUFBVSxDQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFFLENBQUM7WUFFdEMsRUFBRSxFQUFFLFdBQVcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxZQUFZLENBQUMsWUFBWSxFQUFHLENBQUMsRUFBQztnQkFDNUQsVUFBVSxDQUFDLE1BQU0sQ0FBRSxDQUFFLEVBQUUsR0FBRyxDQUFDLENBQUUsRUFBRSxDQUFDLEVBQUUsV0FBVyxDQUFFLENBQUM7Z0JBQ2hELFVBQVUsQ0FBQyxNQUFNLENBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUUsQ0FBQztZQUM3QyxDQUFDO1FBQ0wsQ0FBQztRQUNELE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQUVPLFVBQVU7UUFDZCxJQUFJLGNBQWMsR0FBUSxJQUFJLFdBQUksRUFBRSxDQUFDO1FBQ3JDLElBQUksZUFBZSxHQUFRLElBQUksV0FBSSxFQUFFLENBQUM7UUFDdEMsSUFBSSxhQUFhLEdBQVEsSUFBSSxXQUFJLEVBQUUsQ0FBQztRQUVwQyxjQUFjLENBQUMsZ0JBQWdCLENBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFFLENBQUM7UUFDdEQsZUFBZSxDQUFDLGdCQUFnQixDQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBRSxDQUFDO1FBQ3ZELGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUUsQ0FBQztRQUVyRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQy9CLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3ZDLGVBQWUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3hDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFFLGNBQWMsRUFBRSxlQUFlLENBQUUsQ0FBQztZQUN0RSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQztRQUN2RSxDQUFDO1FBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLENBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRU8sUUFBUSxDQUFFLE1BQVcsRUFBRSxLQUFZO1FBQ3ZDLEVBQUUsRUFBRSxNQUFNLENBQUMsV0FBVyxFQUFFLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUUsSUFBSSxJQUFLLENBQUMsRUFBQztZQUNoRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBRSxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBRSxDQUFDO1lBQ2xELE1BQU0sQ0FBQztRQUNYLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFFLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFFLEdBQUcsQ0FBRSxDQUFFLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsQ0FBRSxNQUFNLENBQUMsWUFBWSxFQUFFLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBRSxHQUFHLENBQUUsQ0FBRSxDQUFDO0lBQ2hFLENBQUM7SUFFTyxRQUFRO1FBQ1osSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNoQixJQUFJLEtBQUssR0FBVyxLQUFLLENBQUM7UUFDMUIsSUFBSSxNQUFhLENBQUM7UUFDbEIsSUFBSSxNQUFNLEdBQVUsRUFBRSxDQUFDO1FBRXZCLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7WUFDdEQsT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFFLEVBQUUsQ0FBRSxDQUFDO1lBQ2hELElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUUsT0FBTyxHQUFHLEVBQUUsQ0FBRSxDQUFDO1FBQ3pELENBQUM7UUFFRCxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUV6QixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7WUFFWixJQUFJLFNBQVMsR0FBYSxFQUFFLElBQUksRUFBQyxFQUFFLEVBQUUsU0FBUyxFQUFDLENBQUMsRUFBRSxZQUFZLEVBQUMsQ0FBQyxFQUFFLENBQUM7WUFFbkUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7Z0JBQzVCLFdBQVcsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFFLEVBQUUsQ0FBRSxDQUFDO1lBQ3ZDLENBQUM7WUFDRCxNQUFNLEdBQUcsUUFBUSxDQUFFLFdBQVcsRUFBRSxDQUFDLENBQUUsQ0FBQztZQUNwQyxTQUFTLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQztZQUVoQyxPQUFPLElBQUksRUFBRSxDQUFDO2dCQUNWLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFFLE1BQU0sQ0FBRSxDQUFDO2dCQUN0QyxFQUFFLEVBQUUsTUFBTSxJQUFJLEVBQUUsSUFBSSxNQUFNLElBQUksRUFBRyxDQUFDLEVBQUM7b0JBQy9CLEtBQUssQ0FBQztnQkFDVixDQUFDO1lBQ0wsQ0FBQztZQUNELFNBQVMsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO1lBQzdCLFNBQVMsQ0FBQyxJQUFJLEdBQUcsV0FBVyxDQUFDO1lBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLFNBQVMsQ0FBRSxDQUFDO1lBQ2xDLFdBQVcsR0FBRyxFQUFFLENBQUM7WUFDakIsTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQztZQUU5QyxFQUFFLEVBQUUsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFFLENBQUMsRUFBQztnQkFDckIsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDYixLQUFLLENBQUM7WUFDVixDQUFDO1lBRUQsRUFBRSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBRSxDQUFDLEVBQUM7Z0JBQ3BCLE1BQU0sR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUUsTUFBTSxDQUFFLENBQUM7WUFDakQsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDO0lBRU8sb0JBQW9CLENBQUUsS0FBWTtRQUN0QyxPQUFPLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdEIsS0FBSyxJQUFJLEdBQUcsQ0FBQztZQUNiLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLENBQUM7UUFDaEMsQ0FBQztRQUNELE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVPLGFBQWEsQ0FBRSxNQUFhO1FBQ2hDLElBQUksZUFBZSxHQUFVLENBQUMsQ0FBQztRQUMvQixFQUFFLEVBQUUsTUFBTSxHQUFHLEVBQUcsQ0FBQyxFQUFDO1lBQ2QsZUFBZSxHQUFHLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDbEMsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsTUFBTSxHQUFHLEVBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsZUFBZSxHQUFHLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDbEMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ1IsZUFBZSxHQUFHLE1BQU0sQ0FBQztRQUN6QixDQUFDO1FBQ0QsTUFBTSxDQUFDLGVBQWUsQ0FBQztJQUMzQixDQUFDO0lBRU8sWUFBWTtRQUNoQixJQUFJLFFBQVEsR0FBVSxFQUFFLENBQUM7UUFFekIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUM5QixRQUFRLElBQUksTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ25ELENBQUMsQ0FBQyxDQUFDO1FBQ0gsUUFBUSxJQUFJLENBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBRSxDQUFDLENBQUUsQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFFLENBQUM7UUFDcEQsUUFBUSxJQUFJLENBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUUsQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFFLENBQUM7UUFDN0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVNLGFBQWE7UUFDaEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUVNLG9CQUFvQjtRQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2xDLENBQUM7SUFFTSxTQUFTO1FBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBN05ELHNDQTZOQzs7Ozs7Ozs7Ozs7Ozs7QUNqT0QsMENBQXVDO0FBRXZDLHdFQUFrRTtBQUVsRSw2RkFBK0U7QUFFL0Usb0hBQXFHO0FBRXJHLDBHQUFpSDtBQUVqSCxvRkFBdUU7QUFFdkUsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFbEI7O09BRUc7SUFDSCxlQUFNLENBQUMsT0FBTyxDQUFDO1FBRVgsSUFBSSxNQUFNLEdBQVUseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdkMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNULE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUM1QixlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzVDLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsZUFBTSxDQUFDLE9BQU8sQ0FBQztRQUVYOzs7V0FHRztRQUNILHdCQUF3QixFQUFFLFVBQVUsS0FBVTtZQUMxQyxJQUFJLGFBQWEsR0FBRyx5Q0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztZQUMxRSxJQUFJLEtBQUssR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDO1lBQ2hDLElBQUksUUFBUSxHQUFZLE1BQU0sQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyRSxJQUFJLFNBQVMsR0FBVyxFQUFFLENBQUM7WUFFM0IsRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdDLElBQUksUUFBUSxHQUFHLGVBQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDOUUsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUN2QyxTQUFTLEdBQUcsT0FBTyxHQUFHLFFBQVEsQ0FBQztvQkFDL0IsZUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRTt3QkFDM0QsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzs0QkFDTixNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixDQUFDLENBQUM7d0JBQ2pELENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ0osZUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQzt3QkFDdkQsQ0FBQztvQkFDTCxDQUFDLENBQUMsQ0FBQztnQkFDUCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLE1BQU0sSUFBSSxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztnQkFDekQsQ0FBQztZQUNMLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7WUFDekQsQ0FBQztRQUNMLENBQUM7UUFFRDs7O1dBR0c7UUFDSCxhQUFhLEVBQUUsVUFBVSxNQUFjLEVBQUUsS0FBVTtZQUMvQyxJQUFJLFFBQVEsR0FBYyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztZQUFBLENBQUM7WUFDNUMsSUFBSSxNQUFNLEdBQVUseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDdkMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDVCxJQUFJLEdBQUcsR0FBRyx5QkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDdkUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUNQLHlCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFDN0I7d0JBQ0ksU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRTtxQkFDbEMsQ0FBQyxDQUFDO29CQUNQLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUNwRCxDQUFDO1lBQ0wsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLHlCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUN0QyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNwRCxDQUFDO1FBQ0wsQ0FBQztRQUVEOzs7V0FHRztRQUNILGVBQWUsQ0FBQyxPQUFrQixFQUFFLEtBQVU7WUFDMUMsSUFBSSxlQUFlLEdBQUcscUNBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbEQsZUFBZSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ2pDLElBQUksT0FBTyxHQUFHLGVBQWUsQ0FBQyxXQUFXLENBQ3JDLFlBQVksRUFDWjtnQkFDSSxXQUFXLEVBQUUsQ0FBQztnQkFDZCxPQUFPLEVBQUUsQ0FBQztnQkFDVixZQUFZLEVBQUUsQ0FBQyxHQUFHLElBQUk7Z0JBQ3RCLFFBQVEsRUFBRSxDQUFDO2FBQ2QsRUFDRCxVQUFVLEdBQUcsRUFBRSxRQUFRO2dCQUNuQixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO2dCQUM3QixJQUFJLFdBQTZCLENBQUM7Z0JBQ2xDLElBQUksY0FBMEIsQ0FBQztnQkFFL0IsV0FBVyxHQUFHLGlEQUFpQixDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7Z0JBQ2xFLEVBQUUsQ0FBQyxDQUFDLFdBQVcsS0FBSyxTQUFTLElBQUksV0FBVyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ3BELGVBQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7b0JBQ25ELFdBQVcsR0FBRyxpREFBaUIsQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2dCQUN0RSxDQUFDO2dCQUVELElBQUksYUFBYSxHQUFHLHlDQUFjLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7Z0JBQ2xGLGNBQWMsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixFQUFFLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbEksRUFBRSxDQUFDLENBQUMsY0FBYyxLQUFLLFNBQVMsSUFBSSxjQUFjLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDMUQsZUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsU0FBUyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO29CQUMvRCxjQUFjLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3RJLENBQUM7Z0JBQ0QsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNYLElBQUksTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztnQkFDN0MsNkNBQWtCLENBQUMsTUFBTSxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQ25IO29CQUNJLElBQUksRUFBRSxFQUFFLGNBQWMsRUFBRSxjQUFjLENBQUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRSxHQUFHO2lCQUNoSCxDQUFDLENBQUM7Z0JBQ1AsOENBQThDO2dCQUM5QyxpREFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFDN0M7b0JBQ0ksSUFBSSxFQUFFLEVBQUUsV0FBVyxFQUFFLGNBQWMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRTtpQkFDdkUsQ0FBQyxDQUFDO2dCQUNQLHlDQUF5QztnQkFDekMsSUFBSSxRQUFRLEdBQVcsY0FBYyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7Z0JBQy9DLEVBQUUsQ0FBQyxDQUFDLFFBQVEsR0FBRyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDcEMsb0NBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDLE9BQU8sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDNUYsQ0FBQztnQkFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUM1QyxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxjQUFjLENBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQzlHLENBQUM7Z0JBQ0QsUUFBUSxFQUFFLENBQUM7WUFDZixDQUFDLENBQ0osQ0FBQztRQUNOLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3ZJRCwwQ0FBdUM7QUFDdkMsd0VBQWtFO0FBRWxFLDZGQUErRTtBQUUvRSxvSEFBcUc7QUFFckcsMEdBQWlIO0FBRWpILDBGQUE2RTtBQUM3RSwwRkFBNkU7QUFHN0Usd0dBQTBGO0FBRTFGLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRXBCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDYjs7OztXQUlHO1FBQ0gsVUFBVSxFQUFFLFVBQVUsTUFBYyxFQUFFLGFBQXNCLEVBQUUsS0FBVTtZQUN0RSxJQUFJLFFBQVEsR0FBVyxRQUFRLENBQUM7WUFDaEMsSUFBSSxLQUFLLEdBQVcsQ0FBQyxDQUFDO1lBQ3RCLElBQUksZ0JBQXdCLENBQUM7WUFFN0IsSUFBSSxHQUFHLEdBQUcsSUFBSSwyQkFBRyxDQUNmLE1BQU0sRUFDTixZQUFZLEVBQ1osRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQ2IsQ0FBQztZQUNGLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO2lCQUNuQixLQUFLLENBQUMsS0FBSyxDQUFDO2lCQUNaLElBQUksRUFBRSxDQUFDO1lBRVYsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztnQkFDbEIsUUFBUSxHQUFHLFVBQVUsRUFBRSxLQUFLLEdBQUcsS0FBSyxDQUFDO2dCQUNyQyxpREFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNuSCxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsY0FBYyxDQUFDO1lBQzFDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixJQUFJLE9BQU8sR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDL0MsZ0JBQWdCLEdBQUcsaURBQWlCLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztvQkFDckQsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLGNBQWM7b0JBQ3RDLFFBQVEsRUFBRSxLQUFLLENBQUMsTUFBTTtvQkFDdEIsT0FBTyxFQUFFLEtBQUssQ0FBQyxJQUFJO29CQUNuQixJQUFJLEVBQUUsT0FBTztvQkFDYixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU07b0JBQ3BCLGFBQWEsRUFBRSxLQUFLLENBQUMsSUFBSTtvQkFDekIsYUFBYSxFQUFFLElBQUksSUFBSSxFQUFFO29CQUN6QixLQUFLLEVBQUUsTUFBTTtvQkFDYixNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHO29CQUNwQixJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtpQkFDekIsQ0FBQyxDQUFDO1lBQ0wsQ0FBQztZQUNELE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRDs7Ozs7O1dBTUc7UUFDSCxTQUFTLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXO1lBQ3ZDLDJCQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxHQUFHLEVBQUUsR0FBRztnQkFDL0MsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDUixHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7b0JBQ2IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsRUFBRSxNQUFNO3dCQUM5QixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNYLEVBQUUsQ0FBQyxDQUFDLFdBQVcsS0FBSyxJQUFJLElBQUksV0FBVyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0NBQ3RELElBQUksSUFBSSxHQUFRO29DQUNkLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUc7b0NBQ3BCLGNBQWMsRUFBRSxXQUFXLENBQUMsZ0JBQWdCO29DQUM1QyxNQUFNLEVBQUUsV0FBVyxDQUFDLFFBQVE7b0NBQzVCLElBQUksRUFBRSxXQUFXLENBQUMsT0FBTztvQ0FDekIsU0FBUyxFQUFFLFdBQVcsQ0FBQyxTQUFTO29DQUNoQyxNQUFNLEVBQUUsU0FBUztpQ0FDbEIsQ0FBQztnQ0FDRixlQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDOzRCQUNwRCxDQUFDO3dCQUNILENBQUM7b0JBQ0gsQ0FBQyxDQUFDLENBQUM7Z0JBQ0wsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVEOzs7V0FHRztRQUNILFVBQVUsQ0FBQyxLQUFVO1lBQ25CLElBQUksT0FBTyxHQUFXLENBQUMsQ0FBQztZQUN4QixJQUFJLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLGtCQUFrQixFQUFFLENBQUM7WUFDN0MsSUFBSSxpQkFBaUIsR0FBc0IsNkNBQWtCLENBQUMsT0FBTyxDQUFDO2dCQUNwRSxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsY0FBYztnQkFDdEMsYUFBYSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO2FBQzFDLENBQUMsQ0FBQztZQUVILEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztnQkFDdEIsT0FBTyxHQUFHLGlCQUFpQixDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7Z0JBQ3JDLDZDQUFrQixDQUFDLE1BQU0sQ0FDdkIsRUFBRSxHQUFHLEVBQUUsaUJBQWlCLENBQUMsR0FBRyxFQUFFLEVBQzlCO29CQUNFLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLElBQUksSUFBSSxFQUFFLEdBQUc7aUJBQ3JGLENBQUMsQ0FBQztZQUNQLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTiw2Q0FBa0IsQ0FBQyxNQUFNLENBQUM7b0JBQ3hCLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxjQUFjO29CQUN0QyxJQUFJLEVBQUUsT0FBTztvQkFDYixjQUFjLEVBQUUsRUFBRTtvQkFDbEIsYUFBYSxFQUFFLFFBQVE7b0JBQ3ZCLGFBQWEsRUFBRSxJQUFJLElBQUksRUFBRTtpQkFDMUIsQ0FBQyxDQUFDO1lBQ0wsQ0FBQztZQUNELE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDakIsQ0FBQztRQUVEOzs7O1dBSUc7UUFDSCxTQUFTLEVBQUUsVUFBVSxVQUE0QixFQUFFLFVBQWtCO1lBQ25FLDJCQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxVQUFVLEdBQUcsRUFBRSxHQUFHO2dCQUNoRSxHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsR0FBRyxFQUFFLE1BQU07b0JBQzlCLGlEQUFpQixDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLEVBQzlDO3dCQUNFLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixFQUFFLElBQUksSUFBSSxFQUFFLEVBQUU7cUJBQzNGLENBQUMsQ0FBQztvQkFFTCxJQUFJLFlBQVksR0FBRyxpREFBaUIsQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7b0JBQzVFLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxJQUFJLEtBQUssZ0JBQWdCLElBQUksWUFBWSxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO3dCQUM3RSxJQUFJLE9BQU8sR0FBVSx5QkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQzt3QkFDcEUsSUFBSSxnQkFBZ0IsR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQzt3QkFDM0YsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3BDLElBQUksY0FBYyxHQUFrQix5Q0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDOzRCQUM5RixJQUFJLFlBQVksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDOzRCQUM5QixzQ0FBWSxDQUFDLE1BQU0sQ0FBQztnQ0FDbEIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxhQUFhO2dDQUM5QixnQkFBZ0IsRUFBRSxPQUFPLENBQUMsZ0JBQWdCO2dDQUMxQyxNQUFNLEVBQUUsT0FBTyxDQUFDLG1CQUFtQjtnQ0FDbkMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQ0FDMUUsU0FBUyxFQUFFLElBQUksSUFBSSxFQUFFO2dDQUNyQixXQUFXLEVBQUUsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztnQ0FDaEksU0FBUyxFQUFFLElBQUk7NkJBQ2hCLENBQUMsQ0FBQzs0QkFFSCxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEtBQUssSUFBSSxJQUFJLGdCQUFnQixDQUFDLGFBQWEsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dDQUM1RixJQUFJLFlBQVksR0FBcUIsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLG1CQUFtQixFQUFFO2dDQUNsSSxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDOzRCQUNqRyxDQUFDOzRCQUFDLElBQUksQ0FBQyxDQUFDO2dDQUNOLElBQUksUUFBUSxHQUFxQixnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixLQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dDQUNoSSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO29DQUNiLElBQUksVUFBVSxHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7b0NBQy9ILG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxnQ0FBZ0MsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsRUFDMUcsRUFBRSxJQUFJLEVBQUUsRUFBRSx3QkFBd0IsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dDQUMxRCxDQUFDO2dDQUFDLElBQUksQ0FBQyxDQUFDO29DQUNOLElBQUksa0JBQWtCLEdBQXVCLEVBQUUsQ0FBQztvQ0FDaEQsSUFBSSxTQUFpQixDQUFDO29DQUN0QixrQkFBa0IsR0FBRyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7b0NBQ3BELGtCQUFrQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUMsQ0FBQztvQ0FDdEUsU0FBUyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29DQUU5QyxJQUFJLFlBQVksR0FBcUIsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLG1CQUFtQixFQUFFO29DQUMxSSxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0NBQ2hHLENBQUM7NEJBQ0gsQ0FBQzt3QkFDSCxDQUFDO3dCQUVELE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUU7NEJBQzNCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dDQUNqQixJQUFJLGdCQUFnQixHQUFXLEVBQUUsQ0FBQyxlQUFlLENBQUM7Z0NBQ2xELElBQUksZ0JBQWdCLEdBQVksSUFBSSxDQUFDO2dDQUNyQyxzQ0FBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLGFBQWEsRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtvQ0FDaEssRUFBRSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO3dDQUNyQixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLFNBQVMsSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7NENBQ3BGLElBQUksR0FBRyxHQUFXLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQzs0Q0FDOUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDOzRDQUMxQyxzQ0FBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dDQUM3RixDQUFDO3dDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDOzRDQUMxQixnQkFBZ0IsR0FBRyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDOzRDQUNqRCxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dEQUMzQixnQkFBZ0IsR0FBRyxLQUFLLENBQUM7NENBQzNCLENBQUM7d0NBQ0gsQ0FBQztvQ0FDSCxDQUFDO2dDQUNILENBQUMsQ0FBQyxDQUFDOzRCQUNMLENBQUM7d0JBQ0gsQ0FBQyxDQUFDLENBQUM7d0JBRUgseUJBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUMxQzs0QkFDRSxJQUFJLEVBQUU7Z0NBQ0osTUFBTSxFQUFFLHVCQUF1QjtnQ0FDL0IsaUJBQWlCLEVBQUUsVUFBVTtnQ0FDN0IsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUU7NkJBQzlCO3lCQUNGLENBQ0YsQ0FBQzt3QkFDRixlQUFNLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ3ZFLENBQUM7b0JBRUQsSUFBSSxVQUFVLEdBQWUsb0NBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQztvQkFDMUUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQzt3QkFDZixJQUFJLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQzt3QkFDL0Isb0NBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUMzRixDQUFDO2dCQUNILENBQUMsQ0FBQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDSCxNQUFNLENBQUM7UUFDVCxDQUFDO1FBRUQsZUFBZSxFQUFFLFVBQVUsVUFBNEIsRUFBRSxVQUFrQjtZQUN6RSwyQkFBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxHQUFHLEVBQUUsR0FBRztnQkFDaEUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsRUFBRSxNQUFNO29CQUM5QixpREFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxFQUM5Qzt3QkFDRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFO3FCQUMzRixDQUFDLENBQUM7b0JBRUwsSUFBSSxZQUFZLEdBQUcsaURBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO29CQUM1RSxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxLQUFLLGdCQUFnQixJQUFJLFlBQVksQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDN0UsSUFBSSxPQUFPLEdBQVUseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7d0JBQ3BFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEtBQUssd0JBQXdCLENBQUMsQ0FBQyxDQUFDOzRCQUNoRCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFO2dDQUMzQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztvQ0FDakIsSUFBSSxnQkFBZ0IsR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztvQ0FDM0YsSUFBSSxRQUFRLEdBQXFCLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEtBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0NBRWhJLG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxnQ0FBZ0MsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsRUFDMUcsRUFBRSxJQUFJLEVBQUUsRUFBRSx3QkFBd0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7b0NBRTFJLElBQUksZ0JBQWdCLEdBQVcsRUFBRSxDQUFDLGVBQWUsQ0FBQztvQ0FDbEQsSUFBSSxnQkFBZ0IsR0FBWSxJQUFJLENBQUM7b0NBQ3JDLHNDQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsYUFBYSxFQUFFLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO3dDQUNoSyxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7NENBQ3JCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEtBQUssSUFBSSxJQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnREFDcEYsSUFBSSxHQUFHLEdBQVcsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO2dEQUM5QyxnQkFBZ0IsR0FBRyxnQkFBZ0IsR0FBRyxHQUFHLENBQUM7Z0RBQzFDLHNDQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7NENBQ3JFLENBQUM7NENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0RBQzFCLGdCQUFnQixHQUFHLGdCQUFnQixHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7Z0RBQ2pELHNDQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0RBQ3JFLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7b0RBQzNCLGdCQUFnQixHQUFHLEtBQUssQ0FBQztnREFDM0IsQ0FBQzs0Q0FDSCxDQUFDO3dDQUNILENBQUM7b0NBQ0gsQ0FBQyxDQUFDLENBQUM7Z0NBQ0wsQ0FBQzs0QkFDSCxDQUFDLENBQUMsQ0FBQzs0QkFFSCx5QkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0NBQ2xDLElBQUksRUFBRTtvQ0FDSixNQUFNLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsVUFBVSxDQUFDLFNBQVM7b0NBQ3hFLGlCQUFpQixFQUFFLElBQUksSUFBSSxFQUFFO2lDQUM5Qjs2QkFDRixDQUNBLENBQUM7d0JBQ0osQ0FBQztvQkFDSCxDQUFDO29CQUVELElBQUksVUFBVSxHQUFlLG9DQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7b0JBQzFFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7d0JBQ2YsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7d0JBQy9CLG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDM0YsQ0FBQztnQkFDSCxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUVELGVBQWUsRUFBRSxVQUFVLFVBQTRCO1lBQ3JELDJCQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxVQUFVLEdBQUcsRUFBRSxHQUFHO2dCQUNoRSxHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsR0FBRyxFQUFFLE1BQU07b0JBQzlCLGlEQUFpQixDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLEVBQzlDO3dCQUNFLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsVUFBVSxDQUFDLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFO3FCQUNyRyxDQUFDLENBQUM7b0JBRUwsSUFBSSxVQUFVLEdBQWUsb0NBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7b0JBQ3BGLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7d0JBQ2YsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7d0JBQy9CLG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDM0YsQ0FBQztnQkFDSCxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUVEOzs7O1dBSUc7UUFDSCxnQkFBZ0IsRUFBRSxVQUFVLFVBQTRCLEVBQUUsT0FBZTtZQUN2RSwyQkFBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxHQUFHLEVBQUUsR0FBRztnQkFDaEUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztvQkFDcEMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO2dCQUNmLENBQUM7Z0JBQ0QsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsRUFBRSxNQUFNO29CQUM5QixpREFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxFQUNwRDt3QkFDRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFO3FCQUN4RixDQUFDLENBQUM7b0JBRUwsSUFBSSxZQUFZLEdBQUcsaURBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO29CQUM1RSxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxLQUFLLGtCQUFrQixJQUFJLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO3dCQUN2RSxJQUFJLFVBQVUsR0FBRyxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQzt3QkFDMUUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDZixJQUFJLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQzs0QkFDL0Isb0NBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUN2RyxDQUFDO29CQUNILENBQUM7Z0JBQ0gsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRDs7OztXQUlHO1FBQ0gscUJBQXFCLENBQUMsY0FBc0IsRUFBRSxRQUFnQixFQUFFLFFBQWdCO1lBQzlFLElBQUksR0FBRyxHQUFlLElBQUksQ0FBQztZQUMzQixJQUFJLFFBQVEsR0FBVyxDQUFDLENBQUM7WUFDekIsSUFBSSxXQUFtQixDQUFDO1lBRXhCLElBQUksS0FBSyxHQUFHLHlCQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDOUMsSUFBSSxjQUFjLEdBQWlCLG9DQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztnQkFDN0Qsa0JBQWtCLEVBQUUsY0FBYztnQkFDbEMsU0FBUyxFQUFFLElBQUk7Z0JBQ2YsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsSUFBSSxFQUFFLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRTtnQkFDdkIscUJBQXFCLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDOUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRTthQUM5QyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7WUFFWCxFQUFFLENBQUMsQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLElBQUksaUJBQWlCLEdBQUcsNkNBQWtCLENBQUMsT0FBTyxDQUFDLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLEVBQ3ZGO29CQUNFLElBQUksRUFBRSxFQUFFLGVBQWUsRUFBRSxDQUFDLENBQUMsRUFBRTtpQkFDOUIsQ0FDRixDQUFDO2dCQUNGLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztvQkFDdEIsV0FBVyxHQUFHLGlCQUFpQixDQUFDLGNBQWMsQ0FBQztnQkFDakQsQ0FBQztnQkFDRCxHQUFHLENBQUM7b0JBQ0YsRUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUM5QixRQUFRLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxFQUFFLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ3ZFLENBQUM7b0JBQ0QsR0FBRyxHQUFHLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDakMsQ0FBQyxRQUNNLEdBQUcsQ0FBQyxPQUFPLElBQUksV0FBVyxJQUFJLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUNoRSxNQUFNLENBQUMsR0FBRyxDQUFDO1lBQ2IsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZCxDQUFDO1FBQ0gsQ0FBQztRQUVEOztVQUVFO1FBQ0YsWUFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHO1lBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDM0QsQ0FBQztLQUNGLENBQUMsQ0FBQztBQUNMLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDcFhELDBDQUF1QztBQUN2QywrRUFBbUQ7QUFFbkQsc0ZBQTBFO0FBRTFFLHlGQUE0RTtBQUU1RSxzR0FBMEY7QUFFMUYsc0ZBQTBFO0FBSTFFLHdGQUE0RTtBQUc1RSwyRkFBK0U7QUFDL0Usb0dBQXVGO0FBRXZGOztHQUVHO0FBQ0g7SUFDSSxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsSUFBSSxVQUFVLEdBQUcsNEJBQTRCLENBQUM7SUFFOUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUM1QixNQUFNLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBQ0QsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUNsQixDQUFDO0FBUkQsMERBUUM7QUFFRDs7R0FFRztBQUNIO0lBQ0ksSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLElBQUksVUFBVSxHQUFHLDRCQUE0QixDQUFDO0lBRTlDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDNUIsTUFBTSxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNELE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDbEIsQ0FBQztBQVJELDBDQVFDO0FBRUQ7Ozs7R0FJRztBQUNILHdCQUErQixjQUFzQjtJQUNqRCxJQUFJLGVBQWUsR0FBRyxJQUFJLDZCQUFhLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDeEQsZUFBZSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQy9CLE1BQU0sQ0FBQyxlQUFlLENBQUM7QUFDM0IsQ0FBQztBQUpELHdDQUlDO0FBRUQsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEIsZUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNYOzs7O1dBSUc7UUFDSCx3QkFBd0IsRUFBRSxVQUFVLE9BQWUsRUFBRSxPQUFlO1lBQ2hFLElBQUksTUFBTSxHQUFVLHlCQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBQ3BFLElBQUksY0FBNkIsQ0FBQztZQUNsQyxJQUFJLFlBQVksR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBRXpFLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RDLElBQUksYUFBYSxHQUFnQix1Q0FBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Z0JBQzlGLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7b0JBQ2hCLElBQUksaUJBQWlCLEdBQWMsaUNBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztvQkFDaEYsSUFBSSxhQUFhLEdBQVMsSUFBSSxJQUFJLEVBQUUsQ0FBQztvQkFDckMsSUFBSSxlQUFlLEdBQVMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDN0ksRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLGFBQWEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7d0JBQ3ZELElBQUksS0FBSyxHQUFXLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQzt3QkFDOUMsSUFBSSxPQUFPLEdBQVcsZUFBZSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQzt3QkFDckQsSUFBSSxNQUFNLEdBQVcsZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDO3dCQUNuRCxNQUFNLElBQUksZUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLEdBQUcsR0FBRyxPQUFPLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDO29CQUN4RSxDQUFDO29CQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNKLHVDQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGFBQWEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ3JGLENBQUM7Z0JBQ0wsQ0FBQztZQUNMLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNULGNBQWMsR0FBRyx5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztnQkFDckYsRUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFDakIsRUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7d0JBQzFCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQzs0QkFDM0Isb0NBQVcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUM5QztnQ0FDSSxJQUFJLEVBQUU7b0NBQ0YsYUFBYSxFQUFFLE1BQU0sQ0FBQyxHQUFHO29DQUN6QixxQkFBcUIsRUFBRSxNQUFNLENBQUMsZ0JBQWdCO2lDQUNqRDs2QkFDSixDQUFDLENBQUM7NEJBQ1AseUJBQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQzt3QkFDNUcsQ0FBQzt3QkFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNsQyx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7NEJBQy9GLG9DQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFDOUM7Z0NBQ0ksSUFBSSxFQUFFO29DQUNGLGFBQWEsRUFBRSxNQUFNLENBQUMsR0FBRztvQ0FDekIscUJBQXFCLEVBQUUsTUFBTSxDQUFDLGdCQUFnQjtpQ0FDakQ7NkJBQ0osQ0FBQyxDQUFDO3dCQUNYLENBQUM7d0JBQ0QsTUFBTSxDQUFDLGNBQWMsQ0FBQztvQkFDMUIsQ0FBQztvQkFBQyxJQUFJLENBQUMsQ0FBQzt3QkFDSixNQUFNLElBQUksZUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDbEMsQ0FBQztnQkFDTCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLE1BQU0sSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNsQyxDQUFDO1lBQ0wsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xDLENBQUM7UUFDTCxDQUFDO1FBRUQ7O1dBRUc7UUFFSCw2QkFBNkIsRUFBRSxVQUFVLGdCQUF3QjtZQUM3RCxJQUFJLGFBQWEsR0FBRyx5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1lBRWpGLEVBQUUsQ0FBQyxDQUFDLE9BQU8sYUFBYSxJQUFJLFdBQVcsSUFBSSxhQUFhLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDL0QsTUFBTSxDQUFDLGFBQWEsQ0FBQztZQUN6QixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1FBQ0wsQ0FBQztRQUVELDZCQUE2QixFQUFFO1lBQzNCLElBQUksVUFBVSxHQUFHLG9DQUFXLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztZQUMxRSxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUNiLElBQUksYUFBYSxHQUFHLHlDQUFjLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO2dCQUM5RixNQUFNLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztZQUNsQyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNqQixDQUFDO1FBQ0wsQ0FBQztRQUVELGlCQUFpQixFQUFFLFVBQVUsUUFBZ0IsRUFBRSxzQkFBOEIsRUFBRSxjQUFzQjtZQUNqRyxJQUFJLFlBQVksR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzFFLElBQUksbUJBQW1CLEdBQVcseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUM7WUFDeEYsSUFBSSxjQUFjLEdBQVcseUJBQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUVySSxFQUFFLENBQUMsQ0FBQyxjQUFjLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxVQUFVLEdBQVUseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztnQkFDaEUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLGFBQWEsS0FBSyxDQUFDLElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNqRSx5QkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQ3pFLENBQUM7WUFDTCxDQUFDO1lBRUQsSUFBSSxhQUFhLEdBQVcsb0NBQVcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLFlBQVksQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLHFCQUFxQixFQUFFLEVBQUUsRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ2pKLEVBQUUsQ0FBQyxDQUFDLGFBQWEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLElBQUksZUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNsQyxDQUFDO1FBQ0wsQ0FBQztRQUdELG1DQUFtQyxFQUFFLFVBQVUsUUFBZ0IsRUFBRSxzQkFBOEIsRUFBRSxjQUFzQjtZQUNuSCxJQUFJLFlBQVksR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBRTFFLHlCQUFNLENBQUMsSUFBSSxDQUFDO2dCQUNSLGFBQWEsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsc0JBQXNCLEVBQUUsT0FBTyxFQUFFLGNBQWM7Z0JBQzFGLE1BQU0sRUFBRSx3QkFBd0I7YUFDbkMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUN6QixLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFO29CQUN2QixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQzt3QkFDZixJQUFJLGdCQUFnQixHQUFlLG9DQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO3dCQUN6RixJQUFJLFFBQVEsR0FBcUIsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsS0FBSyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDOUgsSUFBSSxXQUFXLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7d0JBRXZILG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7d0JBQzlILG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQzt3QkFFMUssSUFBSSxnQkFBZ0IsR0FBVyxFQUFFLENBQUMsZUFBZSxDQUFDO3dCQUNsRCxJQUFJLGdCQUFnQixHQUFZLElBQUksQ0FBQzt3QkFDckMsc0NBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTs0QkFDdEosRUFBRSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO2dDQUNuQixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLFNBQVMsSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7b0NBQ2xGLElBQUksR0FBRyxHQUFXLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztvQ0FDOUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO29DQUMxQyxzQ0FBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dDQUN2RSxDQUFDO2dDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO29DQUN4QixnQkFBZ0IsR0FBRyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO29DQUNqRCxzQ0FBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO29DQUNyRSxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dDQUN6QixnQkFBZ0IsR0FBRyxLQUFLLENBQUM7b0NBQzdCLENBQUM7Z0NBQ0wsQ0FBQzs0QkFDTCxDQUFDO3dCQUNMLENBQUMsQ0FBQyxDQUFDO29CQUNQLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7Z0JBQ0gseUJBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLElBQUksSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDcEgsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLG1CQUFtQixHQUFXLHlCQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDO1lBQ3hGLElBQUksY0FBYyxHQUFXLHlCQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDckksRUFBRSxDQUFDLENBQUMsY0FBYyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLElBQUksVUFBVSxHQUFVLHlCQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7Z0JBQ2hFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxhQUFhLEtBQUssQ0FBQyxJQUFJLFVBQVUsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDakUseUJBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsY0FBYyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUN6RSxDQUFDO1lBQ0wsQ0FBQztZQUNELElBQUksYUFBYSxHQUFXLG9DQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxZQUFZLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxxQkFBcUIsRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNqSixFQUFFLENBQUMsQ0FBQyxhQUFhLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsTUFBTSxJQUFJLGVBQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDbEMsQ0FBQztRQUNMLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3ZORCwwQ0FBdUM7QUFFdkMsdUdBQTBGO0FBQzFGLHVHQUEwRjtBQUMxRix1RkFBMEU7QUFHMUUsNEVBQStEO0FBQy9ELDRGQUE4RTtBQUM5RSxvRkFBdUU7QUFDdkUsdUZBQTJFO0FBRTNFLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWDs7O1dBR0c7UUFDSCxvQkFBb0IsRUFBRSxVQUFVLE9BQWMsRUFBRSxVQUFrQjtZQUM5RCxJQUFJLGNBQWMsR0FBRyx5Q0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1lBQy9FLElBQUksTUFBTSxHQUFHLHlCQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBQ3RELElBQUksU0FBUyxHQUFHLGdDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGNBQWMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1lBRXZFLElBQUksYUFBYSxHQUF1QixFQUFFLENBQUM7WUFDM0MsSUFBSSxpQkFBaUIsR0FBMkIsRUFBRSxDQUFDO1lBRW5ELE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQzNCLElBQUksS0FBSyxHQUFHLHVCQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2dCQUNoRCxJQUFJLFFBQVEsR0FBVSxFQUFFLENBQUM7Z0JBQ3pCLElBQUksVUFBVSxHQUFVLEVBQUUsQ0FBQztnQkFFM0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTt3QkFDekIsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxLQUFLLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQzt3QkFDdkYsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs0QkFDZCxJQUFJLFVBQVUsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEtBQUssR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDOzRCQUNoRyxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dDQUNiLElBQUksYUFBYSxHQUFHLHNDQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2dDQUNoRSxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztvQ0FDeEIsUUFBUSxDQUFDLElBQUksQ0FBQzt3Q0FDVixpQkFBaUIsRUFBRSxhQUFhLENBQUMsSUFBSTt3Q0FDckMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxLQUFLO3FDQUMxQixDQUFDLENBQUM7Z0NBQ1AsQ0FBQztnQ0FBQyxJQUFJLENBQUMsQ0FBQztvQ0FDSixRQUFRLENBQUMsSUFBSSxDQUFDO3dDQUNWLGlCQUFpQixFQUFFLGFBQWEsQ0FBQyxJQUFJO3FDQUN4QyxDQUFDLENBQUM7Z0NBQ1AsQ0FBQzs0QkFDTCxDQUFDO3dCQUNMLENBQUM7b0JBQ0wsQ0FBQyxDQUFDLENBQUM7Z0JBQ1AsQ0FBQztnQkFDRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFO3dCQUMxQixJQUFJLEdBQUcsR0FBRywrQkFBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUN6QyxVQUFVLENBQUMsSUFBSSxDQUFDOzRCQUNaLGFBQWEsRUFBRSxHQUFHLENBQUMsSUFBSTs0QkFDdkIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixLQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7eUJBQ2xHLENBQUMsQ0FBQztvQkFDUCxDQUFDLENBQUMsQ0FBQztnQkFDUCxDQUFDO2dCQUNELElBQUksWUFBOEIsQ0FBQztnQkFDbkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLFlBQVksR0FBRzt3QkFDWCxTQUFTLEVBQUUsS0FBSyxDQUFDLElBQUk7d0JBQ3JCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTt3QkFDdkIsYUFBYSxFQUFFLFFBQVE7d0JBQ3ZCLFNBQVMsRUFBRSxVQUFVO3dCQUNyQixLQUFLLEVBQUUsS0FBSyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEtBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSzt3QkFDakcsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO3dCQUN6QixlQUFlLEVBQUUsSUFBSSxDQUFDLGVBQWU7cUJBQ3hDO2dCQUNMLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ0osWUFBWSxHQUFHO3dCQUNYLFNBQVMsRUFBRSxLQUFLLENBQUMsSUFBSTt3QkFDckIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO3dCQUN2QixhQUFhLEVBQUUsUUFBUTt3QkFDdkIsU0FBUyxFQUFFLFVBQVU7d0JBQ3JCLEtBQUssRUFBRSxLQUFLLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsS0FBSyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO3dCQUNqRyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7cUJBQzVCO2dCQUNMLENBQUM7Z0JBQ0QsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNyQyxDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7Z0JBQ25DLElBQUksU0FBUyxHQUFHLCtCQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO2dCQUNoRSxJQUFJLFlBQVksR0FBeUI7b0JBQ3JDLGFBQWEsRUFBRSxTQUFTLENBQUMsSUFBSTtvQkFDN0IsUUFBUSxFQUFFLFFBQVEsQ0FBQyxRQUFRO29CQUMzQixLQUFLLEVBQUUsU0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEtBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztpQkFDeEc7Z0JBQ0QsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3pDLENBQUMsQ0FBQyxDQUFDO1lBRUgsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztnQkFDOUIseUNBQWMsQ0FBQyxNQUFNLENBQUM7b0JBQ2xCLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO29CQUM5QixhQUFhLEVBQUUsSUFBSSxJQUFJLEVBQUU7b0JBQ3pCLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxnQkFBZ0I7b0JBQzFDLGtCQUFrQixFQUFFLGNBQWMsQ0FBQyxJQUFJO29CQUN2QyxxQkFBcUIsRUFBRSxjQUFjLENBQUMsT0FBTztvQkFDN0MsbUJBQW1CLEVBQUUsY0FBYyxDQUFDLEtBQUs7b0JBQ3pDLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FBUztvQkFDcEMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxJQUFJO29CQUN4QixZQUFZLEVBQUUsTUFBTSxDQUFDLE9BQU87b0JBQzVCLFdBQVcsRUFBRSxPQUFPLENBQUMsWUFBWTtvQkFDakMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxhQUFhO29CQUNsQyxRQUFRLEVBQUUsU0FBUyxDQUFDLElBQUk7b0JBQ3hCLEtBQUssRUFBRSxhQUFhO29CQUNwQixTQUFTLEVBQUUsaUJBQWlCO29CQUM1QixtQkFBbUIsRUFBRSxPQUFPLENBQUMsbUJBQW1CO2lCQUNuRCxDQUFDLENBQUM7WUFDUCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0oseUNBQWMsQ0FBQyxNQUFNLENBQUM7b0JBQ2xCLGFBQWEsRUFBRSxVQUFVO29CQUN6QixhQUFhLEVBQUUsSUFBSSxJQUFJLEVBQUU7b0JBQ3pCLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxnQkFBZ0I7b0JBQzFDLGtCQUFrQixFQUFFLGNBQWMsQ0FBQyxJQUFJO29CQUN2QyxxQkFBcUIsRUFBRSxjQUFjLENBQUMsT0FBTztvQkFDN0MsbUJBQW1CLEVBQUUsY0FBYyxDQUFDLEtBQUs7b0JBQ3pDLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FBUztvQkFDcEMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxJQUFJO29CQUN4QixZQUFZLEVBQUUsTUFBTSxDQUFDLE9BQU87b0JBQzVCLFdBQVcsRUFBRSxPQUFPLENBQUMsWUFBWTtvQkFDakMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxhQUFhO29CQUNsQyxRQUFRLEVBQUUsU0FBUyxDQUFDLElBQUk7b0JBQ3hCLEtBQUssRUFBRSxhQUFhO29CQUNwQixTQUFTLEVBQUUsaUJBQWlCO2lCQUMvQixDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztLQUNKLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDcklELDBDQUF1QztBQUV2QyxzRkFBMEU7QUFFMUUsc0ZBQTBFO0FBRTFFLHNHQUEwRjtBQUUxRix5RkFBNEU7QUFFNUUsb0dBQXVGO0FBRXZGLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWDs7OztXQUlHO1FBQ0gsY0FBYyxFQUFFLFVBQVUsYUFBd0IsRUFBRSxnQkFBd0IsRUFBRSxZQUFvQixFQUFFLFdBQW1CLEVBQUUsWUFBb0I7WUFFekksSUFBSSxPQUFPLEdBQVUseUJBQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7WUFDMUUsSUFBSSxlQUFlLEdBQWtCLHlDQUFjLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7WUFFbEcsSUFBSSxPQUFPLEdBQVUseUJBQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO2dCQUMzQyxhQUFhLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRTtnQkFDOUIsZ0JBQWdCLEVBQUUsZ0JBQWdCO2dCQUNsQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUc7Z0JBQ3BCLE1BQU0sRUFBRSx3QkFBd0I7YUFDbkMsQ0FBQyxDQUFDO1lBRUgsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDVixJQUFJLGlCQUFpQixHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2dCQUN6SSxJQUFJLGdCQUFnQixHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7Z0JBQ2pKLHlCQUFNLENBQUMsTUFBTSxDQUFDO29CQUNWLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO29CQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0I7b0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztvQkFDcEIsTUFBTSxFQUFFLHdCQUF3QjtpQkFDbkMsRUFDRyxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsRUFBRSxDQUN0QyxDQUFDO2dCQUNGLHlCQUFNLENBQUMsTUFBTSxDQUFDO29CQUNWLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO29CQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0I7b0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztvQkFDcEIsTUFBTSxFQUFFLHdCQUF3QjtpQkFDbkMsRUFDRztvQkFDSSxJQUFJLEVBQUU7d0JBQ0YsaUJBQWlCLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRTt3QkFDbEMsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUU7d0JBQzdCLFlBQVksRUFBRSxpQkFBaUI7d0JBQy9CLGNBQWMsRUFBRSxPQUFPLENBQUMsY0FBYyxHQUFHLENBQUM7d0JBQzFDLG1CQUFtQixFQUFFLGdCQUFnQjtxQkFDeEM7aUJBQ0osQ0FDSixDQUFDO1lBQ04sQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksV0FBVyxHQUFXLGVBQWUsQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7Z0JBQy9ELGVBQWUsQ0FBQyxnQkFBZ0IsR0FBRyxXQUFXLENBQUM7Z0JBRS9DLHlDQUFjLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGVBQWUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxlQUFlLENBQUMsQ0FBQztnQkFDckUseUJBQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ1YsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLGFBQWEsRUFBRSxJQUFJLElBQUksRUFBRTtvQkFDekIsZ0JBQWdCLEVBQUUsZ0JBQWdCO29CQUNsQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUc7b0JBQ3BCLElBQUksRUFBRSxXQUFXO29CQUNqQixNQUFNLEVBQUUsd0JBQXdCO29CQUNoQyxLQUFLLEVBQUUsQ0FBQyxhQUFhLENBQUM7b0JBQ3RCLFlBQVksRUFBRSxXQUFXO29CQUN6QixjQUFjLEVBQUUsQ0FBQztvQkFDakIsU0FBUyxFQUFFLEVBQUU7b0JBQ2IsbUJBQW1CLEVBQUUsWUFBWTtpQkFDcEMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUMxQixJQUFJLGdCQUFnQixHQUFlLG9DQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQ3JGLElBQUksUUFBUSxHQUFxQixnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixLQUFLLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0gsb0NBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLGdDQUFnQyxFQUFFLGVBQWUsQ0FBQyxHQUFHLEVBQUUsRUFDbkcsRUFBRSxJQUFJLEVBQUUsRUFBRSx3QkFBd0IsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLGVBQWUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUUvRixJQUFJLE9BQU8sR0FBVyxhQUFhLENBQUMsZUFBZSxDQUFDO2dCQUNwRCxJQUFJLGdCQUFnQixHQUFZLElBQUksQ0FBQztnQkFDckMsc0NBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7b0JBQ25LLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQzt3QkFDbkIsT0FBTyxHQUFHLE9BQU8sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO3dCQUMvQixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDZixzQ0FBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDOzRCQUN0RSxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7d0JBQzVCLENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ0osc0NBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7NEJBQ2hGLGdCQUFnQixHQUFHLEtBQUssQ0FBQzt3QkFDN0IsQ0FBQztvQkFDTCxDQUFDO2dCQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFFRCxlQUFlLEVBQUUsVUFBVSxhQUF3QixFQUFFLGdCQUF3QixFQUFFLFFBQWdCLEVBQUUsV0FBbUIsRUFBRSxZQUFvQjtZQUV0SSxJQUFJLE9BQU8sR0FBVSx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUNsRSxJQUFJLGVBQWUsR0FBa0IseUNBQWMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUVsRyxJQUFJLE9BQU8sR0FBVSx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7Z0JBQzNDLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO2dCQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0I7Z0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztnQkFDcEIsTUFBTSxFQUFFLHdCQUF3QjthQUNuQyxDQUFDLENBQUM7WUFFSCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNWLElBQUksaUJBQWlCLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7Z0JBQ3pJLElBQUksZ0JBQWdCLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFDakoseUJBQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ1YsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLGdCQUFnQixFQUFFLGdCQUFnQjtvQkFDbEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHO29CQUNwQixNQUFNLEVBQUUsd0JBQXdCO2lCQUNuQyxFQUNHLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxFQUFFLENBQ3RDLENBQUM7Z0JBQ0YseUJBQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ1YsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLGdCQUFnQixFQUFFLGdCQUFnQjtvQkFDbEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHO29CQUNwQixNQUFNLEVBQUUsd0JBQXdCO2lCQUNuQyxFQUNHO29CQUNJLElBQUksRUFBRTt3QkFDRixpQkFBaUIsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO3dCQUNsQyxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRTt3QkFDN0IsWUFBWSxFQUFFLGlCQUFpQjt3QkFDL0IsY0FBYyxFQUFFLE9BQU8sQ0FBQyxjQUFjLEdBQUcsQ0FBQzt3QkFDMUMsbUJBQW1CLEVBQUUsZ0JBQWdCO3FCQUN4QztpQkFDSixDQUNKLENBQUM7WUFDTixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxXQUFXLEdBQVcsZUFBZSxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDL0QsZUFBZSxDQUFDLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztnQkFFL0MseUNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLEdBQUcsRUFBRSxFQUFFLGVBQWUsQ0FBQyxDQUFDO2dCQUNyRSx5QkFBTSxDQUFDLE1BQU0sQ0FBQztvQkFDVixhQUFhLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRTtvQkFDOUIsYUFBYSxFQUFFLElBQUksSUFBSSxFQUFFO29CQUN6QixnQkFBZ0IsRUFBRSxnQkFBZ0I7b0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztvQkFDcEIsSUFBSSxFQUFFLFdBQVc7b0JBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7b0JBQ2hDLEtBQUssRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDdEIsWUFBWSxFQUFFLFdBQVc7b0JBQ3pCLGNBQWMsRUFBRSxDQUFDO29CQUNqQixTQUFTLEVBQUUsRUFBRTtvQkFDYixtQkFBbUIsRUFBRSxZQUFZO2lCQUNwQyxDQUFDLENBQUM7WUFDUCxDQUFDO1lBQ0QsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFCLElBQUksZ0JBQWdCLEdBQWUsb0NBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDckYsSUFBSSxRQUFRLEdBQXFCLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEtBQUssZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMzSCxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsZ0NBQWdDLEVBQUUsZUFBZSxDQUFDLEdBQUcsRUFBRSxFQUNuRyxFQUFFLElBQUksRUFBRSxFQUFFLHdCQUF3QixFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxhQUFhLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBRS9GLElBQUksT0FBTyxHQUFXLGFBQWEsQ0FBQyxlQUFlLENBQUM7Z0JBQ3BELElBQUksZ0JBQWdCLEdBQVksSUFBSSxDQUFDO2dCQUNyQyxzQ0FBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtvQkFDbkssRUFBRSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO3dCQUNuQixPQUFPLEdBQUcsT0FBTyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7d0JBQy9CLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDOzRCQUNmLHNDQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7NEJBQ3RFLGdCQUFnQixHQUFHLElBQUksQ0FBQzt3QkFDNUIsQ0FBQzt3QkFBQyxJQUFJLENBQUMsQ0FBQzs0QkFDSixzQ0FBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQzs0QkFDaEYsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO3dCQUM3QixDQUFDO29CQUNMLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVEOzs7Ozs7V0FNRztRQUNILG1CQUFtQixFQUFFLFVBQVUsa0JBQW1DLEVBQUUsZ0JBQXdCLEVBQUUsWUFBb0IsRUFBRSxlQUF1QjtZQUN2SSxJQUFJLE9BQU8sR0FBVSx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUUxRSxJQUFJLE9BQU8sR0FBVSx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7Z0JBQzNDLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO2dCQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0I7Z0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztnQkFDcEIsTUFBTSxFQUFFLHdCQUF3QjthQUNuQyxDQUFDLENBQUM7WUFDSCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNWLElBQUksaUJBQWlCLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFDL0gsSUFBSSxXQUFXLEdBQW9CLGVBQU0sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBRXhHLHlCQUFNLENBQUMsTUFBTSxDQUFDO29CQUNWLGFBQWEsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO29CQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0I7b0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztvQkFDcEIsTUFBTSxFQUFFLHdCQUF3QjtpQkFDbkMsRUFDRztvQkFDSSxJQUFJLEVBQUU7d0JBQ0YsaUJBQWlCLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRTt3QkFDbEMsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUU7d0JBQzdCLFlBQVksRUFBRSxpQkFBaUI7d0JBQy9CLFNBQVMsRUFBRSxXQUFXO3FCQUN6QjtpQkFDSixDQUNKLENBQUM7WUFDTixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxlQUFlLEdBQWtCLHlDQUFjLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7Z0JBQ2xHLElBQUksV0FBVyxHQUFXLGVBQWUsQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7Z0JBQy9ELGVBQWUsQ0FBQyxnQkFBZ0IsR0FBRyxXQUFXLENBQUM7Z0JBRS9DLHlDQUFjLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGVBQWUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxlQUFlLENBQUMsQ0FBQztnQkFDckUseUJBQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ1YsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLGFBQWEsRUFBRSxJQUFJLElBQUksRUFBRTtvQkFDekIsZ0JBQWdCLEVBQUUsZ0JBQWdCO29CQUNsQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUc7b0JBQ3BCLElBQUksRUFBRSxXQUFXO29CQUNqQixNQUFNLEVBQUUsd0JBQXdCO29CQUNoQyxLQUFLLEVBQUUsRUFBRTtvQkFDVCxZQUFZLEVBQUUsZUFBZTtvQkFDN0IsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLFNBQVMsRUFBRSxrQkFBa0I7aUJBQ2hDLENBQUMsQ0FBQztZQUNQLENBQUM7UUFDTCxDQUFDO1FBRUQsb0JBQW9CLEVBQUUsVUFBVSxrQkFBbUMsRUFBRSxnQkFBd0IsRUFBRSxRQUFnQixFQUFFLGVBQXVCO1lBQ3BJLElBQUksT0FBTyxHQUFVLHlCQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBRWxFLElBQUksT0FBTyxHQUFVLHlCQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQztnQkFDM0MsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7Z0JBQzlCLGdCQUFnQixFQUFFLGdCQUFnQjtnQkFDbEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHO2dCQUNwQixNQUFNLEVBQUUsd0JBQXdCO2FBQ25DLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ1YsSUFBSSxpQkFBaUIsR0FBVyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2dCQUMvSCxJQUFJLFdBQVcsR0FBb0IsZUFBTSxDQUFDLElBQUksQ0FBQywwQkFBMEIsRUFBRSxrQkFBa0IsRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFFeEcseUJBQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ1YsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLGdCQUFnQixFQUFFLGdCQUFnQjtvQkFDbEMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHO29CQUNwQixNQUFNLEVBQUUsd0JBQXdCO2lCQUNuQyxFQUNHO29CQUNJLElBQUksRUFBRTt3QkFDRixpQkFBaUIsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFO3dCQUNsQyxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRTt3QkFDN0IsWUFBWSxFQUFFLGlCQUFpQjt3QkFDL0IsU0FBUyxFQUFFLFdBQVc7cUJBQ3pCO2lCQUNKLENBQ0osQ0FBQztZQUNOLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLGVBQWUsR0FBa0IseUNBQWMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztnQkFDbEcsSUFBSSxXQUFXLEdBQVcsZUFBZSxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDL0QsZUFBZSxDQUFDLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztnQkFFL0MseUNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLEdBQUcsRUFBRSxFQUFFLGVBQWUsQ0FBQyxDQUFDO2dCQUNyRSx5QkFBTSxDQUFDLE1BQU0sQ0FBQztvQkFDVixhQUFhLEVBQUUsZUFBTSxDQUFDLE1BQU0sRUFBRTtvQkFDOUIsYUFBYSxFQUFFLElBQUksSUFBSSxFQUFFO29CQUN6QixnQkFBZ0IsRUFBRSxnQkFBZ0I7b0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRztvQkFDcEIsSUFBSSxFQUFFLFdBQVc7b0JBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7b0JBQ2hDLEtBQUssRUFBRSxFQUFFO29CQUNULFlBQVksRUFBRSxlQUFlO29CQUM3QixjQUFjLEVBQUUsQ0FBQztvQkFDakIsU0FBUyxFQUFFLGtCQUFrQjtpQkFDaEMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztRQUNMLENBQUM7UUFDRDs7O1dBR0c7UUFDSCx3QkFBd0IsRUFBRSxVQUFVLG1CQUFvQyxFQUFFLE9BQWM7WUFDcEYsSUFBSSxtQkFBbUIsR0FBb0IsT0FBTyxDQUFDLFNBQVMsQ0FBQztZQUU3RCxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDeEMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7b0JBQ3hDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLEtBQUssV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7d0JBQ3BELFdBQVcsQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDO3dCQUNuRSxXQUFXLENBQUMsZUFBZSxHQUFHLFdBQVcsQ0FBQyxlQUFlLEdBQUcsV0FBVyxDQUFDLGVBQWUsQ0FBQztvQkFDNUYsQ0FBQztnQkFDTCxDQUFDLENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1lBRUgsbUJBQW1CLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7Z0JBQ3hDLEVBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEtBQUssV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUMxRixtQkFBbUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQzFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztRQUMvQixDQUFDO0tBQ0osQ0FBQyxDQUFDO0FBQ1AsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNsVEQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFbEI7O01BRUU7SUFHRjs7Ozs7OztNQU9FO0lBRUYsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUdkLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdkJELDBDQUF1QztBQUV2QyxzRkFBMEU7QUFDMUUsc0ZBQTBFO0FBQzFFLGdIQUFrRztBQUNsRyx5RkFBNEU7QUFFNUUsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEIsZUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNYLHFCQUFxQixFQUFFLFVBQVUsUUFBUTtZQUNyQyxJQUFJLEtBQUssR0FBRyx5QkFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUN6RCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssSUFBSSxXQUFXLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQy9DLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDakIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDaEIsQ0FBQztRQUNMLENBQUM7UUFFRCxjQUFjLEVBQUUsVUFBVSxPQUFPO1lBQzdCLElBQUksS0FBSyxHQUFHLHlCQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7WUFDN0UsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLElBQUksV0FBVyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMvQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7UUFDTCxDQUFDO1FBRUQsa0JBQWtCLEVBQUUsVUFBVSxRQUFnQixFQUFFLGlCQUF5QixFQUFFLG9CQUE0QixFQUFFLHdCQUFnQztZQUNySSxFQUFFLENBQUMsQ0FBQyxvQkFBb0IsS0FBSyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BELE1BQU0sSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xDLENBQUM7WUFDRCxJQUFJLGNBQWMsR0FBVSx5QkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxDQUFDLENBQUM7WUFDOUUsSUFBSSxrQkFBa0IsR0FBVSx5QkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxDQUFDLENBQUM7WUFFdEYsRUFBRSxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO2dCQUNyQixFQUFFLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO29CQUMvQixFQUFFLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxnQkFBZ0IsS0FBSyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7d0JBRTVELElBQUksYUFBYSxHQUFXLGlEQUFpQixDQUFDLElBQUksQ0FBQzs0QkFDL0MsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLGtCQUFrQjs0QkFDM0YsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsV0FBVzt5QkFDekMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQzt3QkFDbEIsRUFBRSxDQUFDLENBQUMsYUFBYSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3JCLElBQUksaUJBQWlCLEdBQVcsY0FBYyxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUM7NEJBQ2pFLHlCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGNBQWMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLENBQUMsQ0FBQzs0QkFDM0YseUJBQU0sQ0FBQyxJQUFJLENBQUM7Z0NBQ1IsYUFBYSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDLEdBQUc7Z0NBQ3pGLE1BQU0sRUFBRSx3QkFBd0I7NkJBQ25DLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtnQ0FDekIsaURBQWlCLENBQUMsTUFBTSxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGNBQWMsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQzs0QkFDOUwsQ0FBQyxDQUFDLENBQUM7NEJBRUgsRUFBRSxDQUFDLENBQUMsa0JBQWtCLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0NBQ3ZDLHlCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsYUFBYSxFQUFFLGtCQUFrQixDQUFDLGFBQWEsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0NBQ2xILHlCQUFNLENBQUMsSUFBSSxDQUFDO29DQUNSLGFBQWEsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsT0FBTyxFQUFFLGNBQWMsQ0FBQyxHQUFHO29DQUN6RixNQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSx3QkFBd0IsQ0FBQyxFQUFFO2lDQUN4RSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7b0NBQ3pCLHlCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLElBQUksSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0NBQ2pKLENBQUMsQ0FBQyxDQUFDOzRCQUNQLENBQUM7NEJBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dDQUM5Qyx5QkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQ0FDL0YseUJBQU0sQ0FBQyxJQUFJLENBQUM7b0NBQ1IsYUFBYSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDLEdBQUc7b0NBQ3pGLE1BQU0sRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLHdCQUF3QixFQUFFLHdCQUF3QixDQUFDLEVBQUU7aUNBQ3hFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtvQ0FDekIseUJBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztnQ0FDakosQ0FBQyxDQUFDLENBQUM7NEJBQ1AsQ0FBQzs0QkFBQyxJQUFJLENBQUMsQ0FBQztnQ0FDSixNQUFNLElBQUksZUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs0QkFDbEMsQ0FBQzs0QkFFRCxJQUFJLGFBQWEsR0FBVSx5QkFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxDQUFDLENBQUM7NEJBQzdFLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxhQUFhLEtBQUssQ0FBQyxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztnQ0FDdkUseUJBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsYUFBYSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQzs0QkFDNUUsQ0FBQzs0QkFFRCxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLGFBQWEsRUFBRSxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7d0JBQ25HLENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ0osTUFBTSxJQUFJLGVBQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQ2xDLENBQUM7b0JBQ0wsQ0FBQztvQkFBQyxJQUFJLENBQUMsQ0FBQzt3QkFDSixNQUFNLElBQUksZUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDbEMsQ0FBQztnQkFDTCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLE1BQU0sSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNsQyxDQUFDO1lBQ0wsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xDLENBQUM7UUFDTCxDQUFDO0tBQ0osQ0FBQyxDQUFDO0FBQ1AsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUM1RkQsMENBQXVDO0FBR3ZDLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWCxzQkFBc0IsRUFBRSxVQUFXLEtBQVc7WUFDMUMsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQztnQkFDN0IsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7Z0JBQ3hCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtnQkFDeEIsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPO2FBQ3pCLENBQUMsQ0FBQztZQUVILE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDbEIsQ0FBQztLQUNKLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDaEJELDBDQUF1QztBQUN2QywyRUFBK0Q7QUFDL0QseUZBQTRFO0FBQzVFLDJFQUErRDtBQUsvRCxFQUFFLENBQUMsQ0FBQyxlQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNsQixlQUFNLENBQUMsT0FBTyxDQUFDO1FBQ1gsUUFBUSxFQUFFO1lBRU4sSUFBSSxRQUFRLEdBQVcsRUFBRSxDQUFDO1lBQzFCLElBQUksVUFBVSxHQUFHLG9DQUFXLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztZQUMxRSxJQUFJLElBQUksR0FBRyx1QkFBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7WUFDakUsdUJBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFnQixJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7Z0JBQ2hJLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxDQUFDLENBQUM7WUFDSCxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ3BCLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3JCRCwwQ0FBdUM7QUFDdkMseUZBQTRFO0FBRzVFLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWCxPQUFPLEVBQUU7WUFDTCxJQUFJLElBQUksR0FBVyxFQUFFLENBQUM7WUFDdEIsSUFBSSxVQUFVLEdBQUcsb0NBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQzFFLEVBQUUsRUFBQyxVQUFVLENBQUMsRUFBQztnQkFDWCxJQUFJLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQztZQUM5QixDQUFDO1lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNoQixDQUFDO1FBQ0QsYUFBYSxFQUFFO1lBQ1gsSUFBSSxJQUFZLENBQUM7WUFDakIsSUFBSSxVQUFVLEdBQUcsb0NBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQzFFLElBQUksR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7UUFDTCxDQUFDO1FBQ0QsY0FBYyxFQUFFO1lBQ1osSUFBSSxJQUFZLENBQUM7WUFDakIsSUFBSSxVQUFVLEdBQUcsb0NBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQzFFLElBQUksR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7UUFDTCxDQUFDO1FBQ0QsZUFBZSxFQUFFO1lBQ2IsSUFBSSxJQUFZLENBQUM7WUFDakIsSUFBSSxVQUFVLEdBQUcsb0NBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQzFFLElBQUksR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2hCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7UUFDTCxDQUFDO1FBQ0QsZ0JBQWdCLEVBQUU7WUFDZCxJQUFJLElBQVksQ0FBQztZQUNqQixJQUFJLFVBQVUsR0FBRyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDMUUsSUFBSSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDaEIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDakIsQ0FBQztRQUNMLENBQUM7UUFDRCxZQUFZLEVBQUU7WUFDVixJQUFJLElBQVksQ0FBQztZQUNqQixJQUFJLFVBQVUsR0FBRyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDMUUsSUFBSSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDaEIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDakIsQ0FBQztRQUNMLENBQUM7UUFDRCx5QkFBeUIsRUFBRTtZQUN2QixJQUFJLElBQVksQ0FBQztZQUNqQixJQUFJLFVBQVUsR0FBRyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDMUUsSUFBSSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNqQixDQUFDO1FBQ0wsQ0FBQztRQUNELGVBQWUsRUFBRTtZQUNiLElBQUksS0FBYSxDQUFDO1lBQ2xCLEtBQUssR0FBRyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDdEUsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNqQixDQUFDO1FBQ0Q7O1dBRUc7UUFDSCxvQkFBb0IsRUFBRztZQUNuQixJQUFJLFVBQVUsR0FBRyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDMUUsRUFBRSxFQUFDLFVBQVUsQ0FBQyxFQUFDO2dCQUNYLE1BQU0sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDO1lBQ2hDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7UUFDTCxDQUFDO0tBQ0osQ0FBQyxDQUFDO0FBQ1AsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUMzRkQsMENBQXVDO0FBQ3ZDLDhFQUE4RTtBQUM5RSxtRUFBbUU7QUFFbkUsK0VBQXVFO0FBQ3ZFLGlFQUFvRTtBQUVwRSxFQUFFLENBQUMsQ0FBQyxlQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNsQixlQUFNLENBQUMsT0FBTyxDQUFDO1FBQ1gscUJBQXFCLEVBQUUsVUFBVyxLQUFXO1lBQ3pDLElBQUksT0FBTyxHQUFHLElBQUkscUJBQU0sRUFBRSxDQUFDO1lBQzNCLElBQUksV0FBVyxHQUFHLCtCQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQztZQUV0RSxPQUFPLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7WUFDakMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7WUFFekIsRUFBRSxFQUFFLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUU3QiwrQkFBVyxDQUFDLE1BQU0sQ0FBQztvQkFDZixPQUFPLEVBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRTtvQkFDekIsT0FBTyxFQUFFLENBQUUsT0FBTyxDQUFFO2lCQUN2QixDQUFDLENBQUM7WUFDUCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTyxFQUFFLEVBQUU7b0JBQ3JDLElBQUksUUFBUSxHQUFHLCtCQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLG1CQUFtQixFQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO29CQUNuRixFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFDO3dCQUNYLCtCQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFDcEMsRUFBRSxTQUFTLEVBQUc7Z0NBQ1YsT0FBTyxFQUFHLE9BQU87NkJBQ3BCO3lCQUNKLENBQUMsQ0FBQztvQkFDUCxDQUFDO29CQUFDLElBQUksQ0FBQyxDQUFDO3dCQUVKLCtCQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsbUJBQW1CLEVBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUNyRCxFQUFFLElBQUksRUFBRyxFQUFFLHFCQUFxQixFQUFHLElBQUksRUFBRTt5QkFDNUMsQ0FBQyxDQUFDO29CQUNQLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztLQUNKLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDekNELDBDQUF1QztBQUV2Qyx1RkFBMEU7QUFDMUUsd0RBQWdEO0FBRWhELEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWCxtQkFBbUIsRUFBRSxVQUFVLFdBQXNCO1lBQ2pELGtDQUFVLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25DLENBQUM7UUFFRCxrQkFBa0IsRUFBRSxVQUFVLE9BQWUsRUFBRSxZQUFvQjtZQUMvRCx3QkFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDaEQsQ0FBQztLQUNKLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDZkQsMENBQXVDO0FBR3ZDLHlGQUE0RTtBQUM1RSxnSEFBa0c7QUFFbEcsc0ZBQTBFO0FBQzFFLDJGQUErRTtBQUMvRSx3RkFBNEU7QUFHNUUsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEIsZUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNYLGdCQUFnQixFQUFFLFVBQVUsY0FBb0I7WUFDNUMsSUFBSSxZQUFZLEdBQWUsb0NBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDcEYsSUFBSSx1QkFBdUIsR0FBVyxZQUFZLENBQUMscUJBQXFCLENBQUM7WUFDekUsSUFBSSxlQUFlLEdBQVcsWUFBWSxDQUFDLGFBQWEsQ0FBQztZQUV6RCxpREFBaUIsQ0FBQyxJQUFJLENBQUM7Z0JBQ25CLGdCQUFnQixFQUFFLHVCQUF1QixFQUFFLFFBQVEsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsa0JBQWtCLENBQUMsRUFBRTtnQkFDeEosTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxFQUFFO2FBQzVDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDeEIsaURBQWlCLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUMvRyxDQUFDLENBQUMsQ0FBQztZQUVILElBQUksbUJBQW1CLEdBQVcseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUM7WUFDekYsSUFBSSxjQUFjLEdBQVcseUJBQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUV0SSxFQUFFLENBQUMsQ0FBQyxjQUFjLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxVQUFVLEdBQVUseUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQztnQkFDakUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLGFBQWEsS0FBSyxDQUFDLElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNqRSx5QkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQzFFLENBQUM7WUFDTCxDQUFDO1lBQ0QsSUFBSSxtQkFBbUIsR0FBc0IsRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxDQUFDO1lBQzdHLG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLFlBQVksQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUM3RixJQUFJLGNBQWMsR0FBVyxvQ0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsWUFBWSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDbEosRUFBRSxDQUFDLENBQUMsY0FBYyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLElBQUksZUFBZSxHQUFlLG9DQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2dCQUNqRixJQUFJLGtCQUFrQixHQUFjLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFLENBQUMsQ0FBQztnQkFDdkYsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdkUsSUFBSSxXQUFXLEdBQVMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pJLHVDQUFhLENBQUMsTUFBTSxDQUFDO3dCQUNqQixPQUFPLEVBQUUsY0FBYyxDQUFDLEdBQUc7d0JBQzNCLFNBQVMsRUFBRSxJQUFJO3dCQUNmLFNBQVMsRUFBRSxXQUFXO3dCQUN0QixTQUFTLEVBQUUsZUFBZSxDQUFDLFNBQVM7cUJBQ3ZDLENBQUMsQ0FBQztvQkFDSCxvQ0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxZQUFZLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMvRSxDQUFDO1lBQ0wsQ0FBQztRQUNMLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3JERCwwQ0FBdUM7QUFDdkMsd0RBQWdEO0FBSWhELEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRWxCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWCxRQUFRLEVBQUUsVUFBVyxRQUFpQjtZQUNsQyx3QkFBUSxDQUFDLFFBQVEsQ0FBQyxlQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3ZELENBQUM7S0FDSixDQUFDLENBQUM7SUFFSCxlQUFNLENBQUMsT0FBTyxDQUFDO1FBQ1gsV0FBVyxFQUFFLFVBQVcsUUFBaUI7WUFDckMsd0JBQVEsQ0FBQyxXQUFXLENBQUMsZUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELENBQUM7S0FDSixDQUFDLENBQUM7QUFFUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CRCwwQ0FBdUM7QUFDdkMsb0ZBQXlFO0FBRXpFLHNHQUEwRjtBQUsxRixFQUFFLENBQUMsQ0FBQyxlQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUVsQixlQUFNLENBQUMsT0FBTyxDQUFDO1FBQ1gsMkJBQTJCLEVBQUUsVUFBVSxnQkFBd0I7WUFFM0QsSUFBSSxhQUFxQixDQUFDO1lBQzFCLElBQUksT0FBZ0IsQ0FBQztZQUNyQixJQUFJLGFBQTRCLENBQUM7WUFFakMsYUFBYSxHQUFHLHlDQUFjLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7WUFDN0UsT0FBTyxHQUFHLDhCQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGFBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO1lBRTlELE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3hCLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3ZCRCwwQ0FBdUM7QUFFdkMsd0NBQXFDO0FBQ3JDLGlHQUFtRjtBQUduRix1R0FBMEY7QUFFMUYsdUZBQTBFO0FBRTFFLHFHQUF1RjtBQUV2Riw0RUFBK0Q7QUFFL0QseUZBQTRFO0FBRTVFLDREQUE2QztBQUU3QyxxR0FBdUY7QUFFdkYsMEZBQTRFO0FBRzVFLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWDs7O1dBR0c7UUFFSCxxQkFBcUIsRUFBRSxVQUFVLFVBQWtCO1lBQy9DLHlDQUFjLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3RJLENBQUM7UUFFRDs7O1dBR0c7UUFDSCxtQkFBbUIsRUFBRSxVQUFVLFVBQWtCO1lBQzdDLElBQUksU0FBUyxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQ2pGLElBQUksVUFBVSxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQ2xGLElBQUksUUFBUSxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDO1lBQ25GLElBQUksT0FBTyxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQ2pGLElBQUksU0FBUyxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7WUFDckYsSUFBSSxZQUFZLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUV4RixJQUFJLFdBQVcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1lBQzdCLElBQUksWUFBWSxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsRUFBRSxXQUFXLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3RGLElBQUksUUFBUSxHQUFhLEVBQUUsQ0FBQztZQUU1Qix5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQXlCLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDdEosSUFBSSxJQUFJLEdBQVMsdUJBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGFBQWEsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUNoRixJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFNUMsRUFBRSxDQUFDLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUM1QixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFFSCx1QkFBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVUsRUFBRSxFQUFFO2dCQUNyRSxJQUFJLGlCQUFpQixHQUFhLEVBQUUsQ0FBQztnQkFDckMseUNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUF5QixJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7b0JBQ2hLLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3RDLENBQUMsQ0FBQyxDQUFDO2dCQUVILElBQUksWUFBWSxHQUFpQix3Q0FBYSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUM1RyxJQUFJLFFBQVEsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7Z0JBQ3hGLElBQUksUUFBUSxHQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDL0gscUJBQUcsQ0FBQyxlQUFlLENBQUMscUJBQXFCLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7Z0JBRXJGLElBQUksU0FBUyxHQUFHO29CQUNaLFFBQVEsRUFBRSxRQUFRO29CQUNsQixjQUFjLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLDBCQUEwQixDQUFDO29CQUN4RyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQyxRQUFRLEVBQUU7b0JBQ2xELGVBQWUsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsMkJBQTJCLENBQUM7b0JBQzFHLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLFlBQVksQ0FBQztvQkFDekQsU0FBUyxFQUFFLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUM7b0JBQ3BGLFlBQVksRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsY0FBYyxDQUFDO29CQUMxRixTQUFTLEVBQUUsVUFBVSxDQUFDLEtBQUs7b0JBQzNCLFlBQVksRUFBRSxRQUFRLENBQUMsS0FBSztvQkFDNUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxLQUFLO29CQUMxQixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7b0JBQzlCLFlBQVksRUFBRSxZQUFZLENBQUMsS0FBSztpQkFDbkM7Z0JBRUQsYUFBSyxDQUFDLElBQUksQ0FBQztvQkFDUCxFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPO29CQUMxQixJQUFJLEVBQUUsU0FBUyxDQUFDLEtBQUs7b0JBQ3JCLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsMkJBQTJCLENBQUM7b0JBQ2xHLElBQUksRUFBRSxxQkFBRyxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxTQUFTLENBQUM7aUJBQ3JELENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUNEOzs7V0FHRztRQUNILG1CQUFtQixFQUFFLFVBQVUsVUFBa0I7WUFDN0MsSUFBSSxTQUFTLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7WUFDakYsSUFBSSxVQUFVLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7WUFDbEYsSUFBSSxRQUFRLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxDQUFDLENBQUM7WUFDbkYsSUFBSSxPQUFPLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7WUFDakYsSUFBSSxTQUFTLEdBQWMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUNyRixJQUFJLFlBQVksR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1lBRXhGLElBQUksV0FBVyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7WUFDN0IsSUFBSSxhQUFhLEdBQUcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxFQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNuRixJQUFJLGFBQWEsR0FBRyxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUM1QyxJQUFJLE1BQU0sR0FBRyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO1lBQ3hFLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVFLElBQUksUUFBUSxHQUFhLEVBQUUsQ0FBQztZQUU1Qix5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBeUIsYUFBYSxFQUFFLEtBQUssRUFBRSxFQUFFO2dCQUN2SyxJQUFJLElBQUksR0FBUyx1QkFBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsYUFBYSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7Z0JBQ2hGLElBQUksVUFBVSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUU1QyxFQUFFLENBQUMsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDakIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQzVCLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUVILHVCQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUU7Z0JBQ3JFLElBQUksaUJBQWlCLEdBQWEsRUFBRSxDQUFDO2dCQUNyQyx5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUF5QixJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7b0JBQ2pNLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3RDLENBQUMsQ0FBQyxDQUFDO2dCQUVILElBQUksWUFBWSxHQUFpQix3Q0FBYSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUM1RyxJQUFJLFFBQVEsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7Z0JBQ3hGLElBQUksUUFBUSxHQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDL0gscUJBQUcsQ0FBQyxlQUFlLENBQUMscUJBQXFCLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7Z0JBRXJGLElBQUksU0FBUyxHQUFHO29CQUNaLFFBQVEsRUFBRSxRQUFRO29CQUNsQixjQUFjLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLDBCQUEwQixDQUFDO29CQUN4RyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQyxRQUFRLEVBQUU7b0JBQ2xELGVBQWUsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsMkJBQTJCLENBQUM7b0JBQzFHLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLGFBQWEsQ0FBQztvQkFDMUQsZUFBZSxFQUFFLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSwyQkFBMkIsQ0FBQztvQkFDMUcsU0FBUyxFQUFFLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUM7b0JBQ3BGLFlBQVksRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsY0FBYyxDQUFDO29CQUMxRixTQUFTLEVBQUUsVUFBVSxDQUFDLEtBQUs7b0JBQzNCLFlBQVksRUFBRSxRQUFRLENBQUMsS0FBSztvQkFDNUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxLQUFLO29CQUMxQixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7b0JBQzlCLFlBQVksRUFBRSxZQUFZLENBQUMsS0FBSztpQkFDbkM7Z0JBRUQsYUFBSyxDQUFDLElBQUksQ0FBQztvQkFDUCxFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPO29CQUMxQixJQUFJLEVBQUUsU0FBUyxDQUFDLEtBQUs7b0JBQ3JCLE9BQU8sRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsMkJBQTJCLENBQUM7b0JBQ2xHLElBQUksRUFBRSxxQkFBRyxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsRUFBRSxTQUFTLENBQUM7aUJBQ3JELENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUNEOzs7V0FHRztRQUNILDRCQUE0QixFQUFFLFVBQVUsVUFBa0I7WUFDdEQsSUFBSSxXQUFXLEdBQVMsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNuQyxJQUFJLFlBQVksR0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNuRSxJQUFJLFdBQVcsR0FBVyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFL0QseUNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQXlCLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDdkssSUFBSSxjQUE4QixDQUFDO2dCQUNuQyxJQUFJLFFBQVEsR0FBYSxFQUFFLENBQUM7Z0JBQzVCLFFBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQyw0SkFBNEo7Z0JBQzVKLGNBQWMsR0FBRyw0Q0FBZSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLDZCQUE2QixFQUFFLENBQUMsQ0FBQztnQkFFN0ssRUFBRSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO29CQUNsQix5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsYUFBYSxDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBRXBJLHlCQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFpQixLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUU7d0JBQ3JHLHlCQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUNqRixDQUFDLENBQUMsQ0FBQztnQkFDUCxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBQ0Q7OztXQUdHO1FBQ0gsb0JBQW9CLEVBQUUsVUFBVSxVQUFrQjtZQUM5QyxJQUFJLFNBQVMsR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUNqRixJQUFJLFVBQVUsR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUNsRixJQUFJLFFBQVEsR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQztZQUNuRixJQUFJLE9BQU8sR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztZQUNqRixJQUFJLFNBQVMsR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1lBQ3JGLElBQUksWUFBWSxHQUFjLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7WUFFeEYsSUFBSSxRQUFRLEdBQWEsRUFBRSxDQUFDO1lBRTVCLHlDQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQXlCLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDekwsSUFBSSxJQUFJLEdBQVMsdUJBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGFBQWEsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUNoRixJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFNUMsRUFBRSxDQUFDLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUM1QixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFFSCx1QkFBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVUsRUFBRSxFQUFFO2dCQUNyRSxJQUFJLGlCQUFpQixHQUFhLEVBQUUsQ0FBQztnQkFDckMseUNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUF5QixJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7b0JBQ25OLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3RDLENBQUMsQ0FBQyxDQUFDO2dCQUVILElBQUksWUFBWSxHQUFpQix3Q0FBYSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUM1RyxJQUFJLFFBQVEsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7Z0JBQ3hGLElBQUksUUFBUSxHQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDL0gscUJBQUcsQ0FBQyxlQUFlLENBQUMsc0JBQXNCLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7Z0JBRXZGLElBQUksU0FBUyxHQUFHO29CQUNaLFFBQVEsRUFBRSxRQUFRO29CQUNsQixjQUFjLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLHdCQUF3QixDQUFDO29CQUN0RyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQyxRQUFRLEVBQUU7b0JBQ2xELGVBQWUsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUseUJBQXlCLENBQUM7b0JBQ3hHLGVBQWUsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUseUJBQXlCLENBQUM7b0JBQ3hHLFNBQVMsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDO29CQUNwRixZQUFZLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLGNBQWMsQ0FBQztvQkFDMUYsU0FBUyxFQUFFLFVBQVUsQ0FBQyxLQUFLO29CQUMzQixZQUFZLEVBQUUsUUFBUSxDQUFDLEtBQUs7b0JBQzVCLFdBQVcsRUFBRSxPQUFPLENBQUMsS0FBSztvQkFDMUIsYUFBYSxFQUFFLFNBQVMsQ0FBQyxLQUFLO29CQUM5QixZQUFZLEVBQUUsWUFBWSxDQUFDLEtBQUs7aUJBQ25DO2dCQUVELGFBQUssQ0FBQyxJQUFJLENBQUM7b0JBQ1AsRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTztvQkFDMUIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxLQUFLO29CQUNyQixPQUFPLEVBQUUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLDRCQUE0QixDQUFDO29CQUNuRyxJQUFJLEVBQUUscUJBQUcsQ0FBQyxNQUFNLENBQUMsc0JBQXNCLEVBQUUsU0FBUyxDQUFDO2lCQUN0RCxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFDRDs7OztXQUlHO1FBQ0gsZUFBZSxDQUFDLGVBQWlDLEVBQUUsTUFBYztZQUM3RCxJQUFJLEtBQUssR0FBRyxlQUFlLENBQUMsTUFBTSxDQUFDLFVBQVUsWUFBWTtnQkFDckQsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO1lBQ3hDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7UUFDL0IsQ0FBQztRQUNEOzs7O1dBSUc7UUFDSCxtQkFBbUIsRUFBRSxVQUFVLEtBQVc7WUFDdEMsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQy9CLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDakMsSUFBSSxHQUFHLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQzFCLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzNFLENBQUM7UUFDRDs7V0FFRztRQUNILG1CQUFtQixDQUFDLFVBQWtCO1lBQ2xDLElBQUksV0FBVyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7WUFFN0IseUNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQXlCLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDL0csc0NBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBdUIsV0FBVyxFQUFFLEtBQUssRUFBRSxFQUFFO29CQUN4SSxJQUFJLGtCQUFrQixHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO29CQUMvRCxJQUFJLGVBQWUsR0FBRyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxFQUFFLFdBQVcsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztvQkFFOUgsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLEtBQUssV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDO3dCQUM3RCxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7d0JBQ3ZELENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxLQUFLLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFFeEQsSUFBSSxlQUF1QixDQUFDO3dCQUM1QixFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsVUFBVSxLQUFLLENBQUMsSUFBSSxXQUFXLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7NEJBQzFHLGVBQWUsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDO3dCQUN6QyxDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNKLGVBQWUsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDO3dCQUM3QyxDQUFDO3dCQUVELHNDQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUN6RixJQUFJLFVBQVUsR0FBZSxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQzt3QkFDbkYsSUFBSSxnQkFBZ0IsR0FBcUIsVUFBVSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLEtBQUssV0FBVyxDQUFDLGdCQUFnQixDQUFDLENBQUM7d0JBRWpKLG9DQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsV0FBVyxDQUFDLGdCQUFnQixFQUFFLEVBQy9HLEVBQUUsSUFBSSxFQUFFLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsZUFBZSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQzdGLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3JTRCwwQ0FBdUM7QUFFdkMsd0NBQXFDO0FBQ3JDLGdHQUFtRjtBQUVuRixzR0FBMEY7QUFFMUYsMkVBQStEO0FBRS9ELHdGQUE0RTtBQUU1RSw0REFBNkM7QUFFN0MsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEIsZUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNYOztXQUVHO1FBQ0gsbUJBQW1CLEVBQUUsVUFBVSxVQUFrQjtZQUU3QyxJQUFJLFdBQVcsR0FBUyxJQUFJLElBQUksRUFBRSxDQUFDO1lBQ25DLElBQUksYUFBYSxHQUFXLGVBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ3BFLElBQUksU0FBUyxHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckcsSUFBSSxlQUFlLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xILElBQUksZ0JBQWdCLEdBQVcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BILElBQUksZUFBZSxHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUVsSCx5Q0FBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQXlCLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDaEosSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxhQUFhLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMvRyxJQUFJLFdBQVcsR0FBUyxlQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxhQUFhLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxDQUFDO2dCQUN2RixJQUFJLGFBQWEsR0FBVyxlQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsQ0FBQztnQkFDcEUsSUFBSSxlQUFlLEdBQVMsZUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO2dCQUN2RixJQUFJLGlCQUFpQixHQUFXLGVBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLGVBQWUsQ0FBQyxDQUFDO2dCQUM1RSxJQUFJLGdCQUFnQixHQUFTLGVBQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUN6RixJQUFJLGtCQUFrQixHQUFXLGVBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7Z0JBQzlFLElBQUksZUFBZSxHQUFTLGVBQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLFdBQVcsRUFBRSxlQUFlLENBQUMsQ0FBQztnQkFDdkYsSUFBSSxpQkFBaUIsR0FBVyxlQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxlQUFlLENBQUMsQ0FBQztnQkFFNUUsRUFBRSxDQUFDLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7b0JBQ25CLHlDQUFjLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxhQUFhLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDO2dCQUNqSCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLEVBQUUsQ0FBQyxDQUFDLGFBQWEsSUFBSSxpQkFBaUIsSUFBSSxhQUFhLElBQUksa0JBQWtCLElBQUksYUFBYSxJQUFJLGlCQUFpQixDQUFDLENBQUMsQ0FBQzt3QkFDbEgsZUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO29CQUM5RSxDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUVILE1BQU0sQ0FBQyxXQUFXLENBQUM7UUFDdkIsQ0FBQztRQUNEOztXQUVHO1FBQ0gsV0FBVyxFQUFFLFVBQVUsS0FBVztZQUM5QixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDL0IsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNqQyxJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDM0UsQ0FBQztRQUNEOztXQUVHO1FBQ0gsT0FBTyxFQUFFLFVBQVUsS0FBVyxFQUFFLEtBQWE7WUFDekMsSUFBSSxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDekMsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNsQixDQUFDO1FBQ0Q7O1dBRUc7UUFDSCxhQUFhLEVBQUUsVUFBVSxLQUFXLEVBQUUsS0FBYTtZQUMvQyxJQUFJLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQztZQUN6QyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2xCLENBQUM7UUFDRDs7V0FFRztRQUNILGNBQWMsRUFBRSxVQUFVLE9BQWUsRUFBRSxZQUFvQjtZQUMzRCxJQUFJLElBQUksR0FBUyx1QkFBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztZQUM1RCxJQUFJLFNBQVMsR0FBYyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUNqRixJQUFJLFlBQVksR0FBaUIsd0NBQWEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztZQUM1RyxJQUFJLG1CQUFtQixHQUFXLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1lBQzdFLElBQUksUUFBUSxHQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7WUFFbk0scUJBQUcsQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1lBRXBFLElBQUksU0FBUyxHQUFHO2dCQUNaLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixjQUFjLEVBQUUsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO2dCQUMxRCxPQUFPLEVBQUUsWUFBWTtnQkFDckIsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO2dCQUM3RCxTQUFTLEVBQUUsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO2dCQUNyRCxZQUFZLEVBQUUsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO2FBQzNEO1lBRUQsYUFBSyxDQUFDLElBQUksQ0FBQztnQkFDUCxFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPO2dCQUMxQixJQUFJLEVBQUUsU0FBUyxDQUFDLEtBQUs7Z0JBQ3JCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLElBQUksRUFBRSxxQkFBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDO2FBQzNDLENBQUMsQ0FBQztRQUNQLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3hHRCwwQ0FBdUM7QUFDdkMscUdBQXVGO0FBQ3ZGLDBGQUE0RTtBQUM1RSxxRkFBeUU7QUFDekUsK0VBQW1FO0FBQ25FLGlHQUFrRjtBQUNsRixxR0FBc0Y7QUFDdEYseUZBQTRFO0FBRzVFLEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDWDs7OztXQUlHO1FBQ0gsbUJBQW1CLEVBQUUsVUFBVSxpQkFBeUIsRUFBRSxPQUFlO1lBRXJFLElBQUksWUFBWSxHQUFTLElBQUksSUFBSSxFQUFFLENBQUM7WUFDcEMsSUFBSSxjQUFjLEdBQVMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxFQUFFLFlBQVksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM1RixJQUFJLGFBQWEsR0FBUyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUUvRixJQUFJLFdBQVcsR0FBRyxvQ0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBQzVELElBQUksUUFBUSxHQUFHLDhCQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1lBQ2xFLElBQUksS0FBSyxHQUFHLHdCQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBQ3pELElBQUksZUFBZSxHQUFHLDRDQUFlLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLGlCQUFpQixFQUFFLENBQUMsQ0FBQztZQUMxRSxJQUFJLFdBQVcsR0FBRyx1Q0FBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUVyRSxJQUFJLGNBQXNCLENBQUM7WUFDM0IsSUFBSSxVQUFrQixDQUFDO1lBQ3ZCLElBQUksZUFBdUIsQ0FBQztZQUM1QixJQUFJLGlCQUF5QixDQUFDO1lBQzlCLElBQUksYUFBcUIsQ0FBQztZQUMxQixJQUFJLGNBQW9CLENBQUM7WUFDekIsSUFBSSxZQUFrQixDQUFDO1lBQ3ZCLElBQUksY0FBdUIsQ0FBQztZQUM1QixJQUFJLGFBQXNCLENBQUM7WUFFM0IsSUFBSSxZQUFZLEdBQUcsaUNBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDdEUsSUFBSSxlQUFlLEdBQUcsaUNBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUM1RSxJQUFJLGFBQWEsR0FBRyxpQ0FBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUN4RSxJQUFJLGVBQWUsR0FBRyxpQ0FBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQzVFLElBQUksWUFBWSxHQUFHLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ3RFLElBQUksV0FBVyxHQUFHLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ3BFLElBQUksY0FBYyxHQUFHLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDMUUsSUFBSSxvQkFBb0IsR0FBRyxpQ0FBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxzQkFBc0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ3RGLElBQUksZ0JBQWdCLEdBQUcsaUNBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUM5RSxJQUFJLHNCQUFzQixHQUFHLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLHdCQUF3QixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDMUYsSUFBSSxxQkFBcUIsR0FBRyxpQ0FBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBRXhGLHNCQUFzQjtZQUN0QixFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2xDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDdEMsaUJBQWlCLEdBQUcsV0FBVyxDQUFDLGVBQWUsQ0FBQztvQkFDaEQsY0FBYyxHQUFHLEtBQUssQ0FBQztvQkFDdkIsYUFBYSxHQUFHLEtBQUssQ0FBQztnQkFDMUIsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixpQkFBaUIsR0FBRyxXQUFXLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztvQkFDbEQsRUFBRSxDQUFDLENBQUMsaUJBQWlCLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7d0JBQ2pELGNBQWMsR0FBRyxJQUFJLENBQUM7d0JBQ3RCLGFBQWEsR0FBRyxJQUFJLENBQUM7b0JBQ3pCLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osY0FBYyxHQUFHLEtBQUssQ0FBQzt3QkFDdkIsYUFBYSxHQUFHLEtBQUssQ0FBQztvQkFDMUIsQ0FBQztnQkFDTCxDQUFDO2dCQUNELGNBQWMsR0FBRyxXQUFXLENBQUMsY0FBYyxDQUFDO2dCQUM1QyxVQUFVLEdBQUcsV0FBVyxDQUFDLFVBQVUsQ0FBQztnQkFDcEMsZUFBZSxHQUFHLFdBQVcsQ0FBQyxlQUFlLENBQUM7Z0JBQzlDLGFBQWEsR0FBRyxXQUFXLENBQUMsYUFBYSxDQUFDO2dCQUMxQyxjQUFjLEdBQUcsV0FBVyxDQUFDLGNBQWMsQ0FBQztnQkFDNUMsWUFBWSxHQUFHLFdBQVcsQ0FBQyxZQUFZLENBQUM7WUFDNUMsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDdEMsaUJBQWlCLEdBQUcsV0FBVyxDQUFDLGVBQWUsQ0FBQztvQkFDaEQsY0FBYyxHQUFHLElBQUksQ0FBQztvQkFDdEIsYUFBYSxHQUFHLEtBQUssQ0FBQztnQkFDMUIsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixpQkFBaUIsR0FBRyxXQUFXLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztvQkFDbEQsRUFBRSxDQUFDLENBQUMsaUJBQWlCLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7d0JBQ2pELGNBQWMsR0FBRyxLQUFLLENBQUM7d0JBQ3ZCLGFBQWEsR0FBRyxJQUFJLENBQUM7b0JBQ3pCLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osY0FBYyxHQUFHLElBQUksQ0FBQzt3QkFDdEIsYUFBYSxHQUFHLEtBQUssQ0FBQztvQkFDMUIsQ0FBQztnQkFDTCxDQUFDO2dCQUNELGNBQWMsR0FBRyxXQUFXLENBQUMsY0FBYyxDQUFDO2dCQUM1QyxVQUFVLEdBQUcsV0FBVyxDQUFDLFVBQVUsQ0FBQztnQkFDcEMsZUFBZSxHQUFHLFdBQVcsQ0FBQyxlQUFlLENBQUM7Z0JBQzlDLGFBQWEsR0FBRyxXQUFXLENBQUMsYUFBYSxDQUFDO2dCQUMxQyxjQUFjLEdBQUcsV0FBVyxDQUFDLGNBQWMsQ0FBQztnQkFDNUMsWUFBWSxHQUFHLFdBQVcsQ0FBQyxZQUFZLENBQUM7WUFDNUMsQ0FBQztZQUVELHVDQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFFLEVBQ25EO2dCQUNJLElBQUksRUFBRTtvQkFDRixhQUFhLEVBQUUsaUJBQWlCO29CQUNoQyxVQUFVLEVBQUUsY0FBYztvQkFDMUIsZUFBZSxFQUFFLGFBQWE7aUJBQ2pDO2FBQ0osQ0FBQyxDQUFDO1lBRVAsSUFBSSxZQUFZLEdBQWdCO2dCQUM1QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsT0FBTyxFQUFFLGVBQWU7Z0JBQ3hCLEtBQUssRUFBRSxhQUFhO2dCQUNwQixPQUFPLEVBQUUsZUFBZTtnQkFDeEIsSUFBSSxFQUFFLFlBQVk7Z0JBQ2xCLEdBQUcsRUFBRSxXQUFXO2dCQUNoQixNQUFNLEVBQUUsY0FBYztnQkFDdEIsWUFBWSxFQUFFLG9CQUFvQjtnQkFDbEMsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsZUFBZSxFQUFFLHNCQUFzQjtnQkFDdkMsaUJBQWlCLEVBQUUsY0FBYztnQkFDakMsaUJBQWlCLEVBQUUsVUFBVTtnQkFDN0IscUJBQXFCLEVBQUUsY0FBYztnQkFDckMsbUJBQW1CLEVBQUUsWUFBWTtnQkFDakMsc0JBQXNCLEVBQUUsZUFBZSxDQUFDLFFBQVEsRUFBRTtnQkFDbEQsb0JBQW9CLEVBQUUsYUFBYSxDQUFDLFFBQVEsRUFBRTthQUNqRCxDQUFDO1lBRUYsSUFBSSxPQUFPLEdBQUcsV0FBVyxDQUFDLE9BQU8sS0FBSyxFQUFFLElBQUksV0FBVyxDQUFDLE9BQU8sS0FBSyxJQUFJLElBQUksV0FBVyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFFcEosSUFBSSxXQUFXLEdBQWU7Z0JBQzFCLElBQUksRUFBRSxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxHQUFHLEdBQUcsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxTQUFTO2dCQUM5RSxPQUFPLEVBQUUsV0FBVyxDQUFDLE9BQU87Z0JBQzVCLElBQUksRUFBRSxPQUFPO2dCQUNiLE9BQU8sRUFBRSxRQUFRLENBQUMsSUFBSTtnQkFDdEIsY0FBYyxFQUFFLFdBQVcsQ0FBQyxVQUFVO2dCQUN0QyxLQUFLLEVBQUUsV0FBVyxDQUFDLGFBQWE7Z0JBQ2hDLEtBQUssRUFBRSxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU87YUFDekMsQ0FBQztZQUVGLDJDQUFjLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztnQkFDN0IsYUFBYSxFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUU7Z0JBQzlCLGFBQWEsRUFBRSxJQUFJLElBQUksRUFBRTtnQkFDekIsa0JBQWtCLEVBQUUsZUFBZSxDQUFDLEdBQUc7Z0JBQ3ZDLFVBQVUsRUFBRSxRQUFRLENBQUMsR0FBRztnQkFDeEIsTUFBTSxFQUFFLGlCQUFpQixDQUFDLFFBQVEsRUFBRTtnQkFDcEMsZUFBZSxFQUFFLElBQUksSUFBSSxFQUFFO2dCQUMzQixjQUFjLEVBQUUsdUNBQXVDO2dCQUN2RCxXQUFXLEVBQUUsaUNBQWlDO2dCQUM5QyxNQUFNLEVBQUUsY0FBYyxDQUFDLE9BQU8sRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsY0FBYyxDQUFDLFdBQVcsRUFBRTtvQkFDekcsS0FBSyxHQUFHLGFBQWEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLGFBQWEsQ0FBQyxXQUFXLEVBQUU7Z0JBQzlHLGFBQWEsRUFBRSxlQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxlQUFlLENBQUMsWUFBWSxDQUFDLENBQUMsUUFBUSxFQUFFO2dCQUNwRixRQUFRLEVBQUUsR0FBRztnQkFDYixHQUFHLEVBQUUsR0FBRztnQkFDUixLQUFLLEVBQUUsZUFBZSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUU7Z0JBQzlDLFFBQVEsRUFBRSxlQUFlLENBQUMsUUFBUTtnQkFDbEMsWUFBWSxFQUFFLFlBQVk7Z0JBQzFCLFdBQVcsRUFBRSxXQUFXO2dCQUN4QixzQkFBc0IsRUFBRSxxQkFBcUI7YUFDaEQsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUNEOzs7VUFHRTtRQUNGLFdBQVcsRUFBRSxVQUFVLGFBQXFCO1lBQ3hDLElBQUksWUFBWSxHQUFHLGlDQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLENBQUMsQ0FBQztZQUNwRSxJQUFJLFlBQVksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlDLE1BQU0sQ0FBQyxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDaEQsQ0FBQztRQUNEOzs7VUFHRTtRQUNGLGFBQWEsRUFBRSxVQUFVLGFBQXFCO1lBQzFDLElBQUksYUFBYSxHQUFXLGVBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQ3RFLE1BQU0sQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ3pDLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDOzs7Ozs7Ozs7Ozs7OztBQy9LRCwwQ0FBdUM7QUFLdkMsRUFBRSxDQUFDLENBQUMsZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEIsZUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUVkLENBQUMsQ0FBQztBQUNQLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDVEQsMENBQXVDO0FBQ3ZDLDBFQUEwRDtBQUUxRCxFQUFFLENBQUMsQ0FBQyxlQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNsQixlQUFNLENBQUMsT0FBTyxDQUFFO1FBQ1osUUFBUSxFQUFFLFVBQVcsYUFBd0IsRUFBRSxPQUFnQjtZQUMzRCxNQUFNLElBQUksR0FBRztnQkFDVCxRQUFRLEVBQUU7b0JBQ04sRUFBRSxFQUFFLE9BQU87aUJBQ2Q7YUFDSixDQUFDO1lBQ0Ysa0NBQVMsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFFLGFBQWEsRUFBRSxJQUFJLENBQUUsQ0FBQztRQUMxRCxDQUFDO0tBQ0osQ0FBQyxDQUFDO0FBQ1AsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNkRCwwQ0FBdUM7QUFDdkMsMkVBQStEO0FBRS9ELEVBQUUsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BCLGVBQU0sQ0FBQyxPQUFPLENBQUM7UUFDYjs7OztXQUlHO1FBQ0gsbUJBQW1CLEVBQUUsVUFBVSxnQkFBd0IsRUFBRSxPQUFlO1lBQ3RFLElBQUksa0JBQWtCLEdBQUcsdUJBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQy9HLElBQUksR0FBRyxHQUFHLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEtBQUssZ0JBQWdCLENBQUMsQ0FBQztZQUMzRyx1QkFBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLDhCQUE4QixFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLGlCQUFpQixFQUFFLGVBQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6TixDQUFDO1FBRUQ7Ozs7V0FJRztRQUNILGlCQUFpQixFQUFFLFVBQVUsZ0JBQXdCLEVBQUUsT0FBZTtZQUNwRSxJQUFJLGtCQUFrQixHQUFHLHVCQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsY0FBYyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUMvRyxJQUFJLEdBQUcsR0FBRyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLGdCQUFnQixLQUFLLGdCQUFnQixDQUFDLENBQUM7WUFDM0csdUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxlQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDek4sQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDOzs7Ozs7Ozs7Ozs7OztBQzNCRCw2Q0FBOEM7QUFHakMsbUJBQVcsR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFhLGNBQWMsQ0FBQyxDQUFDO0FBRXRGO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVELG1CQUFXLENBQUMsS0FBSyxDQUFDO0lBQ2QsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ2JILDZDQUE4QztBQUdqQyxhQUFLLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBTyxPQUFPLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNIbkUsNkNBQThDO0FBR2pDLGFBQUssR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFPLE9BQU8sQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ0huRSw2Q0FBOEM7QUFHakMsbUJBQVcsR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFhLGNBQWMsQ0FBQyxDQUFDO0FBRXRGO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVELG1CQUFXLENBQUMsS0FBSyxDQUFDO0lBQ2QsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ2JILDZDQUE4QztBQUM5QywwQ0FBdUM7QUFHdkM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLGtCQUFVLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBWSxhQUFhLENBQUMsQ0FBQztBQUVuRixrQkFBVSxDQUFDLEtBQUssQ0FBQztJQUNiLE1BQU0sRUFBQyxRQUFRO0lBQ2YsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBR3ZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxxQkFBYSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWMsZ0JBQWdCLENBQUMsQ0FBQztBQUUzRjs7R0FFRztBQUNILHFCQUFhLENBQUMsS0FBSyxDQUFDO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBQzlDLDBDQUF1QztBQUV2Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsYUFBSyxHQUFHLDZCQUFlLENBQUMsWUFBWSxDQUFDLGVBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUVoRTs7R0FFRztBQUNILGFBQUssQ0FBQyxLQUFLLENBQUM7SUFDUixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDcEJILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFdkM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLHNCQUFjLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBZ0IsZ0JBQWdCLENBQUMsQ0FBQztBQUU5Rjs7R0FFRztBQUNILHNCQUFjLENBQUMsS0FBSyxDQUFDO0lBQ2pCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQztBQUVIOztHQUVHO0FBRVUsMEJBQWtCLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBb0IscUJBQXFCLENBQUMsQ0FBQztBQUUzRzs7R0FFRztBQUNILDBCQUFrQixDQUFDLEtBQUssQ0FBQztJQUNyQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7QUFFSDs7R0FFRztBQUNVLDZCQUFxQixHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQXVCLHVCQUF1QixDQUFDLENBQUM7QUFFbkg7O0dBRUc7QUFDSCw2QkFBcUIsQ0FBQyxLQUFLLENBQUM7SUFDeEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ2xESCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBR3ZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxzQkFBYyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWUsaUJBQWlCLENBQUMsQ0FBQztBQUU5Rjs7R0FFRztBQUNILHNCQUFjLENBQUMsS0FBSyxDQUFDO0lBQ2pCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNyQkgsNkNBQThDO0FBQzlDLDBDQUF1QztBQUd2Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsY0FBTSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVEsUUFBUSxDQUFDLENBQUM7QUFFdEU7O0dBRUc7QUFDSCxjQUFNLENBQUMsS0FBSyxDQUFDO0lBQ1QsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFDLFFBQVE7Q0FDbEIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBR3ZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxvQkFBWSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWMsZUFBZSxDQUFDLENBQUM7QUFFekY7O0dBRUc7QUFDSCxvQkFBWSxDQUFDLEtBQUssQ0FBQztJQUNmLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBQyxRQUFRO0NBQ2xCLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBQzlDLDBDQUF1QztBQUd2Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsZUFBTyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVMsU0FBUyxDQUFDLENBQUM7QUFFekU7O0dBRUc7QUFDSCxlQUFPLENBQUMsS0FBSyxDQUFDO0lBQ1YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3ZCSCw2Q0FBOEM7QUFFOUMsMENBQXVDO0FBRXZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxjQUFNLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBUSxRQUFRLENBQUMsQ0FBQztBQUV0RTs7R0FFRztBQUNILGNBQU0sQ0FBQyxLQUFLLENBQUM7SUFDVCxNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFdkM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLHlCQUFpQixHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQW1CLHFCQUFxQixDQUFDLENBQUM7QUFFekc7O0dBRUc7QUFDSCx5QkFBaUIsQ0FBQyxLQUFLLENBQUM7SUFDcEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBOEM7QUFFOUMsMENBQXVDO0FBRXZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxjQUFNLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBTyxRQUFRLENBQUMsQ0FBQztBQUVyRTs7R0FFRztBQUNILGNBQU0sQ0FBQyxLQUFLLENBQUM7SUFDVCxNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFdkM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLG9CQUFZLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBYyxlQUFlLENBQUMsQ0FBQztBQUV6Rjs7R0FFRztBQUNILG9CQUFZLENBQUMsS0FBSyxDQUFDO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBNkM7QUFFN0MsMENBQXVDO0FBRXZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxpQkFBUyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVUsV0FBVyxDQUFDLENBQUM7QUFFOUU7O0dBRUc7QUFDSCxpQkFBUyxDQUFDLEtBQUssQ0FBQztJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRTlDLDBDQUF1QztBQUUxQixrQkFBVSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVcsWUFBWSxDQUFDLENBQUM7QUFFakY7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQsa0JBQVUsQ0FBQyxLQUFLLENBQUM7SUFDYixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDYkgsNkNBQThDO0FBRTlDLDBDQUF1QztBQUUxQixxQkFBYSxHQUFJLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWUsZ0JBQWdCLENBQUMsQ0FBQztBQUU3Rjs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ0gscUJBQWEsQ0FBQyxLQUFLLENBQUM7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CSCw2Q0FBOEM7QUFFOUMsMENBQXVDO0FBRTFCLGFBQUssR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFPLE9BQU8sQ0FBQyxDQUFDO0FBRW5FO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVELGFBQUssQ0FBQyxLQUFLLENBQUM7SUFDUixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDYkgsNkNBQThDO0FBRTlDLDBDQUF1QztBQUV2Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsaUJBQVMsR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFXLFdBQVcsQ0FBQyxDQUFDO0FBRS9FOztHQUVHO0FBQ0gsaUJBQVMsQ0FBQyxLQUFLLENBQUM7SUFDWixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFMUIsa0JBQVUsR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFZLFlBQVksQ0FBQyxDQUFDO0FBRWxGO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVELGtCQUFVLENBQUMsS0FBSyxDQUFDO0lBQ2IsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ2JILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFMUIsc0JBQWMsR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFnQixnQkFBZ0IsQ0FBQyxDQUFDO0FBRTlGO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVELHNCQUFjLENBQUMsS0FBSyxDQUFDO0lBQ2pCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNiSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBR3ZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxzQkFBYyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWdCLGlCQUFpQixDQUFDLENBQUM7QUFFL0Y7O0dBRUc7QUFDSCxzQkFBYyxDQUFDLEtBQUssQ0FBQztJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUU5QywwQ0FBdUM7QUFFdkM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLGNBQU0sR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFRLFFBQVEsQ0FBQyxDQUFDO0FBRXRFOztHQUVHO0FBQ0gsY0FBTSxDQUFDLEtBQUssQ0FBQztJQUNULE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQTZDO0FBRTdDLDBDQUF1QztBQUV2Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsY0FBTSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVEsUUFBUSxDQUFDLENBQUM7QUFFdEU7O0dBRUc7QUFDSCxjQUFNLENBQUMsS0FBSyxDQUFDO0lBQ1QsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBOEM7QUFFOUMsMENBQXVDO0FBRXZDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxtQkFBVyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWEsZUFBZSxDQUFDLENBQUM7QUFFdkY7O0dBRUc7QUFDSCxtQkFBVyxDQUFDLEtBQUssQ0FBQztJQUNkLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRzlDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxpQkFBUyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVcsV0FBVyxDQUFDLENBQUM7QUFFL0U7O0dBRUc7QUFDSCxpQkFBUyxDQUFDLEtBQUssQ0FBQztJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRzlDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxrQkFBVSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVcsWUFBWSxDQUFDLENBQUM7QUFFakY7O0dBRUc7QUFDSCxrQkFBVSxDQUFDLEtBQUssQ0FBQztJQUNiLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRzlDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxzQkFBYyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWMsYUFBYSxDQUFDLENBQUM7QUFFekY7O0dBRUc7QUFDSCxzQkFBYyxDQUFDLEtBQUssQ0FBQztJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUc5Qzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ1UsYUFBSyxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQU8sT0FBTyxDQUFDLENBQUM7QUFFbkU7O0dBRUc7QUFDSCxhQUFLLENBQUMsS0FBSyxDQUFDO0lBQ1IsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBOEM7QUFHOUM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLG9CQUFZLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBYyxlQUFlLENBQUMsQ0FBQztBQUV6Rjs7R0FFRztBQUNILG9CQUFZLENBQUMsS0FBSyxDQUFDO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3RCSCw2Q0FBOEM7QUFHOUM7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNVLGVBQU8sR0FBRyxJQUFJLDZCQUFlLENBQUMsVUFBVSxDQUFTLFNBQVMsQ0FBQyxDQUFDO0FBRXpFOztHQUVHO0FBQ0gsZUFBTyxDQUFDLEtBQUssQ0FBQztJQUNWLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRzlDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxnQkFBUSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQVUsVUFBVSxDQUFDLENBQUM7QUFFNUU7O0dBRUc7QUFDSCxnQkFBUSxDQUFDLEtBQUssQ0FBQztJQUNYLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUN0QkgsNkNBQThDO0FBRzlDOztHQUVHO0FBQ0g7SUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQ7O0dBRUc7QUFDVSxxQkFBYSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWMsZUFBZSxDQUFDLENBQUM7QUFFMUY7O0dBRUc7QUFDSCxxQkFBYSxDQUFDLEtBQUssQ0FBQztJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDdEJILDZDQUE4QztBQUM5QywwQ0FBdUM7QUFHMUIsd0JBQWdCLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBa0Isb0JBQW9CLENBQUMsQ0FBQztBQUV0Rzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ0gsd0JBQWdCLENBQUMsS0FBSyxDQUFDO0lBQ25CLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNuQkgsNkNBQThDO0FBQzlDLDBDQUF1QztBQUcxQixvQkFBWSxHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQWMsZUFBZSxDQUFDLENBQUM7QUFFekY7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNILG9CQUFZLENBQUMsS0FBSyxDQUFDO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBRzFCLHNCQUFjLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBZ0IsZ0JBQWdCLENBQUMsQ0FBQztBQUU5Rjs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ0gsc0JBQWMsQ0FBQyxLQUFLLENBQUM7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBRzFCLHVCQUFlLEdBQUcsSUFBSSw2QkFBZSxDQUFDLFVBQVUsQ0FBaUIsa0JBQWtCLENBQUMsQ0FBQztBQUVsRzs7R0FFRztBQUNIO0lBQ0ksTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUVEOztHQUVHO0FBQ0gsdUJBQWUsQ0FBQyxLQUFLLENBQUM7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ25CSCw2Q0FBOEM7QUFDOUMsMENBQXVDO0FBRzFCLDJCQUFtQixHQUFHLElBQUksNkJBQWUsQ0FBQyxVQUFVLENBQXFCLHFCQUFxQixDQUFDLENBQUM7QUFFN0c7O0dBRUc7QUFDSDtJQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLENBQUM7QUFFRDs7R0FFRztBQUNILDJCQUFtQixDQUFDLEtBQUssQ0FBQztJQUN0QixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FDWkg7Q0FHQztBQUhELHdCQUdDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMEJEOztHQUVHO0FBQ0g7Q0FjQztBQWRELDBDQWNDOzs7Ozs7Ozs7Ozs7OztBQ3JERDs7R0FFRztBQUNIO0NBYUM7QUFiRCw4QkFhQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDZEQ7O0dBRUc7QUFDSDtDQU1DO0FBTkQsa0NBTUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3lGQSxDQUFDOzs7Ozs7Ozs7Ozs7OztBQ3BHRjtJQU1JLFVBQVUsQ0FBRSxPQUFjO1FBQ3RCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxnQkFBZ0IsQ0FBRSxXQUFrQixFQUFFLE9BQWMsRUFBRSxNQUFXLEVBQUUsT0FBWTtRQUMzRSxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQztRQUM3QixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQztJQUM3QixDQUFDO0lBRUQsT0FBTztRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxPQUFPLENBQUUsTUFBYTtRQUNsQixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRUQsWUFBWTtRQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFFRCxZQUFZLENBQUUsV0FBa0I7UUFDNUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUM7SUFDakMsQ0FBQztJQUVELFdBQVc7UUFDUCxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBRUQsV0FBVyxDQUFFLE1BQVc7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7SUFDM0IsQ0FBQztJQUVELFlBQVk7UUFDUixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRUQsWUFBWSxDQUFFLFdBQWdCO1FBQzFCLElBQUksQ0FBQyxTQUFTLEdBQUcsV0FBVyxDQUFDO0lBQ2pDLENBQUM7Q0FDSjtBQWpERCxvQkFpREM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDakREOztHQUVHO0FBQ0g7Q0FNQztBQU5ELDhDQU1DO0FBRUQ7O0dBRUc7QUFDSDtDQUdDO0FBSEQsNEJBR0M7QUFFRDs7R0FFRztBQUNIO0NBWUM7QUFaRCxrQ0FZQztBQUVEOztHQUVHO0FBQ0g7Q0FVQztBQVZELHNCQVVDO0FBRUQ7O0dBRUc7QUFDSDtDQU9DO0FBUEQsc0JBT0M7QUFFRDs7R0FFRztBQUNIO0NBS0M7QUFMRCxnQ0FLQztBQUVEOztHQUVHO0FBQ0g7Q0FHQztBQUhELDBDQUdDO0FBRUQ7O0dBRUc7QUFDSDtDQUlDO0FBSkQsNENBSUM7QUFFRDs7R0FFRztBQUNIO0NBR0M7QUFIRCw0QkFHQztBQUVEOztHQUVHO0FBQ0g7Q0FHQztBQUhELHdCQUdDO0FBRUQ7O0dBRUc7QUFDSDtDQUdDO0FBSEQsZ0RBR0M7QUFFRDs7R0FFRztBQUNIO0NBT0M7QUFQRCxzQkFPQztBQUVEOztHQUVHO0FBQ0g7Q0FRQztBQVJELHdEQVFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN6SUQ7O0dBRUc7QUFDSDtDQU1DO0FBTkQsc0NBTUM7QUFFRDs7R0FFRztBQUNIO0NBR0M7QUFIRCw0QkFHQztBQUVEOztHQUVHO0FBQ0g7Q0FFQztBQUZELDBCQUVDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN0QkQ7SUFFUyxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQXdCO1FBQ25ELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLHdJQUF3SSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xLLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDZCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsRUFBRSxxQkFBcUIsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUN6QyxDQUFDO0lBQ0gsQ0FBQztJQUVEOzs7Ozs7OztNQVFFO0lBQ0ssTUFBTSxDQUFDLGdCQUFnQixDQUFDLE9BQXdCO1FBQ3JELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLEVBQUUscUJBQXFCLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDekMsQ0FBQztJQUNILENBQUM7SUFFTSxNQUFNLENBQUMsZUFBZSxDQUFDLE9BQXdCO1FBQ3BELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDeEMsQ0FBQztJQUNILENBQUM7SUFFTSxNQUFNLENBQUMsb0JBQW9CLENBQUMsT0FBd0I7UUFDekQsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDZCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsRUFBRSx5QkFBeUIsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM3QyxDQUFDO0lBQ0gsQ0FBQztJQUVNLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxPQUF3QjtRQUN2RCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDOUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNkLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLE1BQU0sQ0FBQyxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUFDO1FBQ3JDLENBQUM7SUFDSCxDQUFDO0lBRU0sTUFBTSxDQUFDLG9CQUFvQixDQUFDLE9BQXdCO1FBQ3pELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM5QyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDdkMsQ0FBQztJQUNILENBQUM7SUFFTSxNQUFNLENBQUMsbUJBQW1CLENBQUMsT0FBd0I7UUFDeEQsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDZCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUN0QyxDQUFDO0lBQ0gsQ0FBQztJQUVNLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxPQUF3QjtRQUN0RCxFQUFFLEVBQUMsT0FBTyxDQUFDLEtBQUssS0FBSyxJQUFJLElBQUksT0FBTyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsRUFBQztZQUN4RCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxDQUFDLEVBQUUsMEJBQTBCLEVBQUUsSUFBSSxFQUFFLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0NBZ0JGO0FBM0ZELDRDQTJGQzs7Ozs7Ozs7Ozs7Ozs7QUM3RkQsd0RBQWdEO0FBRWhELHdCQUFRLENBQUMsWUFBWSxDQUFDLFVBQVUsT0FBTyxFQUFFLElBQUk7SUFFekMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNuRCxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztJQUMzRCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUU3QywwQkFBMEI7SUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBQztBQUNoQixDQUFDLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUNYSCx3REFBZ0Q7QUFDaEQsMENBQXVDO0FBRXZDLG9HQUF1RjtBQUN2Riw0R0FBOEY7QUFHOUYsd0JBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLFVBQVUsS0FBSztJQUN6QyxNQUFNLENBQUMsZUFBTSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUN6RCxDQUFDLENBQUM7QUFFRjtJQUNJLE1BQU0sQ0FBQyxVQUFVLElBQUksRUFBRSxHQUFHO1FBRXRCLElBQUksWUFBWSxHQUFpQix3Q0FBYSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO1FBQzVHLElBQUksUUFBUSxHQUFHLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUN4RixJQUFJLGFBQWEsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDbEcsSUFBSSxVQUFVLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzVGLElBQUksWUFBWSxHQUFHLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUNoRyxJQUFJLFNBQVMsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDMUYsSUFBSSxZQUFZLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBRWhHLElBQUksV0FBVyxHQUFHLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNqRixJQUFJLFVBQVUsR0FBRyxpQ0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDL0UsSUFBSSxZQUFZLEdBQUcsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDbkYsSUFBSSxTQUFTLEdBQUcsaUNBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQzVFLElBQUksWUFBWSxHQUFHLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1FBRW5GLElBQUksUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUV2SCxNQUFNLENBQUM7Ozs7Ozs7Ozt3SUFTeUgsWUFBWTs7Ozs7Ozt1SkFPRyxRQUFROzs7c0hBR3pDLGFBQWE7Ozs7O29FQUsvRCxHQUFHLEtBQUssVUFBVTs7Ozs7eURBSzdCLFlBQVksV0FBVyxTQUFTOzs7Ozs7Ozs7Ozs7OzhGQWFLLFlBQVk7Ozs7OzhFQUs1QixXQUFXLHNDQUFzQyxZQUFZOzs4RUFFN0QsVUFBVSxzQ0FBc0MsWUFBWTs7OEVBRTVELFlBQVksc0NBQXNDLFlBQVk7Ozs7Ozs7OytEQVE3RSxTQUFTOzs7Ozs7Ozs7Ozs7Z0JBWXhELENBQUM7SUFDYixDQUFDLENBQUM7QUFDTixDQUFDO0FBRUQ7SUFDSSxNQUFNLENBQUMsVUFBVSxJQUFJLEVBQUUsR0FBRztRQUV0QixJQUFJLFlBQVksR0FBaUIsd0NBQWEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUM1RyxJQUFJLFFBQVEsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDeEYsSUFBSSxhQUFhLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQ2xHLElBQUksVUFBVSxHQUFHLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUM1RixJQUFJLFlBQVksR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDaEcsSUFBSSxTQUFTLEdBQUcsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzFGLElBQUksWUFBWSxHQUFHLGVBQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGVBQWUsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUVoRyxJQUFJLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUVqSCxNQUFNLENBQUMsT0FBTyxRQUFRO3NCQUNSLGFBQWE7c0JBQ2IsR0FBRztzQkFDSCxZQUFZO3NCQUNaLFNBQVM7Z0JBQ2YsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDO0FBRUQsd0JBQVEsQ0FBQyxjQUFjLEdBQUc7SUFDdEIsSUFBSSxFQUFFLEVBQUU7SUFDUixRQUFRLEVBQUUsZUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUM7SUFDN0UsYUFBYSxFQUFFO1FBQ1gsT0FBTyxFQUFFLFVBQVUsSUFBSTtZQUNuQixJQUFJLFlBQVksR0FBaUIsd0NBQWEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztZQUM1RyxJQUFJLFVBQVUsR0FBRyxlQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxlQUFlLEVBQUUseUJBQXlCLENBQUMsQ0FBQztZQUV6RyxNQUFNLENBQUMsVUFBVSxHQUFHLEdBQUcsR0FBRyx3QkFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUM7UUFDL0QsQ0FBQztRQUNELElBQUksRUFBRSxLQUFLLEVBQUU7UUFDYixJQUFJLEVBQUUsU0FBUyxFQUFFO0tBQ3BCO0lBQ0QsV0FBVyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFVBQVUsSUFBSTtZQUNuQixNQUFNLENBQUMsaUNBQWlDLEdBQUcsd0JBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDO1FBQ2hGLENBQUM7UUFDRCxJQUFJLEVBQUUsS0FBSyxFQUFFO0tBQ2hCO0lBQ0QsYUFBYSxFQUFFO1FBQ1gsT0FBTyxFQUFFLFVBQVUsSUFBSTtZQUNuQixNQUFNLENBQUMseUNBQXlDLEdBQUcsd0JBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDO1FBQ3hGLENBQUM7UUFDRCxJQUFJLEVBQUUsS0FBSyxFQUFFO0tBQ2hCO0NBQ0osQ0FBQztBQUdGLHdCQUFRLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsR0FBRyxFQUFFO0lBQzlDLElBQUksT0FBTyxHQUFHLGlDQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUMxRSxNQUFNLENBQUMsT0FBTyxDQUFDO0FBQ25CLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUM5SkYsdUZBQTBFO0FBRzFFO0lBRUksRUFBRSxDQUFDLENBQUMsdUJBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVwQyxNQUFNLEtBQUssR0FBVztZQUNsQjtnQkFDSSxHQUFHLEVBQUUsS0FBSztnQkFDVixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsMkJBQTJCO2dCQUNqQyxHQUFHLEVBQUUsZ0JBQWdCO2dCQUNyQixTQUFTLEVBQUUsYUFBYTtnQkFDeEIsS0FBSyxFQUFFLEdBQUc7YUFDYjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxLQUFLO2dCQUNWLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSwyQkFBMkI7Z0JBQ2pDLEdBQUcsRUFBRSxpQkFBaUI7Z0JBQ3RCLFNBQVMsRUFBRSxhQUFhO2dCQUN4QixLQUFLLEVBQUUsR0FBRzthQUNiO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE9BQU87Z0JBQ1osU0FBUyxFQUFFLElBQUk7Z0JBQ2YsSUFBSSxFQUFFLGVBQWU7Z0JBQ3JCLEdBQUcsRUFBRSxjQUFjO2dCQUNuQixTQUFTLEVBQUUsT0FBTztnQkFDbEIsS0FBSyxFQUFFLEtBQUs7YUFDZjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxpQ0FBaUM7Z0JBQ3ZDLEdBQUcsRUFBRSxFQUFFO2dCQUNQLFNBQVMsRUFBRSxvQkFBb0I7Z0JBQy9CLEtBQUssRUFBRSxJQUFJO2dCQUNYLFFBQVEsRUFDSjtvQkFDSTt3QkFDSSxHQUFHLEVBQUUsTUFBTTt3QkFDWCxTQUFTLEVBQUUsSUFBSTt3QkFDZixJQUFJLEVBQUUsa0NBQWtDO3dCQUN4QyxHQUFHLEVBQUUsRUFBRTt3QkFDUCxTQUFTLEVBQUUsRUFBRTt3QkFDYixLQUFLLEVBQUUsSUFBSTt3QkFDWCxRQUFRLEVBQ0o7NEJBQ0k7Z0NBQ0ksR0FBRyxFQUFFLE9BQU87Z0NBQ1osU0FBUyxFQUFFLElBQUk7Z0NBQ2YsSUFBSSxFQUFFLHFDQUFxQztnQ0FDM0MsR0FBRyxFQUFFLG9CQUFvQjtnQ0FDekIsU0FBUyxFQUFFLEVBQUU7Z0NBQ2IsS0FBSyxFQUFFLEtBQUs7NkJBQ2YsRUFBRTtnQ0FDQyxHQUFHLEVBQUUsT0FBTztnQ0FDWixTQUFTLEVBQUUsSUFBSTtnQ0FDZixJQUFJLEVBQUUsOEJBQThCO2dDQUNwQyxHQUFHLEVBQUUsNEJBQTRCO2dDQUNqQyxTQUFTLEVBQUUsRUFBRTtnQ0FDYixLQUFLLEVBQUUsS0FBSzs2QkFDZixFQUFFO2dDQUNDLEdBQUcsRUFBRSxPQUFPO2dDQUNaLFNBQVMsRUFBRSxJQUFJO2dDQUNmLElBQUksRUFBRSxxQ0FBcUM7Z0NBQzNDLEdBQUcsRUFBRSxxQkFBcUI7Z0NBQzFCLFNBQVMsRUFBRSxFQUFFO2dDQUNiLEtBQUssRUFBRSxLQUFLOzZCQUNmO3lCQUNKO3FCQUNSLEVBQUU7d0JBQ0MsR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLDZCQUE2Qjt3QkFDbkMsR0FBRyxFQUFFLEVBQUU7d0JBQ1AsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7d0JBQ1gsUUFBUSxFQUNKOzRCQUNJO2dDQUNJLEdBQUcsRUFBRSxPQUFPO2dDQUNaLFNBQVMsRUFBRSxJQUFJO2dDQUNmLElBQUksRUFBRSxvQ0FBb0M7Z0NBQzFDLEdBQUcsRUFBRSxhQUFhO2dDQUNsQixTQUFTLEVBQUUsRUFBRTtnQ0FDYixLQUFLLEVBQUUsS0FBSzs2QkFDZixFQUFFO2dDQUNDLEdBQUcsRUFBRSxPQUFPO2dDQUNaLFNBQVMsRUFBRSxJQUFJO2dDQUNmLElBQUksRUFBRSxvQ0FBb0M7Z0NBQzFDLEdBQUcsRUFBRSxrQ0FBa0M7Z0NBQ3ZDLFNBQVMsRUFBRSxFQUFFO2dDQUNiLEtBQUssRUFBRSxLQUFLOzZCQUNmO3lCQUNKO3FCQUNSLEVBQUU7d0JBQ0MsR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLG9DQUFvQzt3QkFDMUMsR0FBRyxFQUFFLG9CQUFvQjt3QkFDekIsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2Q7aUJBQ0o7YUFDUjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxvQ0FBb0M7Z0JBQzFDLEdBQUcsRUFBRSwrQkFBK0I7Z0JBQ3BDLFNBQVMsRUFBRSxvQkFBb0I7Z0JBQy9CLEtBQUssRUFBRSxJQUFJO2FBQ2Q7WUFDRDtnQkFDSSxHQUFHLEVBQUUsTUFBTTtnQkFDWCxTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsNkJBQTZCO2dCQUNuQyxHQUFHLEVBQUUsd0JBQXdCO2dCQUM3QixTQUFTLEVBQUUsWUFBWTtnQkFDdkIsS0FBSyxFQUFFLElBQUk7YUFDZDtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxvQ0FBb0M7Z0JBQzFDLEdBQUcsRUFBRSw2Q0FBNkM7Z0JBQ2xELFNBQVMsRUFBRSxNQUFNO2dCQUNqQixLQUFLLEVBQUUsSUFBSTthQUNkO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE1BQU07Z0JBQ1gsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLElBQUksRUFBRSx5QkFBeUI7Z0JBQy9CLEdBQUcsRUFBRSxFQUFFO2dCQUNQLFNBQVMsRUFBRSxTQUFTO2dCQUNwQixLQUFLLEVBQUUsSUFBSTtnQkFDWCxRQUFRLEVBQ0o7b0JBQ0k7d0JBQ0ksR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLGdDQUFnQzt3QkFDdEMsR0FBRyxFQUFFLHNCQUFzQjt3QkFDM0IsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2Q7b0JBQ0Q7d0JBQ0ksR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLGdDQUFnQzt3QkFDdEMsR0FBRyxFQUFFLHNCQUFzQjt3QkFDM0IsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2Q7b0JBQ0Q7d0JBQ0ksR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLHNDQUFzQzt3QkFDNUMsR0FBRyxFQUFFLCtCQUErQjt3QkFDcEMsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2Q7aUJBQ0o7YUFDUjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxtQ0FBbUM7Z0JBQ3pDLEdBQUcsRUFBRSxtQkFBbUI7Z0JBQ3hCLFNBQVMsRUFBRSxNQUFNO2dCQUNqQixLQUFLLEVBQUUsSUFBSTthQUNkO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE1BQU07Z0JBQ1gsU0FBUyxFQUFFLElBQUk7Z0JBQ2YsSUFBSSxFQUFFLHVDQUF1QztnQkFDN0MsR0FBRyxFQUFFLEVBQUU7Z0JBQ1AsU0FBUyxFQUFFLE1BQU07Z0JBQ2pCLEtBQUssRUFBRSxJQUFJO2dCQUNYLFFBQVEsRUFDSjtvQkFDSTt3QkFDSSxHQUFHLEVBQUUsTUFBTTt3QkFDWCxTQUFTLEVBQUUsSUFBSTt3QkFDZixJQUFJLEVBQUUsZ0NBQWdDO3dCQUN0QyxHQUFHLEVBQUUsZUFBZTt3QkFDcEIsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2QsRUFBRTt3QkFDQyxHQUFHLEVBQUUsTUFBTTt3QkFDWCxTQUFTLEVBQUUsSUFBSTt3QkFDZixJQUFJLEVBQUUsa0NBQWtDO3dCQUN4QyxHQUFHLEVBQUUsaUJBQWlCO3dCQUN0QixTQUFTLEVBQUUsRUFBRTt3QkFDYixLQUFLLEVBQUUsSUFBSTtxQkFDZCxFQUFFO3dCQUNDLEdBQUcsRUFBRSxNQUFNO3dCQUNYLFNBQVMsRUFBRSxJQUFJO3dCQUNmLElBQUksRUFBRSxxQ0FBcUM7d0JBQzNDLEdBQUcsRUFBRSxvQkFBb0I7d0JBQ3pCLFNBQVMsRUFBRSxFQUFFO3dCQUNiLEtBQUssRUFBRSxJQUFJO3FCQUNkLEVBQUU7d0JBQ0MsR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLGlDQUFpQzt3QkFDdkMsR0FBRyxFQUFFLGdCQUFnQjt3QkFDckIsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2QsRUFBRTt3QkFDQyxHQUFHLEVBQUUsTUFBTTt3QkFDWCxTQUFTLEVBQUUsSUFBSTt3QkFDZixJQUFJLEVBQUUsc0NBQXNDO3dCQUM1QyxHQUFHLEVBQUUsRUFBRTt3QkFDUCxTQUFTLEVBQUUsRUFBRTt3QkFDYixLQUFLLEVBQUUsSUFBSTt3QkFDWCxRQUFRLEVBQUU7NEJBQ047Z0NBQ0ksR0FBRyxFQUFFLE9BQU87Z0NBQ1osU0FBUyxFQUFFLElBQUk7Z0NBQ2YsSUFBSSxFQUFFLCtCQUErQjtnQ0FDckMsR0FBRyxFQUFFLGNBQWM7Z0NBQ25CLFNBQVMsRUFBRSxFQUFFO2dDQUNiLEtBQUssRUFBRSxLQUFLOzZCQUNmOzRCQUNEO2dDQUNJLEdBQUcsRUFBRSxPQUFPO2dDQUNaLFNBQVMsRUFBRSxJQUFJO2dDQUNmLElBQUksRUFBRSw4QkFBOEI7Z0NBQ3BDLEdBQUcsRUFBRSxvQkFBb0I7Z0NBQ3pCLFNBQVMsRUFBRSxFQUFFO2dDQUNiLEtBQUssRUFBRSxLQUFLOzZCQUNmO3lCQUNKO3FCQUNKLEVBQUU7d0JBQ0MsR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLDZCQUE2Qjt3QkFDbkMsR0FBRyxFQUFFLFlBQVk7d0JBQ2pCLFNBQVMsRUFBRSxFQUFFO3dCQUNiLEtBQUssRUFBRSxJQUFJO3FCQUNkLEVBQUU7d0JBQ0MsR0FBRyxFQUFFLE1BQU07d0JBQ1gsU0FBUyxFQUFFLElBQUk7d0JBQ2YsSUFBSSxFQUFFLG9DQUFvQzt3QkFDMUMsR0FBRyxFQUFFLG1CQUFtQjt3QkFDeEIsU0FBUyxFQUFFLEVBQUU7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ2Q7aUJBQ0o7YUFDUjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxvQ0FBb0M7Z0JBQzFDLEdBQUcsRUFBRSx1QkFBdUI7Z0JBQzVCLFNBQVMsRUFBRSxVQUFVO2dCQUNyQixLQUFLLEVBQUUsSUFBSTthQUNkO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE1BQU07Z0JBQ1gsU0FBUyxFQUFFLElBQUk7Z0JBQ2YsSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCLEdBQUcsRUFBRSxhQUFhO2dCQUNsQixTQUFTLEVBQUUsS0FBSztnQkFDaEIsS0FBSyxFQUFFLElBQUk7YUFDZDtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxtQkFBbUI7Z0JBQ3pCLEdBQUcsRUFBRSxrQkFBa0I7Z0JBQ3ZCLFNBQVMsRUFBRSxtQkFBbUI7Z0JBQzlCLEtBQUssRUFBRSxJQUFJO2FBQ2Q7WUFDRDtnQkFDSSxHQUFHLEVBQUUsTUFBTTtnQkFDWCxTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsbUNBQW1DO2dCQUN6QyxHQUFHLEVBQUUsa0JBQWtCO2dCQUN2QixTQUFTLEVBQUUsTUFBTTtnQkFDakIsS0FBSyxFQUFFLElBQUk7YUFDZDtZQUNEO2dCQUNJLEdBQUcsRUFBRSxNQUFNO2dCQUNYLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxhQUFhO2dCQUNuQixHQUFHLEVBQUUsWUFBWTtnQkFDakIsU0FBUyxFQUFFLFVBQVU7Z0JBQ3JCLEtBQUssRUFBRSxJQUFJO2FBQ2Q7WUFDRDtnQkFDSSxHQUFHLEVBQUUsTUFBTTtnQkFDWCxTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsdUNBQXVDO2dCQUM3QyxHQUFHLEVBQUUsZ0JBQWdCO2dCQUNyQixTQUFTLEVBQUUsaUJBQWlCO2dCQUM1QixLQUFLLEVBQUUsSUFBSTthQUNkO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE9BQU87Z0JBQ1osU0FBUyxFQUFFLElBQUk7Z0JBQ2YsSUFBSSxFQUFFLGdCQUFnQjtnQkFDdEIsR0FBRyxFQUFFLGVBQWU7Z0JBQ3BCLFNBQVMsRUFBRSxVQUFVO2dCQUNyQixLQUFLLEVBQUUsS0FBSzthQUNmO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLE9BQU87Z0JBQ1osU0FBUyxFQUFFLElBQUk7Z0JBQ2YsSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCLEdBQUcsRUFBRSxtQkFBbUI7Z0JBQ3hCLFNBQVMsRUFBRSxnQkFBZ0I7Z0JBQzNCLEtBQUssRUFBRSxLQUFLO2FBQ2Y7WUFDRDtnQkFDSSxHQUFHLEVBQUUsT0FBTztnQkFDWixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsdUJBQXVCO2dCQUM3QixHQUFHLEVBQUUseUJBQXlCO2dCQUM5QixTQUFTLEVBQUUsYUFBYTtnQkFDeEIsS0FBSyxFQUFFLEtBQUs7YUFDZjtZQUNEO2dCQUNJLEdBQUcsRUFBRSxPQUFPO2dCQUNaLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxjQUFjO2dCQUNwQixHQUFHLEVBQUUsYUFBYTtnQkFDbEIsU0FBUyxFQUFFLFNBQVM7Z0JBQ3BCLEtBQUssRUFBRSxLQUFLO2FBQ2Y7WUFDRDtnQkFDSSxHQUFHLEVBQUUsT0FBTztnQkFDWixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsbUNBQW1DO2dCQUN6QyxHQUFHLEVBQUUsMkJBQTJCO2dCQUNoQyxTQUFTLEVBQUUsTUFBTTtnQkFDakIsS0FBSyxFQUFFLEtBQUs7YUFDZjtTQUNKLENBQUM7UUFDRixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUUsQ0FBQyx1QkFBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7QUFDTCxDQUFDO0FBdFZELDhCQXNWQzs7Ozs7Ozs7Ozs7Ozs7QUN6VkQsdUZBQTBFO0FBRzFFO0lBRUksRUFBRSxFQUFDLHVCQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUUsQ0FBQyxFQUFDO1FBRW5DLE1BQU0sS0FBSyxHQUFXLENBQUM7Z0JBQ25CLEdBQUcsRUFBRSxLQUFLO2dCQUNWLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxvQkFBb0I7Z0JBQzFCLFdBQVcsRUFBRSw2QkFBNkI7Z0JBQzFDLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQzthQUNsRSxFQUFDO2dCQUNFLEdBQUcsRUFBRSxLQUFLO2dCQUNWLFNBQVMsRUFBRSxJQUFJO2dCQUNmLElBQUksRUFBRSxhQUFhO2dCQUNuQixXQUFXLEVBQUUsc0JBQXNCO2dCQUNuQyxLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztnQkFDL0IsV0FBVyxFQUFFLElBQUk7YUFDcEIsRUFBQztnQkFDRSxHQUFHLEVBQUUsS0FBSztnQkFDVixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsY0FBYztnQkFDcEIsV0FBVyxFQUFFLHVCQUF1QjtnQkFDcEMsS0FBSyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztnQkFDekIsV0FBVyxFQUFFLElBQUk7YUFDcEIsRUFBQztnQkFDRSxHQUFHLEVBQUUsS0FBSztnQkFDVixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsZUFBZTtnQkFDckIsV0FBVyxFQUFFLHdCQUF3QjtnQkFDckMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7YUFDMUQsRUFBQztnQkFDRSxHQUFHLEVBQUUsS0FBSztnQkFDVixTQUFTLEVBQUUsSUFBSTtnQkFDZixJQUFJLEVBQUUsaUJBQWlCO2dCQUN2QixXQUFXLEVBQUUsMEJBQTBCO2dCQUN2QyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztnQkFDckQsV0FBVyxFQUFFLElBQUk7YUFDcEIsQ0FBQyxDQUFDO1FBRUgsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVUsRUFBRSxFQUFFLENBQUMsdUJBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0FBQ0wsQ0FBQztBQXpDRCw4QkF5Q0M7Ozs7Ozs7Ozs7Ozs7O0FDNUNELDBGQUE4RTtBQUc5RTtJQUNJLEVBQUUsRUFBQyx3QkFBTSxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBQztRQUNuQyxNQUFNLE1BQU0sR0FBVztZQUNuQixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDakUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDakUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN0RSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDcEUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3JFLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN0RSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDOUQsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQzlELEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxxQkFBcUIsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQzdFLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNqRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDdEUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQy9ELEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNqRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDaEUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lB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T0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDOUQsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQy9ELEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDaEUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUMvRCxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDL0QsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUMvRCxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUs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QUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDckUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNyRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3BFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNuRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDckUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3JFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN4RSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDL0QsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2hFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDckUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3JFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNsRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDL0QsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNsRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxF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QUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNwRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDcEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2pFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN2RSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNyRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNsRSxF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QUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3BFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNwRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDcEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDL0QsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3JFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNwRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJ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QUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDcEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNoRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNsRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNwRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ2xFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNuRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQzVFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN4RSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDbkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ25FLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNuRSxFQUFF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RSxNQUFNLEVBQUM7WUFDdEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3ZFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNyRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDdkUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3RFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUNyRSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDckUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDO1lBQ3ZFLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQztZQUN2RSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUM7WUFDdEUsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFB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RUFBRSxvQkFBb0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQzFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQ3pFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQ3pFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxzQkFBc0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQzVFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQ3ZFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQzFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQzFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQzFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSwrQkFBK0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDO1lBQ3JGLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQztZQUNwRSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVB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QUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtB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RUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN2WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN6WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNsWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN6WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN2WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUMzWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNyWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsNEJBQTRCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUM5WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNsWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN4WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUMzWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN2WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN4WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN2WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNwWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN4WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNsWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN4WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUNuWixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRTtZQUN0WixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVB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RUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUM5QixFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtTQUNuQyxDQUFDO1FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQVcsRUFB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QkFBYyxFQUFFLENBQUM7SUFDakIseUNBQW9CLEVBQUUsQ0FBQztJQUN2QixnQ0FBZ0IsRUFBRSxDQUFDO0lBQ25CLGtCQUFVLEVBQUUsQ0FBQztJQUNiLCtCQUFnQixFQUFFLENBQUM7SUFDbkIsbUNBQWtCLEVBQUUsQ0FBQztJQUNyQiw4QkFBZSxFQUFFLENBQUM7SUFDbEIsa0JBQVcsRUFBRSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6Ii9hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvbm9kZSc7XG5pbXBvcnQgeyBCeXRlc0luZm8sIFFSQ29kZUluZm9ybWF0aW9uIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvdGFibGUubW9kZWwnO1xuaW1wb3J0IENvbGxlY3Rpb25zID0gcmVxdWlyZSgndHlwZXNjcmlwdC1jb2xsZWN0aW9ucycpO1xuXG5leHBvcnQgY2xhc3MgQ29kZUdlbmVyYXRvciB7XG4gICAgXG4gICAgcHJpdmF0ZSBzdHJpbmdUb0NvbnZlcnQ6c3RyaW5nO1xuICAgIHByaXZhdGUgZGljY2lvbmFyeSA9IG5ldyBDb2xsZWN0aW9ucy5EaWN0aW9uYXJ5PFN0cmluZyxOb2RlPigpO1xuICAgIHByaXZhdGUgc29ydExpc3Q6QXJyYXk8Tm9kZT4gPSBuZXcgQXJyYXk8Tm9kZT4oKTtcbiAgICBwcml2YXRlIG1hcCA9IG5ldyBDb2xsZWN0aW9ucy5EaWN0aW9uYXJ5PFN0cmluZyxTdHJpbmc+KCk7XG4gICAgcHJpdmF0ZSBmaW5hbFRyZWU6Tm9kZSA9IG5ldyBOb2RlKCk7XG4gICAgcHJpdmF0ZSBiaW5hcnlDb2RlID0gJyc7XG4gICAgcHJpdmF0ZSBzaWduaWZpY2F0aXZlQml0czpudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgZmluYWxCeXRlczogQnl0ZXNJbmZvW107XG4gICAgcHJpdmF0ZSBRUkNvZGU6c3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoIF9wU3RyaW5nVG9Db252ZXJ0OnN0cmluZyApe1xuICAgICAgICB0aGlzLnN0cmluZ1RvQ29udmVydCA9IF9wU3RyaW5nVG9Db252ZXJ0O1xuICAgICAgICB0aGlzLmZpbmFsVHJlZS5jcmVhdGVOb2RlRXh0ZW5kKCAwLCAyNTYsIG51bGwsIG51bGwgKTtcbiAgICAgICAgdGhpcy5maW5hbEJ5dGVzID0gW107XG4gICAgfVxuXG4gICAgcHVibGljIGdlbmVyYXRlQ29kZSgpe1xuICAgICAgICB0aGlzLmJ1aWxkRnJlY3VlbmN5VGFibGUoKTtcbiAgICAgICAgdGhpcy5zb3J0RGF0YSgpO1xuICAgICAgICB0aGlzLmNyZWF0ZVRyZWUoKTtcbiAgICAgICAgdGhpcy5jb2RlVHJlZSgpO1xuICAgICAgICB0aGlzLmNyZWF0ZVFSQ29kZSgpO1xuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGJ1aWxkRnJlY3VlbmN5VGFibGUoKTp2b2lke1xuICAgICAgICBsZXQgX2xOb2RlOk5vZGU7XG4gICAgICAgIGxldCBfbENoYXJzOm51bWJlciA9IDA7XG5cbiAgICAgICAgZm9yKGxldCBfaSA9IDA7IF9pIDwgdGhpcy5zdHJpbmdUb0NvbnZlcnQubGVuZ3RoOyBfaSsrICl7XG4gICAgICAgICAgICBfbENoYXJzID0gdGhpcy5zdHJpbmdUb0NvbnZlcnQuY2hhckNvZGVBdCggX2kgKTtcbiAgICAgICAgICAgIF9sTm9kZSA9IHRoaXMuZGljY2lvbmFyeS5nZXRWYWx1ZSggJycgKyBfbENoYXJzICk7XG5cbiAgICAgICAgICAgIGlmKCBfbE5vZGUgPT0gbnVsbCl7XG4gICAgICAgICAgICAgICAgbGV0IF9sQXV4Ok5vZGUgPSBuZXcgTm9kZSgpO1xuICAgICAgICAgICAgICAgIF9sQXV4LmNyZWF0ZU5vZGUoX2xDaGFycyk7XG4gICAgICAgICAgICAgICAgdGhpcy5kaWNjaW9uYXJ5LnNldFZhbHVlKCBfbENoYXJzICsgJycsIF9sQXV4ICk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIF9sTm9kZS5zZXRGcmVjdWVuY3koIF9sTm9kZS5nZXRGcmVjdWVuY3koKSArIDEgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgc29ydERhdGEoKTp2b2lke1xuICAgICAgICBsZXQgX2xOb2RlOk5vZGU7XG4gICAgICAgIGxldCBfbEZyZWN1ZW5jeTpudW1iZXI7XG4gICAgICAgIGxldCBfbFNvcnRGcmVjdWVuY3k6bnVtYmVyW10gPSBbXTtcbiAgICAgICAgbGV0IF9sU29ydFRNUDpBcnJheTxudW1iZXI+ID0gbmV3IEFycmF5PG51bWJlcj4oKTtcbiAgICAgICAgbGV0IF9BdXhDb250Om51bWJlciA9IDA7XG5cbiAgICAgICAgZm9yKCBsZXQgX2kgPSAwOyBfaSA8PSAyNTU7IF9pKysgKXtcbiAgICAgICAgICAgIF9sU29ydFRNUC5zcGxpY2UoIDAsIDAsIDAgKTtcbiAgICAgICAgfSAgICAgICAgXG5cbiAgICAgICAgdGhpcy5kaWNjaW9uYXJ5LnZhbHVlcygpLmZvckVhY2goKHJlcyk9PiB7XG4gICAgICAgICAgICBfbFNvcnRGcmVjdWVuY3kuc3BsaWNlKCBfQXV4Q29udCwgMCwgcmVzLmdldEZyZWN1ZW5jeSgpICk7XG4gICAgICAgICAgICBfbFNvcnRUTVAuc3BsaWNlKCByZXMuZ2V0Q2hhcigpLCAxLCByZXMuZ2V0RnJlY3VlbmN5KCkgKTsgXG4gICAgICAgICAgICBfQXV4Q29udCsrO1xuICAgICAgICB9KTtcblxuICAgICAgICBfbFNvcnRGcmVjdWVuY3kuc29ydCgpO1xuXG4gICAgICAgIF9sU29ydEZyZWN1ZW5jeS5mb3JFYWNoKChub2QpPT57XG4gICAgICAgICAgICBsZXQgdG1wID0gX2xTb3J0VE1QLmluZGV4T2YoIG5vZCApO1xuICAgICAgICAgICAgX2xTb3J0VE1QLnNwbGljZSggdG1wLCAxLCAwICk7XG4gICAgICAgICAgICBsZXQgdG1wTm9kZTpOb2RlID0gbmV3IE5vZGUoKTtcbiAgICAgICAgICAgIHRtcE5vZGUuY3JlYXRlTm9kZUV4dGVuZCggbm9kLCB0bXAsIG51bGwsIG51bGwgKTtcbiAgICAgICAgICAgIHRoaXMuc29ydExpc3QucHVzaCh0bXBOb2RlKTtcbiAgICAgICAgfSk7ICAgICAgXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjcmVhdGVOZXdOb2RlKCBfcE5vZGVMZWZ0Ok5vZGUsIF9wTm9kZVJpZ2h0Ok5vZGUgKTpOb2Rle1xuICAgICAgICBsZXQgX2xOZXdOb2RlOk5vZGUgPSBuZXcgTm9kZSgpO1xuICAgICAgICBsZXQgX2xGcmVjdWVuY3lOZXdOb2RlOm51bWJlcjtcblxuICAgICAgICBfbEZyZWN1ZW5jeU5ld05vZGUgPSAoIF9wTm9kZUxlZnQuZ2V0RnJlY3VlbmN5KCkgKyBfcE5vZGVSaWdodC5nZXRGcmVjdWVuY3koKSApO1xuICAgICAgICBfbE5ld05vZGUuY3JlYXRlTm9kZUV4dGVuZCggMCwgMjU2LCBudWxsLCBudWxsICk7XG4gICAgICAgIF9sTmV3Tm9kZS5zZXRGcmVjdWVuY3koIF9sRnJlY3VlbmN5TmV3Tm9kZSApO1xuICAgICAgICBfbE5ld05vZGUuc2V0Tm9kZUxlZnQoIF9wTm9kZUxlZnQgKTtcbiAgICAgICAgX2xOZXdOb2RlLnNldE5vZGVSaWdodCggX3BOb2RlUmlnaHQgKTtcbiAgICAgICAgcmV0dXJuIF9sTmV3Tm9kZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluc2VydE5ld05vZGUoIF9wTmV3Tm9kZTpOb2RlLCBfcFNvcnRMaXN0OkFycmF5PE5vZGU+ICk6QXJyYXk8Tm9kZT57XG4gICAgICAgIGxldCBfbEZpcnN0Tm9kZTpOb2RlID0gbmV3IE5vZGUoKTtcbiAgICAgICAgbGV0IF9sU2Vjb25kTm9kZTpOb2RlID0gbmV3IE5vZGUoKTtcblxuICAgICAgICBfbEZpcnN0Tm9kZS5jcmVhdGVOb2RlRXh0ZW5kKCAwLCAyNTYsIG51bGwsIG51bGwpO1xuICAgICAgICBfbFNlY29uZE5vZGUuY3JlYXRlTm9kZUV4dGVuZCggMCwgMjU2LCBudWxsLCBudWxsICk7XG4gICAgICAgIF9wU29ydExpc3Quc3BsaWNlKDAgLCAwLCBfcE5ld05vZGUgKTtcblxuICAgICAgICBmb3IoIGxldCBfaSA9IDA7IF9pIDwgX3BTb3J0TGlzdC5sZW5ndGggLSAxOyBfaSsrICl7XG4gICAgICAgICAgICBfbEZpcnN0Tm9kZSA9IF9wU29ydExpc3RbIF9pIF07XG4gICAgICAgICAgICBfbFNlY29uZE5vZGUgPSBfcFNvcnRMaXN0WyAoX2kgKyAxKSBdO1xuXG4gICAgICAgICAgICBpZiggX2xGaXJzdE5vZGUuZ2V0RnJlY3VlbmN5KCkgPj0gX2xTZWNvbmROb2RlLmdldEZyZWN1ZW5jeSgpICl7XG4gICAgICAgICAgICAgICAgX3BTb3J0TGlzdC5zcGxpY2UoICggX2kgKyAxICksIDEsIF9sRmlyc3ROb2RlICk7XG4gICAgICAgICAgICAgICAgX3BTb3J0TGlzdC5zcGxpY2UoIF9pLCAxLCBfbFNlY29uZE5vZGUgKTtcbiAgICAgICAgICAgIH0gXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wU29ydExpc3Q7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjcmVhdGVUcmVlKCk6dm9pZCB7XG4gICAgICAgIGxldCBfbFRlbXBOb2RlTGVmdDpOb2RlID0gbmV3IE5vZGUoKTtcbiAgICAgICAgbGV0IF9sVGVtcE5vZGVSaWdodDpOb2RlID0gbmV3IE5vZGUoKTtcbiAgICAgICAgbGV0IF9sVGVtcE5ld05vZGU6Tm9kZSA9IG5ldyBOb2RlKCk7XG5cbiAgICAgICAgX2xUZW1wTm9kZUxlZnQuY3JlYXRlTm9kZUV4dGVuZCggMCwgMjU2LCBudWxsLCBudWxsICk7XG4gICAgICAgIF9sVGVtcE5vZGVSaWdodC5jcmVhdGVOb2RlRXh0ZW5kKCAwLCAyNTYsIG51bGwsIG51bGwgKTtcbiAgICAgICAgX2xUZW1wTmV3Tm9kZS5jcmVhdGVOb2RlRXh0ZW5kKCAwLCAyNTYsIG51bGwsIG51bGwgKTtcblxuICAgICAgICB3aGlsZSggdGhpcy5zb3J0TGlzdC5sZW5ndGggIT0gMSApeyAgICAgICAgICAgIFxuICAgICAgICAgICAgX2xUZW1wTm9kZUxlZnQgPSB0aGlzLnNvcnRMaXN0LnNoaWZ0KCk7XG4gICAgICAgICAgICBfbFRlbXBOb2RlUmlnaHQgPSB0aGlzLnNvcnRMaXN0LnNoaWZ0KCk7XG4gICAgICAgICAgICBfbFRlbXBOZXdOb2RlID0gdGhpcy5jcmVhdGVOZXdOb2RlKCBfbFRlbXBOb2RlTGVmdCwgX2xUZW1wTm9kZVJpZ2h0ICk7XG4gICAgICAgICAgICB0aGlzLnNvcnRMaXN0ID0gdGhpcy5pbnNlcnROZXdOb2RlKCBfbFRlbXBOZXdOb2RlLCB0aGlzLnNvcnRMaXN0ICk7XG4gICAgICAgIH0gICAgICAgIFxuICAgICAgICB0aGlzLmZpbmFsVHJlZSA9IHRoaXMuc29ydExpc3Quc2hpZnQoKTtcbiAgICAgICAgdGhpcy5wcmVPcmRlciggdGhpcy5maW5hbFRyZWUsIFwiXCIgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHByZU9yZGVyKCBfcE5vZGU6Tm9kZSwgX3BWYWw6c3RyaW5nICk6dm9pZHtcbiAgICAgICAgaWYoIF9wTm9kZS5nZXROb2RlTGVmdCgpID09IG51bGwgJiYgX3BOb2RlLmdldE5vZGVSaWdodCgpID09IG51bGwgKXtcbiAgICAgICAgICAgIHRoaXMubWFwLnNldFZhbHVlKCBfcE5vZGUuZ2V0Q2hhcigpICsgJycsIF9wVmFsICk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcmVPcmRlciggX3BOb2RlLmdldE5vZGVMZWZ0KCksIF9wVmFsLmNvbmNhdCggXCIxXCIgKSApO1xuICAgICAgICB0aGlzLnByZU9yZGVyKCBfcE5vZGUuZ2V0Tm9kZVJpZ2h0KCksIF9wVmFsLmNvbmNhdCggXCIwXCIgKSApO1xuICAgIH1cblxuICAgIHByaXZhdGUgY29kZVRyZWUoKTp2b2lke1xuICAgICAgICBsZXQgX2xDb2RlQnl0ZXMgPSAnJztcbiAgICAgICAgbGV0IF9sQ2hhcnMgPSAwO1xuICAgICAgICBsZXQgX2xFbmQ6Ym9vbGVhbiA9IGZhbHNlO1xuICAgICAgICBsZXQgX2xCeXRlOm51bWJlcjtcbiAgICAgICAgbGV0IF9sQ29kZTpzdHJpbmcgPSAnJztcblxuICAgICAgICBmb3IoIGxldCBfaSA9IDA7IF9pIDwgdGhpcy5zdHJpbmdUb0NvbnZlcnQubGVuZ3RoOyBfaSsrICl7XG4gICAgICAgICAgICBfbENoYXJzID0gdGhpcy5zdHJpbmdUb0NvbnZlcnQuY2hhckNvZGVBdCggX2kgKTtcbiAgICAgICAgICAgIHRoaXMuYmluYXJ5Q29kZSArPSB0aGlzLm1hcC5nZXRWYWx1ZSggX2xDaGFycyArICcnICk7XG4gICAgICAgIH1cblxuICAgICAgICBfbENvZGUgPSB0aGlzLmJpbmFyeUNvZGU7XG5cbiAgICAgICAgd2hpbGUoICFfbEVuZCApe1xuXG4gICAgICAgICAgICBsZXQgQnl0ZXNJbmZvOkJ5dGVzSW5mbyA9IHsgYml0czonJywgZmluYWxCeXRlOjAsIG9yaWdpbmFsQnl0ZTowIH07XG5cbiAgICAgICAgICAgIGZvciggbGV0IF9qID0gMDsgX2ogPCA4OyBfaisrICl7XG4gICAgICAgICAgICAgICAgX2xDb2RlQnl0ZXMgKz0gX2xDb2RlLmNoYXJBdCggX2ogKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9sQnl0ZSA9IHBhcnNlSW50KCBfbENvZGVCeXRlcywgMiApO1xuICAgICAgICAgICAgQnl0ZXNJbmZvLm9yaWdpbmFsQnl0ZSA9IF9sQnl0ZTtcblxuICAgICAgICAgICAgd2hpbGUoIHRydWUgKXtcbiAgICAgICAgICAgICAgICBfbEJ5dGUgPSB0aGlzLmJ5dGVOaXZlbGF0b3IoIF9sQnl0ZSApO1xuICAgICAgICAgICAgICAgIGlmKCBfbEJ5dGUgPj0gNjUgJiYgX2xCeXRlIDw9IDkwICl7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEJ5dGVzSW5mby5maW5hbEJ5dGUgPSBfbEJ5dGU7XG4gICAgICAgICAgICBCeXRlc0luZm8uYml0cyA9IF9sQ29kZUJ5dGVzO1xuICAgICAgICAgICAgdGhpcy5maW5hbEJ5dGVzLnB1c2goIEJ5dGVzSW5mbyApO1xuICAgICAgICAgICAgX2xDb2RlQnl0ZXMgPSAnJztcbiAgICAgICAgICAgIF9sQ29kZSA9IF9sQ29kZS5zdWJzdHJpbmcoIDgsIF9sQ29kZS5sZW5ndGggKTtcblxuICAgICAgICAgICAgaWYoIF9sQ29kZS5sZW5ndGggPT0gMCApe1xuICAgICAgICAgICAgICAgIF9sRW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYoIF9sQ29kZS5sZW5ndGggPCA4ICl7XG4gICAgICAgICAgICAgICAgX2xDb2RlID0gdGhpcy5hZGRTaWduaWZpY2F0aXZlQml0cyggX2xDb2RlICk7XG4gICAgICAgICAgICB9ICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYWRkU2lnbmlmaWNhdGl2ZUJpdHMoIF9jb2RlOnN0cmluZyApOnN0cmluZ3tcbiAgICAgICAgd2hpbGUoIF9jb2RlLmxlbmd0aCA8IDggKXtcbiAgICAgICAgICAgIF9jb2RlICs9IFwiMFwiO1xuICAgICAgICAgICAgdGhpcy5zaWduaWZpY2F0aXZlQml0cyArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfY29kZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGJ5dGVOaXZlbGF0b3IoIF9wQnl0ZTpudW1iZXIgKTpudW1iZXJ7XG4gICAgICAgIGxldCBfbE51bWJlckNvbnZlcnQ6bnVtYmVyID0gMDtcbiAgICAgICAgaWYoIF9wQnl0ZSA8IDY1ICl7XG4gICAgICAgICAgICBfbE51bWJlckNvbnZlcnQgPSBfcEJ5dGUgKyAxMDtcbiAgICAgICAgfSBlbHNlIGlmKCBfcEJ5dGUgPiA5MCApIHtcbiAgICAgICAgICAgIF9sTnVtYmVyQ29udmVydCA9IF9wQnl0ZSAtIDEwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBfbE51bWJlckNvbnZlcnQgPSBfcEJ5dGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9sTnVtYmVyQ29udmVydDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNyZWF0ZVFSQ29kZSgpOnZvaWR7XG4gICAgICAgIGxldCBfbFFSQ29kZTpzdHJpbmcgPSAnJztcblxuICAgICAgICB0aGlzLmZpbmFsQnl0ZXMuZm9yRWFjaCggKGJ5dGUpID0+IHtcbiAgICAgICAgICAgIF9sUVJDb2RlICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZS5maW5hbEJ5dGUpXG4gICAgICAgIH0pO1xuICAgICAgICBfbFFSQ29kZSArPSAoIHRoaXMuZmluYWxCeXRlc1sgMCBdLmZpbmFsQnl0ZSArICcnICk7XG4gICAgICAgIF9sUVJDb2RlICs9ICggdGhpcy5maW5hbEJ5dGVzWyB0aGlzLmZpbmFsQnl0ZXMubGVuZ3RoIC0gMSBdLmZpbmFsQnl0ZSArICcnICk7XG4gICAgICAgIHRoaXMuUVJDb2RlID0gX2xRUkNvZGU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEZpbmFsQnl0ZXMoKTpCeXRlc0luZm9bXXtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmluYWxCeXRlcztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0U2lnbmlmaWNhdGl2ZUJpdHMoKTpudW1iZXJ7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25pZmljYXRpdmVCaXRzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRRUkNvZGUoKTpzdHJpbmd7XG4gICAgICAgIHJldHVybiB0aGlzLlFSQ29kZTtcbiAgICB9XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3ItcnhqcydcbmltcG9ydCB7IEpvYiwgSm9iQ29sbGVjdGlvbiB9IGZyb20gJ21ldGVvci92c2l2c2k6am9iLWNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFdhaXRlckNhbGxEZXRhaWwgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC93YWl0ZXItY2FsbC1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgV2FpdGVyQ2FsbERldGFpbHMgfSBmcm9tICcuLi8uLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQsIEVzdGFibGlzaG1lbnRUdXJuIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5tb2RlbCc7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cywgRXN0YWJsaXNobWVudFR1cm5zIH0gZnJvbSAnLi4vLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUXVldWUsIFF1ZXVlTmFtZSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9nZW5lcmFsL3F1ZXVlLm1vZGVsJztcbmltcG9ydCB7IFF1ZXVlcyB9IGZyb20gJy4uLy4uLy4uL2NvbGxlY3Rpb25zL2dlbmVyYWwvcXVldWUuY29sbGVjdGlvbic7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgZnVuY3Rpb24gdmFsaWRhdGUgaWYgZXhpc3QgcXVldWVzIGFuZCBjcmVhdGVzIHRoZSBpbnN0YW5jZXMgY29ycmVzcG9uZGx5XG4gICAgICovXG4gICAgTWV0ZW9yLnN0YXJ0dXAoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGxldCBxdWV1ZXM6IFF1ZXVlID0gUXVldWVzLmZpbmRPbmUoe30pO1xuICAgICAgICBpZiAocXVldWVzKSB7XG4gICAgICAgICAgICBxdWV1ZXMucXVldWVzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgTWV0ZW9yLmNhbGwoJ2luaXRQcm9jZXNzSm9icycsIGVsZW1lbnQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIE1ldGVvci5tZXRob2RzKHtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBNZXRlb3IgTWV0aG9kIGFsbG93IGZpbmQgdGhlIHF1ZXVlIGNvcnJlc3BvbmRpbmcgdG8gY3VycmVudCBlc3RhYmxpc2htZW50IG9mIHRoZSB1c2VyXG4gICAgICAgICAqIEBwYXJhbSB7IGFueSB9IF9kYXRhXG4gICAgICAgICAqL1xuICAgICAgICBmaW5kUXVldWVCeUVzdGFibGlzaG1lbnQ6IGZ1bmN0aW9uIChfZGF0YTogYW55KSB7XG4gICAgICAgICAgICBsZXQgZXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmZpbmRPbmUoeyBfaWQ6IF9kYXRhLmVzdGFibGlzaG1lbnRzIH0pO1xuICAgICAgICAgICAgbGV0IHF1ZXVlID0gZXN0YWJsaXNobWVudC5xdWV1ZTtcbiAgICAgICAgICAgIGxldCB2YWxFbXB0eTogYm9vbGVhbiA9IE51bWJlci5pc0ludGVnZXIoZXN0YWJsaXNobWVudC5xdWV1ZS5sZW5ndGgpO1xuICAgICAgICAgICAgbGV0IHF1ZXVlTmFtZTogc3RyaW5nID0gXCJcIjtcblxuICAgICAgICAgICAgaWYgKHZhbEVtcHR5ICYmIGVzdGFibGlzaG1lbnQucXVldWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGxldCBwb3NpdGlvbiA9IE1ldGVvci5jYWxsKCdnZXRSYW5kb21JbnQnLCAwLCBlc3RhYmxpc2htZW50LnF1ZXVlLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICAgIGlmIChlc3RhYmxpc2htZW50LnF1ZXVlW3Bvc2l0aW9uXSAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBxdWV1ZU5hbWUgPSBcInF1ZXVlXCIgKyBwb3NpdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgTWV0ZW9yLmNhbGwoXCJxdWV1ZVZhbGlkYXRlXCIsIHF1ZXVlTmFtZSwgX2RhdGEsIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIG9uIFF1ZXVlIHZhbGlkYXRpbmdcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1ldGVvci5jYWxsKCd3YWl0ZXJDYWxsJywgcXVldWVOYW1lLCBmYWxzZSwgX2RhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBjYWxsIHRoZSB3YWl0ZXIvd2FpdHJlc3NcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBjYWxsIHRoZSB3YWl0ZXIvd2FpdHJlc3NcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgTWV0ZW9yIE1ldGhvZCB2YWxpZGF0ZSBpZiBleGlzdCBxdWV1ZSBpbiB0aGUgY29sbGVjdGlvblxuICAgICAgICAgKiBAcGFyYW0geyBzdHJpbmcgfSBfcXVldWVcbiAgICAgICAgICovXG4gICAgICAgIHF1ZXVlVmFsaWRhdGU6IGZ1bmN0aW9uIChfcXVldWU6IHN0cmluZywgX2RhdGE6IGFueSkge1xuICAgICAgICAgICAgbGV0IHF1ZXVlTmV3OiBRdWV1ZU5hbWUgPSB7IG5hbWU6IF9xdWV1ZSB9OztcbiAgICAgICAgICAgIGxldCBxdWV1ZXM6IFF1ZXVlID0gUXVldWVzLmZpbmRPbmUoe30pO1xuICAgICAgICAgICAgaWYgKHF1ZXVlcykge1xuICAgICAgICAgICAgICAgIGxldCBkb2MgPSBRdWV1ZXMuZmluZE9uZSh7IHF1ZXVlczogeyAkZWxlbU1hdGNoOiB7IG5hbWU6IF9xdWV1ZSB9IH0gfSk7XG4gICAgICAgICAgICAgICAgaWYgKCFkb2MpIHtcbiAgICAgICAgICAgICAgICAgICAgUXVldWVzLnVwZGF0ZSh7IF9pZDogcXVldWVzLl9pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhZGRUb1NldDogeyBxdWV1ZXM6IHF1ZXVlTmV3IH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBNZXRlb3IuY2FsbCgnaW5pdFByb2Nlc3NKb2JzJywgcXVldWVOZXcsIF9kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIFF1ZXVlcy5pbnNlcnQoeyBxdWV1ZXM6IFtxdWV1ZU5ld10gfSk7XG4gICAgICAgICAgICAgICAgTWV0ZW9yLmNhbGwoJ2luaXRQcm9jZXNzSm9icycsIHF1ZXVlTmV3LCBfZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgTWV0ZW9yIE1ldGhvZCBzdGFydHVwIHRoZSBxdWV1ZSBhbmQgcHJvY2VzcyBqb2JzXG4gICAgICAgICAqIEBwYXJhbSB7IHN0cmluZyB9IF9xdWV1ZVxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFByb2Nlc3NKb2JzKGVsZW1lbnQ6IFF1ZXVlTmFtZSwgX2RhdGE6IGFueSkge1xuICAgICAgICAgICAgbGV0IHF1ZXVlQ29sbGVjdGlvbiA9IEpvYkNvbGxlY3Rpb24oZWxlbWVudC5uYW1lKTtcbiAgICAgICAgICAgIHF1ZXVlQ29sbGVjdGlvbi5zdGFydEpvYlNlcnZlcigpO1xuICAgICAgICAgICAgdmFyIHdvcmtlcnMgPSBxdWV1ZUNvbGxlY3Rpb24ucHJvY2Vzc0pvYnMoXG4gICAgICAgICAgICAgICAgJ3dhaXRlckNhbGwnLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uY3VycmVuY3k6IDEsXG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IDEsXG4gICAgICAgICAgICAgICAgICAgIHBvbGxJbnRlcnZhbDogMSAqIDEwMDAsXG4gICAgICAgICAgICAgICAgICAgIHByZWZldGNoOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoam9iLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgcXVldWVOYW1lID0gZWxlbWVudC5uYW1lO1xuICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YV9kZXRhaWw6IFdhaXRlckNhbGxEZXRhaWw7XG4gICAgICAgICAgICAgICAgICAgIGxldCB1c3JfaWRfZW5hYmxlZDogVXNlckRldGFpbDtcblxuICAgICAgICAgICAgICAgICAgICBkYXRhX2RldGFpbCA9IFdhaXRlckNhbGxEZXRhaWxzLmZpbmRPbmUoeyBqb2JfaWQ6IGpvYi5fZG9jLl9pZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFfZGV0YWlsID09PSB1bmRlZmluZWQgfHwgZGF0YV9kZXRhaWwgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1ldGVvci5jYWxsKCd3YWl0ZXJDYWxsJywgcXVldWVOYW1lLCBmYWxzZSwgX2RhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YV9kZXRhaWwgPSBXYWl0ZXJDYWxsRGV0YWlscy5maW5kT25lKHsgam9iX2lkOiBqb2IuX2RvYy5faWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBsZXQgZXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmZpbmRPbmUoeyBfaWQ6IGRhdGFfZGV0YWlsLmVzdGFibGlzaG1lbnRfaWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIHVzcl9pZF9lbmFibGVkID0gTWV0ZW9yLmNhbGwoJ3ZhbGlkYXRlV2FpdGVyRW5hYmxlZCcsIGRhdGFfZGV0YWlsLmVzdGFibGlzaG1lbnRfaWQsIGVzdGFibGlzaG1lbnQubWF4X2pvYnMsIGRhdGFfZGV0YWlsLnRhYmxlX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVzcl9pZF9lbmFibGVkID09PSB1bmRlZmluZWQgfHwgdXNyX2lkX2VuYWJsZWQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1ldGVvci5jYWxsKCdqb2JSZW1vdmUnLCBxdWV1ZU5hbWUsIGpvYi5fZG9jLl9pZCwgZGF0YV9kZXRhaWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXNyX2lkX2VuYWJsZWQgPSBNZXRlb3IuY2FsbCgndmFsaWRhdGVXYWl0ZXJFbmFibGVkJywgZGF0YV9kZXRhaWwuZXN0YWJsaXNobWVudF9pZCwgZXN0YWJsaXNobWVudC5tYXhfam9icywgZGF0YV9kZXRhaWwudGFibGVfaWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGpvYi5kb25lKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b0RhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xuICAgICAgICAgICAgICAgICAgICBFc3RhYmxpc2htZW50VHVybnMudXBkYXRlKHsgZXN0YWJsaXNobWVudF9pZDogZGF0YV9kZXRhaWwuZXN0YWJsaXNobWVudF9pZCwgY3JlYXRpb25fZGF0ZTogeyAkZ3RlOiBuZXcgRGF0ZSh0b0RhdGUpIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2V0OiB7IGxhc3Rfd2FpdGVyX2lkOiB1c3JfaWRfZW5hYmxlZC51c2VyX2lkLCBtb2RpZmljYXRpb25fdXNlcjogJ1NZU1RFTScsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLCB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy9XYWl0ZXIgY2FsbCBkZXRhaWwgdXBkYXRlIGluIGNvbXBsZXRlZCBzdGF0ZVxuICAgICAgICAgICAgICAgICAgICBXYWl0ZXJDYWxsRGV0YWlscy51cGRhdGUoeyBqb2JfaWQ6IGpvYi5fZG9jLl9pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZXQ6IHsgXCJ3YWl0ZXJfaWRcIjogdXNyX2lkX2VuYWJsZWQudXNlcl9pZCwgXCJzdGF0dXNcIjogXCJjb21wbGV0ZWRcIiB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy9XYWl0ZXIgdXBkYXRlIG9mIGN1cnJlbnQgam9icyBhbmQgc3RhdGVcbiAgICAgICAgICAgICAgICAgICAgbGV0IHVzcl9qb2JzOiBudW1iZXIgPSB1c3JfaWRfZW5hYmxlZC5qb2JzICsgMTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVzcl9qb2JzIDwgZXN0YWJsaXNobWVudC5tYXhfam9icykge1xuICAgICAgICAgICAgICAgICAgICAgICAgVXNlckRldGFpbHMudXBkYXRlKHsgdXNlcl9pZDogdXNyX2lkX2VuYWJsZWQudXNlcl9pZCB9LCB7ICRzZXQ6IHsgXCJqb2JzXCI6IHVzcl9qb2JzIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXNyX2pvYnMgPT0gZXN0YWJsaXNobWVudC5tYXhfam9icykge1xuICAgICAgICAgICAgICAgICAgICAgICAgVXNlckRldGFpbHMudXBkYXRlKHsgdXNlcl9pZDogdXNyX2lkX2VuYWJsZWQudXNlcl9pZCB9LCB7ICRzZXQ6IHsgXCJlbmFibGVkXCI6IGZhbHNlLCBcImpvYnNcIjogdXNyX2pvYnMgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEpvYiwgSm9iQ29sbGVjdGlvbiB9IGZyb20gJ21ldGVvci92c2l2c2k6am9iLWNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCwgVXNlclJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFdhaXRlckNhbGxEZXRhaWwgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC93YWl0ZXItY2FsbC1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgV2FpdGVyQ2FsbERldGFpbHMgfSBmcm9tICcuLi8uLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQsIEVzdGFibGlzaG1lbnRUdXJuIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5tb2RlbCc7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cywgRXN0YWJsaXNobWVudFR1cm5zIH0gZnJvbSAnLi4vLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgT3JkZXIgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC9vcmRlci5tb2RlbCc7XG5pbXBvcnQgeyBPcmRlcnMgfSBmcm9tICcuLi8uLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVGFibGVzIH0gZnJvbSAnLi4vLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC90YWJsZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IF9sb2NhbGVGYWN0b3J5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9zcmMvYXBwbGljYXRpb25fbW9kdWxlJztcbmltcG9ydCB7IFJld2FyZFBvaW50IH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50Lm1vZGVsJztcbmltcG9ydCB7IFJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50LmNvbGxlY3Rpb24nO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG5cbiAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgIC8qKlxuICAgICAqIFRoaXMgTWV0ZW9yIE1ldGhvZCBhZGQgYSBqb2IgaW4gdGhlIFdhaXRlciBjYWxsIHF1ZXVlXG4gICAgICogQHBhcmFtIHtib29sZWFufSBfcHJpb3JpdHlIaWdoXG4gICAgICogQHBhcmFtIHthbnl9IF9kYXRhXG4gICAgICovXG4gICAgd2FpdGVyQ2FsbDogZnVuY3Rpb24gKF9xdWV1ZTogc3RyaW5nLCBfcHJpb3JpdHlIaWdoOiBib29sZWFuLCBfZGF0YTogYW55KSB7XG4gICAgICBsZXQgcHJpb3JpdHk6IHN0cmluZyA9ICdub3JtYWwnO1xuICAgICAgbGV0IGRlbGF5OiBudW1iZXIgPSAwO1xuICAgICAgdmFyIHdhaXRlckNhbGxEZXRhaWw6IHN0cmluZztcblxuICAgICAgdmFyIGpvYiA9IG5ldyBKb2IoXG4gICAgICAgIF9xdWV1ZSxcbiAgICAgICAgJ3dhaXRlckNhbGwnLFxuICAgICAgICB7IGRhdGE6ICcnIH1cbiAgICAgICk7XG4gICAgICBqb2IucHJpb3JpdHkocHJpb3JpdHkpXG4gICAgICAgIC5kZWxheShkZWxheSlcbiAgICAgICAgLnNhdmUoKTtcblxuICAgICAgaWYgKF9wcmlvcml0eUhpZ2gpIHtcbiAgICAgICAgcHJpb3JpdHkgPSAnY3JpdGljYWwnLCBkZWxheSA9IDEwMDAwO1xuICAgICAgICBXYWl0ZXJDYWxsRGV0YWlscy51cGRhdGUoeyBqb2JfaWQ6IF9kYXRhLmpvYl9pZCB9LCB7ICRzZXQ6IHsgd2FpdGVyX2lkOiBfZGF0YS53YWl0ZXJfaWQsIGpvYl9pZDogam9iLl9kb2MuX2lkIH0gfSk7XG4gICAgICAgIHdhaXRlckNhbGxEZXRhaWwgPSBfZGF0YS53YWl0ZXJfY2FsbF9pZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBuZXdUdXJuID0gTWV0ZW9yLmNhbGwoJ3R1cm5DcmVhdGUnLCBfZGF0YSk7XG4gICAgICAgIHdhaXRlckNhbGxEZXRhaWwgPSBXYWl0ZXJDYWxsRGV0YWlscy5jb2xsZWN0aW9uLmluc2VydCh7XG4gICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2RhdGEuZXN0YWJsaXNobWVudHMsXG4gICAgICAgICAgdGFibGVfaWQ6IF9kYXRhLnRhYmxlcyxcbiAgICAgICAgICB1c2VyX2lkOiBfZGF0YS51c2VyLFxuICAgICAgICAgIHR1cm46IG5ld1R1cm4sXG4gICAgICAgICAgc3RhdHVzOiBfZGF0YS5zdGF0dXMsXG4gICAgICAgICAgY3JlYXRpb25fdXNlcjogX2RhdGEudXNlcixcbiAgICAgICAgICBjcmVhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgIHF1ZXVlOiBfcXVldWUsXG4gICAgICAgICAgam9iX2lkOiBqb2IuX2RvYy5faWQsXG4gICAgICAgICAgdHlwZTogX2RhdGEudHlwZSxcbiAgICAgICAgICBvcmRlcl9pZDogX2RhdGEub3JkZXJfaWQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBKb2IgcmVtb3ZlXG4gICAgICogQHBhcmFtIHBRdWV1ZU5hbWUgXG4gICAgICogQHBhcmFtIHBKb2JJZCBcbiAgICAgKiBAcGFyYW0gcERhdGFEZXRhaWwgXG4gICAgICogQHBhcmFtIHBFbmFibGVkIFxuICAgICAqL1xuICAgIGpvYlJlbW92ZShwUXVldWVOYW1lLCBwSm9iSWQsIHBEYXRhRGV0YWlsKSB7XG4gICAgICBKb2IuZ2V0Sm9iKHBRdWV1ZU5hbWUsIHBKb2JJZCwgZnVuY3Rpb24gKGVyciwgam9iKSB7XG4gICAgICAgIGlmIChqb2IpIHtcbiAgICAgICAgICBqb2IuY2FuY2VsKCk7XG4gICAgICAgICAgam9iLnJlbW92ZShmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgaWYgKHBEYXRhRGV0YWlsICE9PSBudWxsICYmIHBEYXRhRGV0YWlsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YTogYW55ID0ge1xuICAgICAgICAgICAgICAgICAgam9iX2lkOiBqb2IuX2RvYy5faWQsXG4gICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50czogcERhdGFEZXRhaWwuZXN0YWJsaXNobWVudF9pZCxcbiAgICAgICAgICAgICAgICAgIHRhYmxlczogcERhdGFEZXRhaWwudGFibGVfaWQsXG4gICAgICAgICAgICAgICAgICB1c2VyOiBwRGF0YURldGFpbC51c2VyX2lkLFxuICAgICAgICAgICAgICAgICAgd2FpdGVyX2lkOiBwRGF0YURldGFpbC53YWl0ZXJfaWQsXG4gICAgICAgICAgICAgICAgICBzdGF0dXM6ICd3YWl0aW5nJ1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgTWV0ZW9yLmNhbGwoJ3dhaXRlckNhbGwnLCBwUXVldWVOYW1lLCB0cnVlLCBkYXRhKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVGhpcyBNZXRlb3IgbWV0aG9kIGFsbG93IGdldCBuZXcgdHVybiB0byB0aGUgY2xpZW50XG4gICAgICogQHBhcmFtIHsgYW55IH0gX2RhdGEgXG4gICAgICovXG4gICAgdHVybkNyZWF0ZShfZGF0YTogYW55KTogbnVtYmVyIHtcbiAgICAgIHZhciBuZXdUdXJuOiBudW1iZXIgPSAxO1xuICAgICAgdmFyIHRvRGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XG4gICAgICB2YXIgZXN0YWJsaXNobWVudFR1cm46IEVzdGFibGlzaG1lbnRUdXJuID0gRXN0YWJsaXNobWVudFR1cm5zLmZpbmRPbmUoe1xuICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfZGF0YS5lc3RhYmxpc2htZW50cyxcbiAgICAgICAgY3JlYXRpb25fZGF0ZTogeyAkZ3RlOiBuZXcgRGF0ZSh0b0RhdGUpIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoZXN0YWJsaXNobWVudFR1cm4pIHtcbiAgICAgICAgbmV3VHVybiA9IGVzdGFibGlzaG1lbnRUdXJuLnR1cm4gKyAxO1xuICAgICAgICBFc3RhYmxpc2htZW50VHVybnMudXBkYXRlKFxuICAgICAgICAgIHsgX2lkOiBlc3RhYmxpc2htZW50VHVybi5faWQgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICAkc2V0OiB7IHR1cm46IG5ld1R1cm4sIG1vZGlmaWNhdGlvbl91c2VyOiAnU1lTVEVNJywgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCksIH1cbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIEVzdGFibGlzaG1lbnRUdXJucy5pbnNlcnQoe1xuICAgICAgICAgIGVzdGFibGlzaG1lbnRfaWQ6IF9kYXRhLmVzdGFibGlzaG1lbnRzLFxuICAgICAgICAgIHR1cm46IG5ld1R1cm4sXG4gICAgICAgICAgbGFzdF93YWl0ZXJfaWQ6IFwiXCIsXG4gICAgICAgICAgY3JlYXRpb25fdXNlcjogJ1NZU1RFTScsXG4gICAgICAgICAgY3JlYXRpb25fZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3VHVybjtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVGhpcyBNZXRlb3IgTWV0aG9kIGFsbG93IGRlbGV0ZSBhIGpvYiBpbiB0aGUgV2FpdGVyIGNhbGwgcXVldWVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gX3dhaXRlcl9jYWxsX2RldGFpbF9pZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBfd2FpdGVyX2lkXG4gICAgICovXG4gICAgY2xvc2VDYWxsOiBmdW5jdGlvbiAoX2pvYkRldGFpbDogV2FpdGVyQ2FsbERldGFpbCwgX3dhaXRlcl9pZDogc3RyaW5nKSB7XG4gICAgICBKb2IuZ2V0Sm9iKF9qb2JEZXRhaWwucXVldWUsIF9qb2JEZXRhaWwuam9iX2lkLCBmdW5jdGlvbiAoZXJyLCBqb2IpIHtcbiAgICAgICAgam9iLnJlbW92ZShmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICBXYWl0ZXJDYWxsRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9qb2JEZXRhaWwuX2lkIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICRzZXQ6IHsgXCJzdGF0dXNcIjogXCJjbG9zZWRcIiwgbW9kaWZpY2F0aW9uX3VzZXI6IF93YWl0ZXJfaWQsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgbGV0IHdhaXRlckRldGFpbCA9IFdhaXRlckNhbGxEZXRhaWxzLmZpbmRPbmUoeyBqb2JfaWQ6IF9qb2JEZXRhaWwuam9iX2lkIH0pO1xuICAgICAgICAgIGlmICh3YWl0ZXJEZXRhaWwudHlwZSA9PT0gXCJDVVNUT01FUl9PUkRFUlwiICYmIHdhaXRlckRldGFpbC5vcmRlcl9pZCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IF9sT3JkZXI6IE9yZGVyID0gT3JkZXJzLmZpbmRPbmUoeyBfaWQ6IHdhaXRlckRldGFpbC5vcmRlcl9pZCB9KTtcbiAgICAgICAgICAgIGxldCBfbENvbnN1bWVyRGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF9sT3JkZXIuY3JlYXRpb25fdXNlciB9KTtcbiAgICAgICAgICAgIGlmIChfbE9yZGVyLnRvdGFsX3Jld2FyZF9wb2ludHMgPiAwKSB7XG4gICAgICAgICAgICAgIGxldCBfZXN0YWJsaXNobWVudDogRXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmZpbmRPbmUoeyBfaWQ6IF9sT3JkZXIuZXN0YWJsaXNobWVudF9pZCB9KTtcbiAgICAgICAgICAgICAgbGV0IF9sRXhwaXJlRGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIFJld2FyZFBvaW50cy5pbnNlcnQoe1xuICAgICAgICAgICAgICAgIGlkX3VzZXI6IF9sT3JkZXIuY3JlYXRpb25fdXNlcixcbiAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfbE9yZGVyLmVzdGFibGlzaG1lbnRfaWQsXG4gICAgICAgICAgICAgICAgcG9pbnRzOiBfbE9yZGVyLnRvdGFsX3Jld2FyZF9wb2ludHMsXG4gICAgICAgICAgICAgICAgZGF5c190b19leHBpcmU6IE51bWJlci5wYXJzZUludChfZXN0YWJsaXNobWVudC5wb2ludHNfdmFsaWRpdHkudG9TdHJpbmcoKSksXG4gICAgICAgICAgICAgICAgZ2Fpbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIGV4cGlyZV9kYXRlOiBuZXcgRGF0ZShfbEV4cGlyZURhdGUuc2V0RGF0ZShfbEV4cGlyZURhdGUuZ2V0RGF0ZSgpICsgTnVtYmVyLnBhcnNlSW50KF9lc3RhYmxpc2htZW50LnBvaW50c192YWxpZGl0eS50b1N0cmluZygpKSkpLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZVxuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICBpZiAoX2xDb25zdW1lckRldGFpbC5yZXdhcmRfcG9pbnRzID09PSBudWxsIHx8IF9sQ29uc3VtZXJEZXRhaWwucmV3YXJkX3BvaW50cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbGV0IF9sVXNlclJld2FyZDogVXNlclJld2FyZFBvaW50cyA9IHsgaW5kZXg6IDEsIGVzdGFibGlzaG1lbnRfaWQ6IF9sT3JkZXIuZXN0YWJsaXNobWVudF9pZCwgcG9pbnRzOiBfbE9yZGVyLnRvdGFsX3Jld2FyZF9wb2ludHMgfVxuICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2xDb25zdW1lckRldGFpbC5faWQgfSwgeyAkc2V0OiB7IHJld2FyZF9wb2ludHM6IFtfbFVzZXJSZXdhcmRdIH0gfSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IF9sUG9pbnRzOiBVc2VyUmV3YXJkUG9pbnRzID0gX2xDb25zdW1lckRldGFpbC5yZXdhcmRfcG9pbnRzLmZpbHRlcihwID0+IHAuZXN0YWJsaXNobWVudF9pZCA9PT0gX2xPcmRlci5lc3RhYmxpc2htZW50X2lkKVswXTtcbiAgICAgICAgICAgICAgICBpZiAoX2xQb2ludHMpIHtcbiAgICAgICAgICAgICAgICAgIGxldCBfbmV3UG9pbnRzOiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoX2xQb2ludHMucG9pbnRzLnRvU3RyaW5nKCkpICsgTnVtYmVyLnBhcnNlSW50KF9sT3JkZXIudG90YWxfcmV3YXJkX3BvaW50cy50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2xDb25zdW1lckRldGFpbC5faWQsICdyZXdhcmRfcG9pbnRzLmVzdGFibGlzaG1lbnRfaWQnOiBfbE9yZGVyLmVzdGFibGlzaG1lbnRfaWQgfSxcbiAgICAgICAgICAgICAgICAgICAgeyAkc2V0OiB7ICdyZXdhcmRfcG9pbnRzLiQucG9pbnRzJzogKF9uZXdQb2ludHMpIH0gfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGxldCBfbFVzZXJSZXdhcmRQb2ludHM6IFVzZXJSZXdhcmRQb2ludHNbXSA9IFtdO1xuICAgICAgICAgICAgICAgICAgbGV0IF9uZXdJbmRleDogbnVtYmVyO1xuICAgICAgICAgICAgICAgICAgX2xVc2VyUmV3YXJkUG9pbnRzID0gX2xDb25zdW1lckRldGFpbC5yZXdhcmRfcG9pbnRzO1xuICAgICAgICAgICAgICAgICAgX2xVc2VyUmV3YXJkUG9pbnRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGIuaW5kZXggLSBhLmluZGV4IH0pO1xuICAgICAgICAgICAgICAgICAgX25ld0luZGV4ID0gKF9sVXNlclJld2FyZFBvaW50c1swXS5pbmRleCkgKyAxO1xuXG4gICAgICAgICAgICAgICAgICBsZXQgX2xVc2VyUmV3YXJkOiBVc2VyUmV3YXJkUG9pbnRzID0geyBpbmRleDogX25ld0luZGV4LCBlc3RhYmxpc2htZW50X2lkOiBfbE9yZGVyLmVzdGFibGlzaG1lbnRfaWQsIHBvaW50czogX2xPcmRlci50b3RhbF9yZXdhcmRfcG9pbnRzIH1cbiAgICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2xDb25zdW1lckRldGFpbC5faWQgfSwgeyAkcHVzaDogeyByZXdhcmRfcG9pbnRzOiBfbFVzZXJSZXdhcmQgfSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX2xPcmRlci5pdGVtcy5mb3JFYWNoKChpdCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoaXQuaXNfcmV3YXJkKSB7XG4gICAgICAgICAgICAgICAgbGV0IF9sUmVkZWVtZWRQb2ludHM6IG51bWJlciA9IGl0LnJlZGVlbWVkX3BvaW50cztcbiAgICAgICAgICAgICAgICBsZXQgX2xWYWxpZGF0ZVBvaW50czogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgUmV3YXJkUG9pbnRzLmNvbGxlY3Rpb24uZmluZCh7IGlkX3VzZXI6IF9sT3JkZXIuY3JlYXRpb25fdXNlciwgZXN0YWJsaXNobWVudF9pZDogX2xPcmRlci5lc3RhYmxpc2htZW50X2lkIH0sIHsgc29ydDogeyBnYWluX2RhdGU6IC0xIH0gfSkuZmV0Y2goKS5mb3JFYWNoKChwbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgIGlmIChfbFZhbGlkYXRlUG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwbnQuZGlmZmVyZW5jZSAhPT0gbnVsbCAmJiBwbnQuZGlmZmVyZW5jZSAhPT0gdW5kZWZpbmVkICYmIHBudC5kaWZmZXJlbmNlICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbGV0IGF1eDogbnVtYmVyID0gcG50LnBvaW50cyAtIHBudC5kaWZmZXJlbmNlO1xuICAgICAgICAgICAgICAgICAgICAgIF9sUmVkZWVtZWRQb2ludHMgPSBfbFJlZGVlbWVkUG9pbnRzIC0gYXV4O1xuICAgICAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy51cGRhdGUoeyBfaWQ6IHBudC5faWQgfSwgeyAkc2V0OiB7IHBvaW50czogcG50LmRpZmZlcmVuY2UsIGRpZmZlcmVuY2U6IDAgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghcG50LmlzX2FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgIF9sUmVkZWVtZWRQb2ludHMgPSBfbFJlZGVlbWVkUG9pbnRzIC0gcG50LnBvaW50cztcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoX2xSZWRlZW1lZFBvaW50cyA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX2xWYWxpZGF0ZVBvaW50cyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgT3JkZXJzLnVwZGF0ZSh7IF9pZDogd2FpdGVyRGV0YWlsLm9yZGVyX2lkIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAkc2V0OiB7XG4gICAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuUkVDRUlWRUQnLFxuICAgICAgICAgICAgICAgICAgbW9kaWZpY2F0aW9uX3VzZXI6IF93YWl0ZXJfaWQsXG4gICAgICAgICAgICAgICAgICBtb2RpZmljYXRpb25fZGF0ZTogbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIE1ldGVvci5jYWxsKCdnZW5lcmF0ZU9yZGVySGlzdG9yeScsIF9sT3JkZXIsIHdhaXRlckRldGFpbC53YWl0ZXJfaWQpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxldCB1c3JfZGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF93YWl0ZXJfaWQgfSk7XG4gICAgICAgICAgaWYgKHVzcl9kZXRhaWwpIHtcbiAgICAgICAgICAgIGxldCBqb2JzID0gdXNyX2RldGFpbC5qb2JzIC0gMTtcbiAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogdXNyX2RldGFpbC5faWQgfSwgeyAkc2V0OiB7IFwiZW5hYmxlZFwiOiB0cnVlLCBcImpvYnNcIjogam9icyB9IH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9LFxuXG4gICAgY2FuY2VsT3JkZXJDYWxsOiBmdW5jdGlvbiAoX2pvYkRldGFpbDogV2FpdGVyQ2FsbERldGFpbCwgX3dhaXRlcl9pZDogc3RyaW5nKSB7XG4gICAgICBKb2IuZ2V0Sm9iKF9qb2JEZXRhaWwucXVldWUsIF9qb2JEZXRhaWwuam9iX2lkLCBmdW5jdGlvbiAoZXJyLCBqb2IpIHtcbiAgICAgICAgam9iLnJlbW92ZShmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICBXYWl0ZXJDYWxsRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9qb2JEZXRhaWwuX2lkIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICRzZXQ6IHsgXCJzdGF0dXNcIjogXCJjbG9zZWRcIiwgbW9kaWZpY2F0aW9uX3VzZXI6IF93YWl0ZXJfaWQsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgbGV0IHdhaXRlckRldGFpbCA9IFdhaXRlckNhbGxEZXRhaWxzLmZpbmRPbmUoeyBqb2JfaWQ6IF9qb2JEZXRhaWwuam9iX2lkIH0pO1xuICAgICAgICAgIGlmICh3YWl0ZXJEZXRhaWwudHlwZSA9PT0gXCJDVVNUT01FUl9PUkRFUlwiICYmIHdhaXRlckRldGFpbC5vcmRlcl9pZCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IF9sT3JkZXI6IE9yZGVyID0gT3JkZXJzLmZpbmRPbmUoeyBfaWQ6IHdhaXRlckRldGFpbC5vcmRlcl9pZCB9KTtcbiAgICAgICAgICAgIGlmIChfbE9yZGVyLnN0YXR1cyA9PT0gJ09SREVSX1NUQVRVUy5DT05GSVJNRUQnKSB7XG4gICAgICAgICAgICAgIF9sT3JkZXIuaXRlbXMuZm9yRWFjaCgoaXQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXQuaXNfcmV3YXJkKSB7XG4gICAgICAgICAgICAgICAgICBsZXQgX2xDb25zdW1lckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfbE9yZGVyLmNyZWF0aW9uX3VzZXIgfSk7XG4gICAgICAgICAgICAgICAgICBsZXQgX2xQb2ludHM6IFVzZXJSZXdhcmRQb2ludHMgPSBfbENvbnN1bWVyRGV0YWlsLnJld2FyZF9wb2ludHMuZmlsdGVyKHAgPT4gcC5lc3RhYmxpc2htZW50X2lkID09PSBfbE9yZGVyLmVzdGFibGlzaG1lbnRfaWQpWzBdO1xuXG4gICAgICAgICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9sQ29uc3VtZXJEZXRhaWwuX2lkLCAncmV3YXJkX3BvaW50cy5lc3RhYmxpc2htZW50X2lkJzogX2xPcmRlci5lc3RhYmxpc2htZW50X2lkIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgJHNldDogeyAncmV3YXJkX3BvaW50cy4kLnBvaW50cyc6IChOdW1iZXIucGFyc2VJbnQoX2xQb2ludHMucG9pbnRzLnRvU3RyaW5nKCkpICsgTnVtYmVyLnBhcnNlSW50KGl0LnJlZGVlbWVkX3BvaW50cy50b1N0cmluZygpKSkgfSB9KTtcblxuICAgICAgICAgICAgICAgICAgbGV0IF9sUmVkZWVtZWRQb2ludHM6IG51bWJlciA9IGl0LnJlZGVlbWVkX3BvaW50cztcbiAgICAgICAgICAgICAgICAgIGxldCBfbFZhbGlkYXRlUG9pbnRzOiBib29sZWFuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy5jb2xsZWN0aW9uLmZpbmQoeyBpZF91c2VyOiBfbE9yZGVyLmNyZWF0aW9uX3VzZXIsIGVzdGFibGlzaG1lbnRfaWQ6IF9sT3JkZXIuZXN0YWJsaXNobWVudF9pZCB9LCB7IHNvcnQ6IHsgZ2Fpbl9kYXRlOiAtMSB9IH0pLmZldGNoKCkuZm9yRWFjaCgocG50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfbFZhbGlkYXRlUG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKHBudC5kaWZmZXJlbmNlICE9PSBudWxsICYmIHBudC5kaWZmZXJlbmNlICE9PSB1bmRlZmluZWQgJiYgcG50LmRpZmZlcmVuY2UgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhdXg6IG51bWJlciA9IHBudC5wb2ludHMgLSBwbnQuZGlmZmVyZW5jZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9sUmVkZWVtZWRQb2ludHMgPSBfbFJlZGVlbWVkUG9pbnRzIC0gYXV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgUmV3YXJkUG9pbnRzLnVwZGF0ZSh7IF9pZDogcG50Ll9pZCB9LCB7ICRzZXQ6IHsgZGlmZmVyZW5jZTogMCB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIXBudC5pc19hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9sUmVkZWVtZWRQb2ludHMgPSBfbFJlZGVlbWVkUG9pbnRzIC0gcG50LnBvaW50cztcbiAgICAgICAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy51cGRhdGUoeyBfaWQ6IHBudC5faWQgfSwgeyAkc2V0OiB7IGlzX2FjdGl2ZTogdHJ1ZSB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9sUmVkZWVtZWRQb2ludHMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2xWYWxpZGF0ZVBvaW50cyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICBPcmRlcnMudXBkYXRlKHsgX2lkOiBfbE9yZGVyLl9pZCB9LCB7XG4gICAgICAgICAgICAgICAgJHNldDoge1xuICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnT1JERVJfU1RBVFVTLkNBTkNFTEVEJywgbW9kaWZpY2F0aW9uX3VzZXI6IF9qb2JEZXRhaWwud2FpdGVyX2lkLFxuICAgICAgICAgICAgICAgICAgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsZXQgdXNyX2RldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfd2FpdGVyX2lkIH0pO1xuICAgICAgICAgIGlmICh1c3JfZGV0YWlsKSB7XG4gICAgICAgICAgICBsZXQgam9icyA9IHVzcl9kZXRhaWwuam9icyAtIDE7XG4gICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyBfaWQ6IHVzcl9kZXRhaWwuX2lkIH0sIHsgJHNldDogeyBcImVuYWJsZWRcIjogdHJ1ZSwgXCJqb2JzXCI6IGpvYnMgfSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfSxcblxuICAgIGNsb3NlV2FpdGVyQ2FsbDogZnVuY3Rpb24gKF9qb2JEZXRhaWw6IFdhaXRlckNhbGxEZXRhaWwpIHtcbiAgICAgIEpvYi5nZXRKb2IoX2pvYkRldGFpbC5xdWV1ZSwgX2pvYkRldGFpbC5qb2JfaWQsIGZ1bmN0aW9uIChlcnIsIGpvYikge1xuICAgICAgICBqb2IucmVtb3ZlKGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgIFdhaXRlckNhbGxEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2pvYkRldGFpbC5faWQgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgJHNldDogeyBcInN0YXR1c1wiOiBcImNsb3NlZFwiLCBtb2RpZmljYXRpb25fdXNlcjogX2pvYkRldGFpbC53YWl0ZXJfaWQsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgbGV0IHVzcl9kZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX2pvYkRldGFpbC53YWl0ZXJfaWQgfSk7XG4gICAgICAgICAgaWYgKHVzcl9kZXRhaWwpIHtcbiAgICAgICAgICAgIGxldCBqb2JzID0gdXNyX2RldGFpbC5qb2JzIC0gMTtcbiAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogdXNyX2RldGFpbC5faWQgfSwgeyAkc2V0OiB7IFwiZW5hYmxlZFwiOiB0cnVlLCBcImpvYnNcIjogam9icyB9IH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRlb3IgbWV0aG9kIGFsbG93IGNhbmNlbCBjYWxsIHRvIHdhaXRlciBieSB0aGUgdXNlclxuICAgICAqIEBwYXJhbSB7V2FpdGVyQ2FsbERldGFpbH0gX2pvYkRldGFpbFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gICAgICovXG4gICAgY2FuY2VsQ2FsbENsaWVudDogZnVuY3Rpb24gKF9qb2JEZXRhaWw6IFdhaXRlckNhbGxEZXRhaWwsIF91c2VySWQ6IHN0cmluZykge1xuICAgICAgSm9iLmdldEpvYihfam9iRGV0YWlsLnF1ZXVlLCBfam9iRGV0YWlsLmpvYl9pZCwgZnVuY3Rpb24gKGVyciwgam9iKSB7XG4gICAgICAgIGlmIChqb2IuX2RvYy5zdGF0dXMgIT09ICdjb21wbGV0ZWQnKSB7XG4gICAgICAgICAgam9iLmNhbmNlbCgpO1xuICAgICAgICB9XG4gICAgICAgIGpvYi5yZW1vdmUoZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgV2FpdGVyQ2FsbERldGFpbHMudXBkYXRlKHsgam9iX2lkOiBfam9iRGV0YWlsLmpvYl9pZCB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAkc2V0OiB7IFwic3RhdHVzXCI6IFwiY2FuY2VsXCIsIG1vZGlmaWNhdGlvbl91c2VyOiBfdXNlcklkLCBtb2RpZmljYXRpb25fZGF0ZTogbmV3IERhdGUoKSB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgIGxldCB3YWl0ZXJEZXRhaWwgPSBXYWl0ZXJDYWxsRGV0YWlscy5maW5kT25lKHsgam9iX2lkOiBfam9iRGV0YWlsLmpvYl9pZCB9KTtcbiAgICAgICAgICBpZiAod2FpdGVyRGV0YWlsLnR5cGUgPT09IFwiQ0FMTF9PRl9DVVNUT01FUlwiICYmIHdhaXRlckRldGFpbC53YWl0ZXJfaWQpIHtcbiAgICAgICAgICAgIGxldCB1c3JfZGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IHdhaXRlckRldGFpbC53YWl0ZXJfaWQgfSk7XG4gICAgICAgICAgICBpZiAodXNyX2RldGFpbCkge1xuICAgICAgICAgICAgICBsZXQgam9icyA9IHVzcl9kZXRhaWwuam9icyAtIDE7XG4gICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IHVzZXJfaWQ6IHdhaXRlckRldGFpbC53YWl0ZXJfaWQgfSwgeyAkc2V0OiB7IFwiZW5hYmxlZFwiOiB0cnVlLCBcImpvYnNcIjogam9icyB9IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVGhpcyBmdW5jdGlvbiB2YWxpZGF0ZSB3YWl0ZXJzIGVuYWJsZWRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gX21heEpvYnNcbiAgICAgKi9cbiAgICB2YWxpZGF0ZVdhaXRlckVuYWJsZWQoX2VzdGFibGlzaG1lbnQ6IHN0cmluZywgX21heEpvYnM6IHN0cmluZywgX3RhYmxlSWQ6IHN0cmluZyk6IFVzZXJEZXRhaWwge1xuICAgICAgbGV0IHVzcjogVXNlckRldGFpbCA9IG51bGw7XG4gICAgICBsZXQgcG9zaXRpb246IG51bWJlciA9IDA7XG4gICAgICBsZXQgX3JhbmRvbUxhc3Q6IHN0cmluZztcblxuICAgICAgbGV0IHRhYmxlID0gVGFibGVzLmZpbmRPbmUoeyBfaWQ6IF90YWJsZUlkIH0pO1xuICAgICAgbGV0IHdhaXRlckVuYWJsZWRzOiBVc2VyRGV0YWlsW10gPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmQoe1xuICAgICAgICBlc3RhYmxpc2htZW50X3dvcms6IF9lc3RhYmxpc2htZW50LFxuICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIHJvbGVfaWQ6IFwiMjAwXCIsXG4gICAgICAgIGpvYnM6IHsgJGx0OiBfbWF4Sm9icyB9LFxuICAgICAgICB0YWJsZV9hc3NpZ25tZW50X2luaXQ6IHsgJGx0ZTogdGFibGUuX251bWJlciB9LFxuICAgICAgICB0YWJsZV9hc3NpZ25tZW50X2VuZDogeyAkZ3RlOiB0YWJsZS5fbnVtYmVyIH1cbiAgICAgIH0pLmZldGNoKCk7XG5cbiAgICAgIGlmICh3YWl0ZXJFbmFibGVkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxldCBlc3RhYmxpc2htZW50VHVybiA9IEVzdGFibGlzaG1lbnRUdXJucy5maW5kT25lKHsgXCJlc3RhYmxpc2htZW50X2lkXCI6IF9lc3RhYmxpc2htZW50IH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc29ydDogeyBcImNyZWF0aW9uX2RhdGVcIjogLTEgfVxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgaWYgKGVzdGFibGlzaG1lbnRUdXJuKSB7XG4gICAgICAgICAgX3JhbmRvbUxhc3QgPSBlc3RhYmxpc2htZW50VHVybi5sYXN0X3dhaXRlcl9pZDtcbiAgICAgICAgfVxuICAgICAgICBkbyB7XG4gICAgICAgICAgaWYgKHdhaXRlckVuYWJsZWRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gTWV0ZW9yLmNhbGwoJ2dldFJhbmRvbUludCcsIDAsIHdhaXRlckVuYWJsZWRzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB1c3IgPSB3YWl0ZXJFbmFibGVkc1twb3NpdGlvbl07XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKHVzci51c2VyX2lkID09IF9yYW5kb21MYXN0ICYmIHdhaXRlckVuYWJsZWRzLmxlbmd0aCA+IDEpO1xuICAgICAgICByZXR1cm4gdXNyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICogVGhpcyBmdW5jdGlvbiByZXR1cm4gYSByYW5kb20gbnVtYmVyXG4gICAgKi9cbiAgICBnZXRSYW5kb21JbnQobWluLCBtYXgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47XG4gICAgfVxuICB9KTtcbn1cbiIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgQ29kZUdlbmVyYXRvciB9IGZyb20gJy4vUVIvY29kZUdlbmVyYXRvcic7XG5pbXBvcnQgeyBUYWJsZSB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3RhYmxlLm1vZGVsJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvdGFibGUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyUmV3YXJkUG9pbnRzIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBPcmRlciB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L29yZGVyLm1vZGVsJztcbmltcG9ydCB7IE9yZGVycyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvb3JkZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBXYWl0ZXJDYWxsRGV0YWlsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvd2FpdGVyLWNhbGwtZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IFdhaXRlckNhbGxEZXRhaWxzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC93YWl0ZXItY2FsbC1kZXRhaWwuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgUGFyYW1ldGVycyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2dlbmVyYWwvcGFyYW1ldGVyLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUGFyYW1ldGVyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2dlbmVyYWwvcGFyYW1ldGVyLm1vZGVsJztcbmltcG9ydCB7IFVzZXJQZW5hbHR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1wZW5hbHR5Lm1vZGVsJztcbmltcG9ydCB7IFVzZXJQZW5hbHRpZXMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItcGVuYWx0eS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50LmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gY3JlYXRlIHJhbmRvbSBjb2RlIHdpdGggOSBsZW5ndGggdG8gZXN0YWJsaXNobWVudHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVzdGFibGlzaG1lbnRDb2RlKCk6IHN0cmluZyB7XG4gICAgbGV0IF9sVGV4dCA9ICcnO1xuICAgIGxldCBfbFBvc3NpYmxlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJztcblxuICAgIGZvciAobGV0IF9pID0gMDsgX2kgPCA5OyBfaSsrKSB7XG4gICAgICAgIF9sVGV4dCArPSBfbFBvc3NpYmxlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBfbFBvc3NpYmxlLmxlbmd0aCkpO1xuICAgIH1cbiAgICByZXR1cm4gX2xUZXh0O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gY3JlYXRlIHJhbmRvbSBjb2RlIHdpdGggNSBsZW5ndGggdG8gZXN0YWJsaXNobWVudHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRhYmxlQ29kZSgpOiBzdHJpbmcge1xuICAgIGxldCBfbFRleHQgPSAnJztcbiAgICBsZXQgX2xQb3NzaWJsZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWic7XG5cbiAgICBmb3IgKGxldCBfaSA9IDA7IF9pIDwgNTsgX2krKykge1xuICAgICAgICBfbFRleHQgKz0gX2xQb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogX2xQb3NzaWJsZS5sZW5ndGgpKTtcbiAgICB9XG4gICAgcmV0dXJuIF9sVGV4dDtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGNyZWF0ZSBRUiBDb2RlcyB0byBlc3RhYmxpc2htZW50c1xuICogQHBhcmFtIHtzdHJpbmd9IF9wU3RyaW5nVG9Db2RlXG4gKiBAcmV0dXJuIHtUYWJsZX0gZ2VuZXJhdGVRUkNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUVJDb2RlKF9wU3RyaW5nVG9Db2RlOiBzdHJpbmcpOiBhbnkge1xuICAgIGxldCBfbENvZGVHZW5lcmF0b3IgPSBuZXcgQ29kZUdlbmVyYXRvcihfcFN0cmluZ1RvQ29kZSk7XG4gICAgX2xDb2RlR2VuZXJhdG9yLmdlbmVyYXRlQ29kZSgpO1xuICAgIHJldHVybiBfbENvZGVHZW5lcmF0b3I7XG59XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIE1ldGVvciBNZXRob2QgcmV0dXJuIGVzdGFibGlzaG1lbnQgb2JqZWN0IHdpdGggUVIgQ29kZSBjb25kaXRpb25cbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF9xcmNvZGVcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAgICAgICAgICovXG4gICAgICAgIGdldEVzdGFibGlzaG1lbnRCeVFSQ29kZTogZnVuY3Rpb24gKF9xcmNvZGU6IHN0cmluZywgX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgICAgICAgICBsZXQgX3RhYmxlOiBUYWJsZSA9IFRhYmxlcy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBRUl9jb2RlOiBfcXJjb2RlIH0pO1xuICAgICAgICAgICAgbGV0IF9lc3RhYmxpc2htZW50OiBFc3RhYmxpc2htZW50O1xuICAgICAgICAgICAgbGV0IF9sVXNlckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuXG4gICAgICAgICAgICBpZiAoX2xVc2VyRGV0YWlsLnBlbmFsdGllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xVc2VyUGVuYWx0eTogVXNlclBlbmFsdHkgPSBVc2VyUGVuYWx0aWVzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkLCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgICAgICAgICAgICAgaWYgKF9sVXNlclBlbmFsdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IF9sVXNlclBlbmFsdHlEYXlzOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmZpbmRPbmUoeyBuYW1lOiAncGVuYWx0eV9kYXlzJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IF9sQ3VycmVudERhdGU6IERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgX2xEYXRlVG9Db21wYXJlOiBEYXRlID0gbmV3IERhdGUoX2xVc2VyUGVuYWx0eS5sYXN0X2RhdGUuc2V0RGF0ZSgoX2xVc2VyUGVuYWx0eS5sYXN0X2RhdGUuZ2V0RGF0ZSgpICsgTnVtYmVyKF9sVXNlclBlbmFsdHlEYXlzLnZhbHVlKSkpKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9sRGF0ZVRvQ29tcGFyZS5nZXRUaW1lKCkgPj0gX2xDdXJyZW50RGF0ZS5nZXRUaW1lKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfbERheTogbnVtYmVyID0gX2xEYXRlVG9Db21wYXJlLmdldERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfbE1vbnRoOiBudW1iZXIgPSBfbERhdGVUb0NvbXBhcmUuZ2V0TW9udGgoKSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2xZZWFyOiBudW1iZXIgPSBfbERhdGVUb0NvbXBhcmUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzUwMCcsIF9sRGF5ICsgJy8nICsgX2xNb250aCArICcvJyArIF9sWWVhcik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyUGVuYWx0aWVzLnVwZGF0ZSh7IF9pZDogX2xVc2VyUGVuYWx0eS5faWQgfSwgeyAkc2V0OiB7IGlzX2FjdGl2ZTogZmFsc2UgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKF90YWJsZSkge1xuICAgICAgICAgICAgICAgIF9lc3RhYmxpc2htZW50ID0gRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfdGFibGUuZXN0YWJsaXNobWVudF9pZCB9KTtcbiAgICAgICAgICAgICAgICBpZiAoX2VzdGFibGlzaG1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9lc3RhYmxpc2htZW50LmlzQWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RhYmxlLnN0YXR1cyA9PT0gJ0JVU1knKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVXNlckRldGFpbHMuY29sbGVjdGlvbi51cGRhdGUoeyB1c2VyX2lkOiBfdXNlcklkIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50X3RhYmxlOiBfdGFibGUuX2lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfZXN0YWJsaXNobWVudDogX3RhYmxlLmVzdGFibGlzaG1lbnRfaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVzLmNvbGxlY3Rpb24udXBkYXRlKHsgUVJfY29kZTogX3FyY29kZSB9LCB7ICRzZXQ6IHsgYW1vdW50X3Blb3BsZTogKF90YWJsZS5hbW91bnRfcGVvcGxlICsgMSkgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RhYmxlLnN0YXR1cyA9PT0gJ0ZSRUUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVzLmNvbGxlY3Rpb24udXBkYXRlKHsgUVJfY29kZTogX3FyY29kZSB9LCB7ICRzZXQ6IHsgc3RhdHVzOiAnQlVTWScsIGFtb3VudF9wZW9wbGU6IDEgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLnVwZGF0ZSh7IHVzZXJfaWQ6IF91c2VySWQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfdGFibGU6IF90YWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudF9lc3RhYmxpc2htZW50OiBfdGFibGUuZXN0YWJsaXNobWVudF9pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfZXN0YWJsaXNobWVudDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzIwMCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1ldGVvci5FcnJvcignMzAwJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTWV0ZW9yLkVycm9yKCc0MDAnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBtZXRob2QgcmV0dXJuIGVzdGFibGlzaG1lbnQgaWYgZXhpc3QgbyBudWxsIGlmIG5vdFxuICAgICAgICAgKi9cblxuICAgICAgICBnZXRDdXJyZW50RXN0YWJsaXNobWVudEJ5VXNlcjogZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgICAgICAgICAgbGV0IGVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IF9lc3RhYmxpc2htZW50SWQgfSk7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZXN0YWJsaXNobWVudCAhPSBcInVuZGVmaW5lZFwiIHx8IGVzdGFibGlzaG1lbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlc3RhYmxpc2htZW50O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICB2YWxpZGF0ZUVzdGFibGlzaG1lbnRJc0FjdGl2ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmRPbmUoeyB1c2VyX2lkOiB0aGlzLnVzZXJJZCB9KTtcbiAgICAgICAgICAgIGlmICh1c2VyRGV0YWlsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IHVzZXJEZXRhaWwuZXN0YWJsaXNobWVudF93b3JrIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBlc3RhYmxpc2htZW50LmlzQWN0aXZlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZXN0YWJsaXNobWVudEV4aXQ6IGZ1bmN0aW9uIChfcFVzZXJJZDogc3RyaW5nLCBfcEN1cnJlbnRFc3RhYmxpc2htZW50OiBzdHJpbmcsIF9wQ3VycmVudFRhYmxlOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3BVc2VySWQgfSk7XG4gICAgICAgICAgICBsZXQgX2xUYWJsZUFtb3VudFBlb3BsZTogbnVtYmVyID0gVGFibGVzLmZpbmRPbmUoeyBfaWQ6IF9wQ3VycmVudFRhYmxlIH0pLmFtb3VudF9wZW9wbGU7XG4gICAgICAgICAgICBsZXQgX3RhYmxlc1VwZGF0ZWQ6IG51bWJlciA9IFRhYmxlcy5jb2xsZWN0aW9uLnVwZGF0ZSh7IF9pZDogX3BDdXJyZW50VGFibGUgfSwgeyAkc2V0OiB7IGFtb3VudF9wZW9wbGU6IF9sVGFibGVBbW91bnRQZW9wbGUgLSAxIH0gfSk7XG5cbiAgICAgICAgICAgIGlmIChfdGFibGVzVXBkYXRlZCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGxldCBfbFRhYmxlQXV4OiBUYWJsZSA9IFRhYmxlcy5maW5kT25lKHsgX2lkOiBfcEN1cnJlbnRUYWJsZSB9KTtcbiAgICAgICAgICAgICAgICBpZiAoX2xUYWJsZUF1eC5hbW91bnRfcGVvcGxlID09PSAwICYmIF9sVGFibGVBdXguc3RhdHVzID09PSAnQlVTWScpIHtcbiAgICAgICAgICAgICAgICAgICAgVGFibGVzLnVwZGF0ZSh7IF9pZDogX3BDdXJyZW50VGFibGUgfSwgeyAkc2V0OiB7IHN0YXR1czogJ0ZSRUUnIH0gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgX3VzZXJzVXBkYXRlZDogbnVtYmVyID0gVXNlckRldGFpbHMuY29sbGVjdGlvbi51cGRhdGUoeyBfaWQ6IF9sVXNlckRldGFpbC5faWQgfSwgeyAkc2V0OiB7IGN1cnJlbnRfZXN0YWJsaXNobWVudDogJycsIGN1cnJlbnRfdGFibGU6ICcnIH0gfSk7XG4gICAgICAgICAgICBpZiAoX3VzZXJzVXBkYXRlZCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzMwMCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG5cbiAgICAgICAgZXN0YWJsaXNobWVudEV4aXRXaXRoU2VsZWN0ZWRPcmRlcnM6IGZ1bmN0aW9uIChfcFVzZXJJZDogc3RyaW5nLCBfcEN1cnJlbnRFc3RhYmxpc2htZW50OiBzdHJpbmcsIF9wQ3VycmVudFRhYmxlOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3BVc2VySWQgfSk7XG5cbiAgICAgICAgICAgIE9yZGVycy5maW5kKHtcbiAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBfcFVzZXJJZCwgZXN0YWJsaXNobWVudF9pZDogX3BDdXJyZW50RXN0YWJsaXNobWVudCwgdGFibGVJZDogX3BDdXJyZW50VGFibGUsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnT1JERVJfU1RBVFVTLlNFTEVDVElORydcbiAgICAgICAgICAgIH0pLmZldGNoKCkuZm9yRWFjaCgob3JkZXIpID0+IHtcbiAgICAgICAgICAgICAgICBvcmRlci5pdGVtcy5mb3JFYWNoKChpdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXQuaXNfcmV3YXJkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2xDb25zdW1lckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBvcmRlci5jcmVhdGlvbl91c2VyIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IF9sUG9pbnRzOiBVc2VyUmV3YXJkUG9pbnRzID0gX2xDb25zdW1lckRldGFpbC5yZXdhcmRfcG9pbnRzLmZpbHRlcihwID0+IHAuZXN0YWJsaXNobWVudF9pZCA9PT0gb3JkZXIuZXN0YWJsaXNobWVudF9pZClbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2xOZXdQb2ludHM6IG51bWJlciA9IE51bWJlci5wYXJzZUludChfbFBvaW50cy5wb2ludHMudG9TdHJpbmcoKSkgKyBOdW1iZXIucGFyc2VJbnQoaXQucmVkZWVtZWRfcG9pbnRzLnRvU3RyaW5nKCkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9sQ29uc3VtZXJEZXRhaWwuX2lkIH0sIHsgJHB1bGw6IHsgcmV3YXJkX3BvaW50czogeyBlc3RhYmxpc2htZW50X2lkOiBvcmRlci5lc3RhYmxpc2htZW50X2lkIH0gfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2xDb25zdW1lckRldGFpbC5faWQgfSwgeyAkcHVzaDogeyByZXdhcmRfcG9pbnRzOiB7IGluZGV4OiBfbFBvaW50cy5pbmRleCwgZXN0YWJsaXNobWVudF9pZDogb3JkZXIuZXN0YWJsaXNobWVudF9pZCwgcG9pbnRzOiBfbE5ld1BvaW50cyB9IH0gfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfbFJlZGVlbWVkUG9pbnRzOiBudW1iZXIgPSBpdC5yZWRlZW1lZF9wb2ludHM7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2xWYWxpZGF0ZVBvaW50czogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBSZXdhcmRQb2ludHMuY29sbGVjdGlvbi5maW5kKHsgaWRfdXNlcjogTWV0ZW9yLnVzZXJJZCgpLCBlc3RhYmxpc2htZW50X2lkOiBvcmRlci5lc3RhYmxpc2htZW50X2lkIH0sIHsgc29ydDogeyBnYWluX2RhdGU6IC0xIH0gfSkuZmV0Y2goKS5mb3JFYWNoKChwbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX2xWYWxpZGF0ZVBvaW50cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocG50LmRpZmZlcmVuY2UgIT09IG51bGwgJiYgcG50LmRpZmZlcmVuY2UgIT09IHVuZGVmaW5lZCAmJiBwbnQuZGlmZmVyZW5jZSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGF1eDogbnVtYmVyID0gcG50LnBvaW50cyAtIHBudC5kaWZmZXJlbmNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2xSZWRlZW1lZFBvaW50cyA9IF9sUmVkZWVtZWRQb2ludHMgLSBhdXg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXdhcmRQb2ludHMudXBkYXRlKHsgX2lkOiBwbnQuX2lkIH0sIHsgJHNldDogeyBkaWZmZXJlbmNlOiAwIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIXBudC5pc19hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9sUmVkZWVtZWRQb2ludHMgPSBfbFJlZGVlbWVkUG9pbnRzIC0gcG50LnBvaW50cztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy51cGRhdGUoeyBfaWQ6IHBudC5faWQgfSwgeyAkc2V0OiB7IGlzX2FjdGl2ZTogdHJ1ZSB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9sUmVkZWVtZWRQb2ludHMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbFZhbGlkYXRlUG9pbnRzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIE9yZGVycy51cGRhdGUoeyBfaWQ6IG9yZGVyLl9pZCB9LCB7ICRzZXQ6IHsgc3RhdHVzOiAnT1JERVJfU1RBVFVTLkNBTkNFTEVEJywgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCkgfSB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBsZXQgX2xUYWJsZUFtb3VudFBlb3BsZTogbnVtYmVyID0gVGFibGVzLmZpbmRPbmUoeyBfaWQ6IF9wQ3VycmVudFRhYmxlIH0pLmFtb3VudF9wZW9wbGU7XG4gICAgICAgICAgICBsZXQgX3RhYmxlc1VwZGF0ZWQ6IG51bWJlciA9IFRhYmxlcy5jb2xsZWN0aW9uLnVwZGF0ZSh7IF9pZDogX3BDdXJyZW50VGFibGUgfSwgeyAkc2V0OiB7IGFtb3VudF9wZW9wbGU6IF9sVGFibGVBbW91bnRQZW9wbGUgLSAxIH0gfSk7XG4gICAgICAgICAgICBpZiAoX3RhYmxlc1VwZGF0ZWQgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xUYWJsZUF1eDogVGFibGUgPSBUYWJsZXMuZmluZE9uZSh7IF9pZDogX3BDdXJyZW50VGFibGUgfSk7XG4gICAgICAgICAgICAgICAgaWYgKF9sVGFibGVBdXguYW1vdW50X3Blb3BsZSA9PT0gMCAmJiBfbFRhYmxlQXV4LnN0YXR1cyA9PT0gJ0JVU1knKSB7XG4gICAgICAgICAgICAgICAgICAgIFRhYmxlcy51cGRhdGUoeyBfaWQ6IF9wQ3VycmVudFRhYmxlIH0sIHsgJHNldDogeyBzdGF0dXM6ICdGUkVFJyB9IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBfdXNlcnNVcGRhdGVkOiBudW1iZXIgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLnVwZGF0ZSh7IF9pZDogX2xVc2VyRGV0YWlsLl9pZCB9LCB7ICRzZXQ6IHsgY3VycmVudF9lc3RhYmxpc2htZW50OiAnJywgY3VycmVudF90YWJsZTogJycgfSB9KTtcbiAgICAgICAgICAgIGlmIChfdXNlcnNVcGRhdGVkID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1ldGVvci5FcnJvcignMzAwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbiIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgT3JkZXJIaXN0b3J5LCBPcmRlckhpc3RvcnlJdGVtLCBPcmRlckhpc3RvcnlBZGRpdGlvbiB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkubW9kZWwnO1xuaW1wb3J0IHsgT3JkZXJIaXN0b3JpZXMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvdGFibGUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBPcmRlciB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L29yZGVyLm1vZGVsJztcbmltcG9ydCB7IE9yZGVycyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvb3JkZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBJdGVtcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL21lbnUvaXRlbS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IE9wdGlvblZhbHVlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL21lbnUvb3B0aW9uLXZhbHVlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQWRkaXRpb25zIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvbWVudS9hZGRpdGlvbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEN1cnJlbmNpZXMgfSBmcm9tIFwiLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9jdXJyZW5jeS5jb2xsZWN0aW9uXCI7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIGFsbG93IGdlbmVyYXRlIG9yZGVyIGhpc3RvcnlcbiAgICAgICAgICogQHBhcmFtIHsgT3JkZXIgfSBfcE9yZGVyXG4gICAgICAgICAqL1xuICAgICAgICBnZW5lcmF0ZU9yZGVySGlzdG9yeTogZnVuY3Rpb24gKF9wT3JkZXI6IE9yZGVyLCBfcFdhaXRlcklkOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGxldCBsRXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmZpbmRPbmUoeyBfaWQ6IF9wT3JkZXIuZXN0YWJsaXNobWVudF9pZCB9KTtcbiAgICAgICAgICAgIGxldCBsVGFibGUgPSBUYWJsZXMuZmluZE9uZSh7IF9pZDogX3BPcmRlci50YWJsZUlkIH0pO1xuICAgICAgICAgICAgbGV0IGxDdXJyZW5jeSA9IEN1cnJlbmNpZXMuZmluZE9uZSh7IF9pZDogbEVzdGFibGlzaG1lbnQuY3VycmVuY3lJZCB9KTtcblxuICAgICAgICAgICAgbGV0IGxJbnZvaWNlSXRlbXM6IE9yZGVySGlzdG9yeUl0ZW1bXSA9IFtdO1xuICAgICAgICAgICAgbGV0IGxJbnZvaWNlQWRkaXRpb25zOiBPcmRlckhpc3RvcnlBZGRpdGlvbltdID0gW107XG5cbiAgICAgICAgICAgIF9wT3JkZXIuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBsSXRlbSA9IEl0ZW1zLmZpbmRPbmUoeyBfaWQ6IGl0ZW0uaXRlbUlkIH0pO1xuICAgICAgICAgICAgICAgIGxldCBsT3B0aW9uczogYW55W10gPSBbXTtcbiAgICAgICAgICAgICAgICBsZXQgbEFkZGl0aW9uczogYW55W10gPSBbXTtcblxuICAgICAgICAgICAgICAgIGlmIChpdGVtLm9wdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLm9wdGlvbnMuZm9yRWFjaCgob3B0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2l0ZW1PcHRpb24gPSBsSXRlbS5vcHRpb25zLmZpbmQoaXRlbV9vcHQgPT4gaXRlbV9vcHQub3B0aW9uX2lkID09PSBvcHQub3B0aW9uX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfaXRlbU9wdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfaXRlbVZhbHVlID0gX2l0ZW1PcHRpb24udmFsdWVzLmZpbmQoaXRlbV92YWwgPT4gaXRlbV92YWwub3B0aW9uX3ZhbHVlX2lkID09PSBvcHQudmFsdWVfaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfaXRlbVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfb3B0aW9uX3ZhbHVlID0gT3B0aW9uVmFsdWVzLmZpbmRPbmUoeyBfaWQ6IG9wdC52YWx1ZV9pZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9pdGVtVmFsdWUuaGF2ZV9wcmljZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbE9wdGlvbnMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uX3ZhbHVlX25hbWU6IF9vcHRpb25fdmFsdWUubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZTogX2l0ZW1WYWx1ZS5wcmljZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsT3B0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25fdmFsdWVfbmFtZTogX29wdGlvbl92YWx1ZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5hZGRpdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmFkZGl0aW9ucy5mb3JFYWNoKChhZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhZCA9IEFkZGl0aW9ucy5maW5kT25lKHsgX2lkOiBhZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxBZGRpdGlvbnMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25fbmFtZTogbGFkLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2U6IGxhZC5lc3RhYmxpc2htZW50cy5maWx0ZXIoYSA9PiBhLmVzdGFibGlzaG1lbnRfaWQgPT09IF9wT3JkZXIuZXN0YWJsaXNobWVudF9pZClbMF0ucHJpY2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGxJbnZvaWNlSXRlbTogT3JkZXJIaXN0b3J5SXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5pc19yZXdhcmQpIHtcbiAgICAgICAgICAgICAgICAgICAgbEludm9pY2VJdGVtID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbV9uYW1lOiBsSXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGl0ZW0ucXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25fdmFsdWVzOiBsT3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uczogbEFkZGl0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlOiBsSXRlbS5lc3RhYmxpc2htZW50cy5maWx0ZXIoaSA9PiBpLmVzdGFibGlzaG1lbnRfaWQgPT09IF9wT3JkZXIuZXN0YWJsaXNobWVudF9pZClbMF0ucHJpY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc19yZXdhcmQ6IGl0ZW0uaXNfcmV3YXJkLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVkZWVtZWRfcG9pbnRzOiBpdGVtLnJlZGVlbWVkX3BvaW50c1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbEludm9pY2VJdGVtID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbV9uYW1lOiBsSXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGl0ZW0ucXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25fdmFsdWVzOiBsT3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uczogbEFkZGl0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlOiBsSXRlbS5lc3RhYmxpc2htZW50cy5maWx0ZXIoaSA9PiBpLmVzdGFibGlzaG1lbnRfaWQgPT09IF9wT3JkZXIuZXN0YWJsaXNobWVudF9pZClbMF0ucHJpY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc19yZXdhcmQ6IGl0ZW0uaXNfcmV3YXJkXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbEludm9pY2VJdGVtcy5wdXNoKGxJbnZvaWNlSXRlbSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgX3BPcmRlci5hZGRpdGlvbnMuZm9yRWFjaCgoYWRkaXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbEFkZGl0aW9uID0gQWRkaXRpb25zLmZpbmRPbmUoeyBfaWQ6IGFkZGl0aW9uLmFkZGl0aW9uSWQgfSk7XG4gICAgICAgICAgICAgICAgbGV0IGxBZGRBZGRpdGlvbjogT3JkZXJIaXN0b3J5QWRkaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uX25hbWU6IGxBZGRpdGlvbi5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBxdWFudGl0eTogYWRkaXRpb24ucXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgIHByaWNlOiBsQWRkaXRpb24uZXN0YWJsaXNobWVudHMuZmlsdGVyKGEgPT4gYS5lc3RhYmxpc2htZW50X2lkID09PSBfcE9yZGVyLmVzdGFibGlzaG1lbnRfaWQpWzBdLnByaWNlLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsSW52b2ljZUFkZGl0aW9ucy5wdXNoKGxBZGRBZGRpdGlvbik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKF9wT3JkZXIudG90YWxfcmV3YXJkX3BvaW50cykge1xuICAgICAgICAgICAgICAgIE9yZGVySGlzdG9yaWVzLmluc2VydCh7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX3BPcmRlci5lc3RhYmxpc2htZW50X2lkLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X25hbWU6IGxFc3RhYmxpc2htZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfYWRkcmVzczogbEVzdGFibGlzaG1lbnQuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9waG9uZTogbEVzdGFibGlzaG1lbnQucGhvbmUsXG4gICAgICAgICAgICAgICAgICAgIGNvdW50cnlfaWQ6IGxFc3RhYmxpc2htZW50LmNvdW50cnlJZCxcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJfY29kZTogX3BPcmRlci5jb2RlLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZV9udW1iZXI6IGxUYWJsZS5fbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbF9vcmRlcjogX3BPcmRlci50b3RhbFBheW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbWVyX2lkOiBfcE9yZGVyLmNyZWF0aW9uX3VzZXIsXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5OiBsQ3VycmVuY3kuY29kZSxcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IGxJbnZvaWNlSXRlbXMsXG4gICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uczogbEludm9pY2VBZGRpdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsX3Jld2FyZF9wb2ludHM6IF9wT3JkZXIudG90YWxfcmV3YXJkX3BvaW50c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBPcmRlckhpc3Rvcmllcy5pbnNlcnQoe1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBfcFdhaXRlcklkLFxuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfcE9yZGVyLmVzdGFibGlzaG1lbnRfaWQsXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfbmFtZTogbEVzdGFibGlzaG1lbnQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9hZGRyZXNzOiBsRXN0YWJsaXNobWVudC5hZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X3Bob25lOiBsRXN0YWJsaXNobWVudC5waG9uZSxcbiAgICAgICAgICAgICAgICAgICAgY291bnRyeV9pZDogbEVzdGFibGlzaG1lbnQuY291bnRyeUlkLFxuICAgICAgICAgICAgICAgICAgICBvcmRlcl9jb2RlOiBfcE9yZGVyLmNvZGUsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlX251bWJlcjogbFRhYmxlLl9udW1iZXIsXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsX29yZGVyOiBfcE9yZGVyLnRvdGFsUGF5bWVudCxcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJfaWQ6IF9wT3JkZXIuY3JlYXRpb25fdXNlcixcbiAgICAgICAgICAgICAgICAgICAgY3VycmVuY3k6IGxDdXJyZW5jeS5jb2RlLFxuICAgICAgICAgICAgICAgICAgICBpdGVtczogbEludm9pY2VJdGVtcyxcbiAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25zOiBsSW52b2ljZUFkZGl0aW9uc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBUYWJsZSB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3RhYmxlLm1vZGVsJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvdGFibGUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBPcmRlciwgT3JkZXJJdGVtLCBPcmRlckFkZGl0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvb3JkZXIubW9kZWwnO1xuaW1wb3J0IHsgT3JkZXJzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9vcmRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50Lm1vZGVsJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCwgVXNlclJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFJld2FyZFBvaW50IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50Lm1vZGVsJztcbmltcG9ydCB7IFJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50LmNvbGxlY3Rpb24nO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBNZXRlb3IgTWV0aG9kIGFkZCBpdGVtIGluIHVzZXIgb3JkZXJcbiAgICAgICAgICogQHBhcmFtIHtPcmRlckl0ZW19IF9pdGVtVG9JbnNlcnRcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF90YWJsZVFSQ29kZVxuICAgICAgICAgKi9cbiAgICAgICAgQWRkSXRlbVRvT3JkZXI6IGZ1bmN0aW9uIChfaXRlbVRvSW5zZXJ0OiBPcmRlckl0ZW0sIF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZywgX3RhYmxlUVJDb2RlOiBzdHJpbmcsIF9maW5hbFByaWNlOiBudW1iZXIsIF9maW5hbFBvaW50czogbnVtYmVyKSB7XG5cbiAgICAgICAgICAgIGxldCBfbFRhYmxlOiBUYWJsZSA9IFRhYmxlcy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBRUl9jb2RlOiBfdGFibGVRUkNvZGUgfSk7XG4gICAgICAgICAgICBsZXQgX2xFc3RhYmxpc2htZW50OiBFc3RhYmxpc2htZW50ID0gRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfZXN0YWJsaXNobWVudElkIH0pO1xuXG4gICAgICAgICAgICBsZXQgX2xPcmRlcjogT3JkZXIgPSBPcmRlcnMuY29sbGVjdGlvbi5maW5kT25lKHtcbiAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICB0YWJsZUlkOiBfbFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuU0VMRUNUSU5HJ1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChfbE9yZGVyKSB7XG4gICAgICAgICAgICAgICAgbGV0IF9sVG90YWxQYXltZW50QXV4OiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoX2xPcmRlci50b3RhbFBheW1lbnQudG9TdHJpbmcoKSkgKyBOdW1iZXIucGFyc2VJbnQoX2l0ZW1Ub0luc2VydC5wYXltZW50SXRlbS50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBsZXQgX2xUb3RhbFBvaW50c0F1eDogbnVtYmVyID0gTnVtYmVyLnBhcnNlSW50KF9sT3JkZXIudG90YWxfcmV3YXJkX3BvaW50cy50b1N0cmluZygpKSArIE51bWJlci5wYXJzZUludChfaXRlbVRvSW5zZXJ0LnJld2FyZF9wb2ludHMudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgT3JkZXJzLnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgdGFibGVJZDogX2xUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgeyAkcHVzaDogeyBpdGVtczogX2l0ZW1Ub0luc2VydCB9IH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIE9yZGVycy51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlSWQ6IF9sVGFibGUuX2lkLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuU0VMRUNUSU5HJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RpZmljYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUGF5bWVudDogX2xUb3RhbFBheW1lbnRBdXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXJJdGVtQ291bnQ6IF9sT3JkZXIub3JkZXJJdGVtQ291bnQgKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsX3Jld2FyZF9wb2ludHM6IF9sVG90YWxQb2ludHNBdXhcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCBfb3JkZXJDb3VudDogbnVtYmVyID0gX2xFc3RhYmxpc2htZW50Lm9yZGVyTnVtYmVyQ291bnQgKyAxO1xuICAgICAgICAgICAgICAgIF9sRXN0YWJsaXNobWVudC5vcmRlck51bWJlckNvdW50ID0gX29yZGVyQ291bnQ7XG5cbiAgICAgICAgICAgICAgICBFc3RhYmxpc2htZW50cy51cGRhdGUoeyBfaWQ6IF9sRXN0YWJsaXNobWVudC5faWQgfSwgX2xFc3RhYmxpc2htZW50KTtcbiAgICAgICAgICAgICAgICBPcmRlcnMuaW5zZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZUlkOiBfbFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogX29yZGVyQ291bnQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnLFxuICAgICAgICAgICAgICAgICAgICBpdGVtczogW19pdGVtVG9JbnNlcnRdLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbFBheW1lbnQ6IF9maW5hbFByaWNlLFxuICAgICAgICAgICAgICAgICAgICBvcmRlckl0ZW1Db3VudDogMSxcbiAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25zOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgdG90YWxfcmV3YXJkX3BvaW50czogX2ZpbmFsUG9pbnRzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX2l0ZW1Ub0luc2VydC5pc19yZXdhcmQpIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xDb25zdW1lckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBNZXRlb3IudXNlcklkKCkgfSk7XG4gICAgICAgICAgICAgICAgbGV0IF9sUG9pbnRzOiBVc2VyUmV3YXJkUG9pbnRzID0gX2xDb25zdW1lckRldGFpbC5yZXdhcmRfcG9pbnRzLmZpbHRlcihwID0+IHAuZXN0YWJsaXNobWVudF9pZCA9PT0gX2xFc3RhYmxpc2htZW50Ll9pZClbMF07XG4gICAgICAgICAgICAgICAgVXNlckRldGFpbHMudXBkYXRlKHsgX2lkOiBfbENvbnN1bWVyRGV0YWlsLl9pZCwgJ3Jld2FyZF9wb2ludHMuZXN0YWJsaXNobWVudF9pZCc6IF9sRXN0YWJsaXNobWVudC5faWQgfSxcbiAgICAgICAgICAgICAgICAgICAgeyAkc2V0OiB7ICdyZXdhcmRfcG9pbnRzLiQucG9pbnRzJzogKF9sUG9pbnRzLnBvaW50cyAtIF9pdGVtVG9JbnNlcnQucmVkZWVtZWRfcG9pbnRzKSB9IH0pO1xuXG4gICAgICAgICAgICAgICAgbGV0IF9wb2ludHM6IG51bWJlciA9IF9pdGVtVG9JbnNlcnQucmVkZWVtZWRfcG9pbnRzO1xuICAgICAgICAgICAgICAgIGxldCBfdmFsaWRhdGVfcG9pbnRzOiBib29sZWFuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBSZXdhcmRQb2ludHMuY29sbGVjdGlvbi5maW5kKHsgaWRfdXNlcjogTWV0ZW9yLnVzZXJJZCgpLCBlc3RhYmxpc2htZW50X2lkOiBfbEVzdGFibGlzaG1lbnQuX2lkLCBpc19hY3RpdmU6IHRydWUgfSwgeyBzb3J0OiB7IGdhaW5fZGF0ZTogMSB9IH0pLmZldGNoKCkuZm9yRWFjaCgocG50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfdmFsaWRhdGVfcG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfcG9pbnRzID0gX3BvaW50cyAtIHBudC5wb2ludHM7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3BvaW50cyA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmV3YXJkUG9pbnRzLnVwZGF0ZSh7IF9pZDogcG50Ll9pZCB9LCB7ICRzZXQ6IHsgaXNfYWN0aXZlOiBmYWxzZSB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92YWxpZGF0ZV9wb2ludHMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXdhcmRQb2ludHMudXBkYXRlKHsgX2lkOiBwbnQuX2lkIH0sIHsgJHNldDogeyBkaWZmZXJlbmNlOiAoX3BvaW50cyAqIC0xKSB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92YWxpZGF0ZV9wb2ludHMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIEFkZEl0ZW1Ub09yZGVyMjogZnVuY3Rpb24gKF9pdGVtVG9JbnNlcnQ6IE9yZGVySXRlbSwgX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nLCBfaWRUYWJsZTogc3RyaW5nLCBfZmluYWxQcmljZTogbnVtYmVyLCBfZmluYWxQb2ludHM6IG51bWJlcikge1xuXG4gICAgICAgICAgICBsZXQgX2xUYWJsZTogVGFibGUgPSBUYWJsZXMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfaWRUYWJsZSB9KTtcbiAgICAgICAgICAgIGxldCBfbEVzdGFibGlzaG1lbnQ6IEVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IF9lc3RhYmxpc2htZW50SWQgfSk7XG5cbiAgICAgICAgICAgIGxldCBfbE9yZGVyOiBPcmRlciA9IE9yZGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoe1xuICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkLFxuICAgICAgICAgICAgICAgIHRhYmxlSWQ6IF9sVGFibGUuX2lkLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKF9sT3JkZXIpIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xUb3RhbFBheW1lbnRBdXg6IG51bWJlciA9IE51bWJlci5wYXJzZUludChfbE9yZGVyLnRvdGFsUGF5bWVudC50b1N0cmluZygpKSArIE51bWJlci5wYXJzZUludChfaXRlbVRvSW5zZXJ0LnBheW1lbnRJdGVtLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIGxldCBfbFRvdGFsUG9pbnRzQXV4OiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoX2xPcmRlci50b3RhbF9yZXdhcmRfcG9pbnRzLnRvU3RyaW5nKCkpICsgTnVtYmVyLnBhcnNlSW50KF9pdGVtVG9JbnNlcnQucmV3YXJkX3BvaW50cy50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBPcmRlcnMudXBkYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZUlkOiBfbFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnT1JERVJfU1RBVFVTLlNFTEVDVElORydcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7ICRwdXNoOiB7IGl0ZW1zOiBfaXRlbVRvSW5zZXJ0IH0gfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgT3JkZXJzLnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgdGFibGVJZDogX2xUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWNhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQYXltZW50OiBfbFRvdGFsUGF5bWVudEF1eCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlckl0ZW1Db3VudDogX2xPcmRlci5vcmRlckl0ZW1Db3VudCArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxfcmV3YXJkX3BvaW50czogX2xUb3RhbFBvaW50c0F1eFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IF9vcmRlckNvdW50OiBudW1iZXIgPSBfbEVzdGFibGlzaG1lbnQub3JkZXJOdW1iZXJDb3VudCArIDE7XG4gICAgICAgICAgICAgICAgX2xFc3RhYmxpc2htZW50Lm9yZGVyTnVtYmVyQ291bnQgPSBfb3JkZXJDb3VudDtcblxuICAgICAgICAgICAgICAgIEVzdGFibGlzaG1lbnRzLnVwZGF0ZSh7IF9pZDogX2xFc3RhYmxpc2htZW50Ll9pZCB9LCBfbEVzdGFibGlzaG1lbnQpO1xuICAgICAgICAgICAgICAgIE9yZGVycy5pbnNlcnQoe1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX2RhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlSWQ6IF9sVGFibGUuX2lkLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiBfb3JkZXJDb3VudCxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnT1JERVJfU1RBVFVTLlNFTEVDVElORycsXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBbX2l0ZW1Ub0luc2VydF0sXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsUGF5bWVudDogX2ZpbmFsUHJpY2UsXG4gICAgICAgICAgICAgICAgICAgIG9yZGVySXRlbUNvdW50OiAxLFxuICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbnM6IFtdLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbF9yZXdhcmRfcG9pbnRzOiBfZmluYWxQb2ludHNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfaXRlbVRvSW5zZXJ0LmlzX3Jld2FyZCkge1xuICAgICAgICAgICAgICAgIGxldCBfbENvbnN1bWVyRGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IE1ldGVvci51c2VySWQoKSB9KTtcbiAgICAgICAgICAgICAgICBsZXQgX2xQb2ludHM6IFVzZXJSZXdhcmRQb2ludHMgPSBfbENvbnN1bWVyRGV0YWlsLnJld2FyZF9wb2ludHMuZmlsdGVyKHAgPT4gcC5lc3RhYmxpc2htZW50X2lkID09PSBfbEVzdGFibGlzaG1lbnQuX2lkKVswXTtcbiAgICAgICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9sQ29uc3VtZXJEZXRhaWwuX2lkLCAncmV3YXJkX3BvaW50cy5lc3RhYmxpc2htZW50X2lkJzogX2xFc3RhYmxpc2htZW50Ll9pZCB9LFxuICAgICAgICAgICAgICAgICAgICB7ICRzZXQ6IHsgJ3Jld2FyZF9wb2ludHMuJC5wb2ludHMnOiAoX2xQb2ludHMucG9pbnRzIC0gX2l0ZW1Ub0luc2VydC5yZWRlZW1lZF9wb2ludHMpIH0gfSk7XG5cbiAgICAgICAgICAgICAgICBsZXQgX3BvaW50czogbnVtYmVyID0gX2l0ZW1Ub0luc2VydC5yZWRlZW1lZF9wb2ludHM7XG4gICAgICAgICAgICAgICAgbGV0IF92YWxpZGF0ZV9wb2ludHM6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy5jb2xsZWN0aW9uLmZpbmQoeyBpZF91c2VyOiBNZXRlb3IudXNlcklkKCksIGVzdGFibGlzaG1lbnRfaWQ6IF9sRXN0YWJsaXNobWVudC5faWQsIGlzX2FjdGl2ZTogdHJ1ZSB9LCB7IHNvcnQ6IHsgZ2Fpbl9kYXRlOiAxIH0gfSkuZmV0Y2goKS5mb3JFYWNoKChwbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF92YWxpZGF0ZV9wb2ludHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9wb2ludHMgPSBfcG9pbnRzIC0gcG50LnBvaW50cztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfcG9pbnRzID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXdhcmRQb2ludHMudXBkYXRlKHsgX2lkOiBwbnQuX2lkIH0sIHsgJHNldDogeyBpc19hY3RpdmU6IGZhbHNlIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZhbGlkYXRlX3BvaW50cyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy51cGRhdGUoeyBfaWQ6IHBudC5faWQgfSwgeyAkc2V0OiB7IGRpZmZlcmVuY2U6IChfcG9pbnRzICogLTEpIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZhbGlkYXRlX3BvaW50cyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgTWV0ZW9yIE1ldGhvZCBBZGQgQWRkaXRpb25zIHRvIG9yZGVyXG4gICAgICAgICAqIEBwYXJhbSB7T3JkZXJBZGRpdGlvbltdfSBfYWRkaXRpb25zVG9JbnNlcnRcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF9lc3RhYmxpc2htZW50SWRcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF90YWJsZVFSQ29kZVxuICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gX0FkZGl0aW9uc1ByaWNlXG4gICAgICAgICAqL1xuICAgICAgICBBZGRBZGRpdGlvbnNUb09yZGVyOiBmdW5jdGlvbiAoX2FkZGl0aW9uc1RvSW5zZXJ0OiBPcmRlckFkZGl0aW9uW10sIF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZywgX3RhYmxlUVJDb2RlOiBzdHJpbmcsIF9BZGRpdGlvbnNQcmljZTogbnVtYmVyKSB7XG4gICAgICAgICAgICBsZXQgX2xUYWJsZTogVGFibGUgPSBUYWJsZXMuY29sbGVjdGlvbi5maW5kT25lKHsgUVJfY29kZTogX3RhYmxlUVJDb2RlIH0pO1xuXG4gICAgICAgICAgICBsZXQgX2xPcmRlcjogT3JkZXIgPSBPcmRlcnMuY29sbGVjdGlvbi5maW5kT25lKHtcbiAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICB0YWJsZUlkOiBfbFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuU0VMRUNUSU5HJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoX2xPcmRlcikge1xuICAgICAgICAgICAgICAgIGxldCBfbFRvdGFsUGF5bWVudEF1eDogbnVtYmVyID0gTnVtYmVyLnBhcnNlSW50KF9sT3JkZXIudG90YWxQYXltZW50LnRvU3RyaW5nKCkpICsgTnVtYmVyLnBhcnNlSW50KF9BZGRpdGlvbnNQcmljZS50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBsZXQgX2xBZGRpdGlvbnM6IE9yZGVyQWRkaXRpb25bXSA9IE1ldGVvci5jYWxsKCdjb21wYXJlQWRkaXRpb25zVG9JbnNlcnQnLCBfYWRkaXRpb25zVG9JbnNlcnQsIF9sT3JkZXIpO1xuXG4gICAgICAgICAgICAgICAgT3JkZXJzLnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgdGFibGVJZDogX2xUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWNhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQYXltZW50OiBfbFRvdGFsUGF5bWVudEF1eCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbnM6IF9sQWRkaXRpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xFc3RhYmxpc2htZW50OiBFc3RhYmxpc2htZW50ID0gRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfZXN0YWJsaXNobWVudElkIH0pO1xuICAgICAgICAgICAgICAgIGxldCBfb3JkZXJDb3VudDogbnVtYmVyID0gX2xFc3RhYmxpc2htZW50Lm9yZGVyTnVtYmVyQ291bnQgKyAxO1xuICAgICAgICAgICAgICAgIF9sRXN0YWJsaXNobWVudC5vcmRlck51bWJlckNvdW50ID0gX29yZGVyQ291bnQ7XG5cbiAgICAgICAgICAgICAgICBFc3RhYmxpc2htZW50cy51cGRhdGUoeyBfaWQ6IF9sRXN0YWJsaXNobWVudC5faWQgfSwgX2xFc3RhYmxpc2htZW50KTtcbiAgICAgICAgICAgICAgICBPcmRlcnMuaW5zZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZUlkOiBfbFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogX29yZGVyQ291bnQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnLFxuICAgICAgICAgICAgICAgICAgICBpdGVtczogW10sXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsUGF5bWVudDogX0FkZGl0aW9uc1ByaWNlLFxuICAgICAgICAgICAgICAgICAgICBvcmRlckl0ZW1Db3VudDogMCxcbiAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25zOiBfYWRkaXRpb25zVG9JbnNlcnRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBBZGRBZGRpdGlvbnNUb09yZGVyMjogZnVuY3Rpb24gKF9hZGRpdGlvbnNUb0luc2VydDogT3JkZXJBZGRpdGlvbltdLCBfZXN0YWJsaXNobWVudElkOiBzdHJpbmcsIF90YWJsZUlkOiBzdHJpbmcsIF9BZGRpdGlvbnNQcmljZTogbnVtYmVyKSB7XG4gICAgICAgICAgICBsZXQgX2xUYWJsZTogVGFibGUgPSBUYWJsZXMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfdGFibGVJZCB9KTtcblxuICAgICAgICAgICAgbGV0IF9sT3JkZXI6IE9yZGVyID0gT3JkZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7XG4gICAgICAgICAgICAgICAgY3JlYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsXG4gICAgICAgICAgICAgICAgdGFibGVJZDogX2xUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnT1JERVJfU1RBVFVTLlNFTEVDVElORydcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKF9sT3JkZXIpIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xUb3RhbFBheW1lbnRBdXg6IG51bWJlciA9IE51bWJlci5wYXJzZUludChfbE9yZGVyLnRvdGFsUGF5bWVudC50b1N0cmluZygpKSArIE51bWJlci5wYXJzZUludChfQWRkaXRpb25zUHJpY2UudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgbGV0IF9sQWRkaXRpb25zOiBPcmRlckFkZGl0aW9uW10gPSBNZXRlb3IuY2FsbCgnY29tcGFyZUFkZGl0aW9uc1RvSW5zZXJ0JywgX2FkZGl0aW9uc1RvSW5zZXJ0LCBfbE9yZGVyKTtcblxuICAgICAgICAgICAgICAgIE9yZGVycy51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlSWQ6IF9sVGFibGUuX2lkLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuU0VMRUNUSU5HJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RpZmljYXRpb25fdXNlcjogTWV0ZW9yLnVzZXJJZCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUGF5bWVudDogX2xUb3RhbFBheW1lbnRBdXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25zOiBfbEFkZGl0aW9uc1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IF9sRXN0YWJsaXNobWVudDogRXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogX2VzdGFibGlzaG1lbnRJZCB9KTtcbiAgICAgICAgICAgICAgICBsZXQgX29yZGVyQ291bnQ6IG51bWJlciA9IF9sRXN0YWJsaXNobWVudC5vcmRlck51bWJlckNvdW50ICsgMTtcbiAgICAgICAgICAgICAgICBfbEVzdGFibGlzaG1lbnQub3JkZXJOdW1iZXJDb3VudCA9IF9vcmRlckNvdW50O1xuXG4gICAgICAgICAgICAgICAgRXN0YWJsaXNobWVudHMudXBkYXRlKHsgX2lkOiBfbEVzdGFibGlzaG1lbnQuX2lkIH0sIF9sRXN0YWJsaXNobWVudCk7XG4gICAgICAgICAgICAgICAgT3JkZXJzLmluc2VydCh7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgdGFibGVJZDogX2xUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6IF9vcmRlckNvdW50LFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuU0VMRUNUSU5HJyxcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbFBheW1lbnQ6IF9BZGRpdGlvbnNQcmljZSxcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJJdGVtQ291bnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uczogX2FkZGl0aW9uc1RvSW5zZXJ0XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIGNvbXBhcmUgYWRkaXRpb25zIHRvIGluc2VydCBhbmQgY3JlYXRlIG5ldyBhcnJheVxuICAgICAgICAgKiBAcGFyYW0ge09yZGVyQWRkaXRpb25bXX0gX3BBZGRpdGlvbnNUb0luc2VydCBcbiAgICAgICAgICovXG4gICAgICAgIGNvbXBhcmVBZGRpdGlvbnNUb0luc2VydDogZnVuY3Rpb24gKF9wQWRkaXRpb25zVG9JbnNlcnQ6IE9yZGVyQWRkaXRpb25bXSwgX3BPcmRlcjogT3JkZXIpOiBPcmRlckFkZGl0aW9uW10ge1xuICAgICAgICAgICAgbGV0IF9sQWRkaXRpb25zVG9SZXR1cm46IE9yZGVyQWRkaXRpb25bXSA9IF9wT3JkZXIuYWRkaXRpb25zO1xuXG4gICAgICAgICAgICBfcEFkZGl0aW9uc1RvSW5zZXJ0LmZvckVhY2goKGFkZFRvSW5zZXJ0KSA9PiB7XG4gICAgICAgICAgICAgICAgX2xBZGRpdGlvbnNUb1JldHVybi5mb3JFYWNoKChhZGRUb1JldHVybikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWRkVG9JbnNlcnQuYWRkaXRpb25JZCA9PT0gYWRkVG9SZXR1cm4uYWRkaXRpb25JZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRkVG9SZXR1cm4ucXVhbnRpdHkgPSBhZGRUb1JldHVybi5xdWFudGl0eSArIGFkZFRvSW5zZXJ0LnF1YW50aXR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRkVG9SZXR1cm4ucGF5bWVudEFkZGl0aW9uID0gYWRkVG9SZXR1cm4ucGF5bWVudEFkZGl0aW9uICsgYWRkVG9JbnNlcnQucGF5bWVudEFkZGl0aW9uO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgX3BBZGRpdGlvbnNUb0luc2VydC5mb3JFYWNoKChhZGRUb0luc2VydCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChfbEFkZGl0aW9uc1RvUmV0dXJuLmZpbHRlcihhZCA9PiBhZC5hZGRpdGlvbklkID09PSBhZGRUb0luc2VydC5hZGRpdGlvbklkKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgX2xBZGRpdGlvbnNUb1JldHVybi5wdXNoKGFkZFRvSW5zZXJ0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBfbEFkZGl0aW9uc1RvUmV0dXJuO1xuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IHsgU3luY2VkQ3JvbiB9IGZyb20gJ21ldGVvci9wZXJjb2xhdGU6c3luY2VkLWNyb24nO1xuaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9jb3VudHJ5LmNvbGxlY3Rpb24nO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG5cbiAgICAvKipcbiAgICAqIEluaXQgdGhlIGNyb24gYWNjb3JkaW5nIHRvIHRoZSBjb3VudHJpZXMgcmVnaXN0ZXJlZFxuICAgICovXG5cblxuICAgIC8qXG4gICAgTWV0ZW9yLnN0YXJ0dXAoZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgYWN0aXZlQ291bnRyaWVzID0gQ291bnRyaWVzLmNvbGxlY3Rpb24uZmluZCh7aXNfYWN0aXZlOiB0cnVlfSkuZmV0Y2goKTtcbiAgICAgICAgYWN0aXZlQ291bnRyaWVzLmZvckVhY2goY291bnRyeSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb3VudHJ5Ll9pZCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgICovXG5cbiAgICBNZXRlb3IubWV0aG9kcyh7XG5cblxuICAgIH0pO1xufSIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgVGFibGUgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC90YWJsZS5tb2RlbCc7XG5pbXBvcnQgeyBUYWJsZXMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3RhYmxlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgT3JkZXJzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9vcmRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFdhaXRlckNhbGxEZXRhaWxzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC93YWl0ZXItY2FsbC1kZXRhaWwuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIGdldEN1cnJlbnRUYWJsZUJ5VXNlcjogZnVuY3Rpb24gKF9pZFRhYmxlKSB7XG4gICAgICAgICAgICBsZXQgdGFibGUgPSBUYWJsZXMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBfaWRUYWJsZSB9KTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGFibGUgIT0gXCJ1bmRlZmluZWRcIiB8fCB0YWJsZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhYmxlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBnZXRJZFRhYmxlQnlRcjogZnVuY3Rpb24gKF9xckNvZGUpIHtcbiAgICAgICAgICAgIGxldCB0YWJsZSA9IFRhYmxlcy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBRUl9jb2RlOiBfcXJDb2RlLCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRhYmxlICE9IFwidW5kZWZpbmVkXCIgfHwgdGFibGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0YWJsZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2hhbmdlQ3VycmVudFRhYmxlOiBmdW5jdGlvbiAoX3BVc2VySWQ6IHN0cmluZywgX3BFc3RhYmxpc2htZW50SWQ6IHN0cmluZywgX3BRUkNvZGVDdXJyZW50VGFibGU6IHN0cmluZywgX3BRUkNvZGVEZXN0aW5hdGlvblRhYmxlOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGlmIChfcFFSQ29kZUN1cnJlbnRUYWJsZSA9PT0gX3BRUkNvZGVEZXN0aW5hdGlvblRhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1ldGVvci5FcnJvcignMjA3Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgX2xDdXJyZW50VGFibGU6IFRhYmxlID0gVGFibGVzLmZpbmRPbmUoeyBRUl9jb2RlOiBfcFFSQ29kZUN1cnJlbnRUYWJsZSB9KTtcbiAgICAgICAgICAgIGxldCBfbERlc3RpbmF0aW9uVGFibGU6IFRhYmxlID0gVGFibGVzLmZpbmRPbmUoeyBRUl9jb2RlOiBfcFFSQ29kZURlc3RpbmF0aW9uVGFibGUgfSk7XG5cbiAgICAgICAgICAgIGlmIChfbERlc3RpbmF0aW9uVGFibGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoX2xEZXN0aW5hdGlvblRhYmxlLmlzX2FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX2xEZXN0aW5hdGlvblRhYmxlLmVzdGFibGlzaG1lbnRfaWQgPT09IF9wRXN0YWJsaXNobWVudElkKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfbFdhaXRlckNhbGxzOiBudW1iZXIgPSBXYWl0ZXJDYWxsRGV0YWlscy5maW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50X2lkOiBfcEVzdGFibGlzaG1lbnRJZCwgdGFibGVfaWQ6IF9sQ3VycmVudFRhYmxlLl9pZCwgdHlwZTogJ0NBTExfT0ZfQ1VTVE9NRVInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IF9wVXNlcklkLCBzdGF0dXM6ICdjb21wbGV0ZWQnXG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5mZXRjaCgpLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfbFdhaXRlckNhbGxzIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgX2xOZXdBbW91bnRQZW9wbGU6IG51bWJlciA9IF9sQ3VycmVudFRhYmxlLmFtb3VudF9wZW9wbGUgLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhYmxlcy51cGRhdGUoeyBfaWQ6IF9sQ3VycmVudFRhYmxlLl9pZCB9LCB7ICRzZXQ6IHsgYW1vdW50X3Blb3BsZTogX2xOZXdBbW91bnRQZW9wbGUgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcmRlcnMuZmluZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0aW9uX3VzZXI6IF9wVXNlcklkLCBlc3RhYmxpc2htZW50X2lkOiBfcEVzdGFibGlzaG1lbnRJZCwgdGFibGVJZDogX2xDdXJyZW50VGFibGUuX2lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdPUkRFUl9TVEFUVVMuQ09ORklSTUVEJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmZldGNoKCkuZm9yRWFjaCgob3JkZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2FpdGVyQ2FsbERldGFpbHMudXBkYXRlKHsgZXN0YWJsaXNobWVudF9pZDogX3BFc3RhYmxpc2htZW50SWQsIHRhYmxlX2lkOiBfbEN1cnJlbnRUYWJsZS5faWQsIHN0YXR1czogJ2NvbXBsZXRlZCcsIG9yZGVyX2lkOiBvcmRlci5faWQgfSwgeyAkc2V0OiB7IHRhYmxlX2lkOiBfbERlc3RpbmF0aW9uVGFibGUuX2lkIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX2xEZXN0aW5hdGlvblRhYmxlLnN0YXR1cyA9PT0gJ0JVU1knKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhYmxlcy51cGRhdGUoeyBfaWQ6IF9sRGVzdGluYXRpb25UYWJsZS5faWQgfSwgeyAkc2V0OiB7IGFtb3VudF9wZW9wbGU6IF9sRGVzdGluYXRpb25UYWJsZS5hbW91bnRfcGVvcGxlICsgMSB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcmRlcnMuZmluZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBfcFVzZXJJZCwgZXN0YWJsaXNobWVudF9pZDogX3BFc3RhYmxpc2htZW50SWQsIHRhYmxlSWQ6IF9sQ3VycmVudFRhYmxlLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogeyAkaW46IFsnT1JERVJfU1RBVFVTLlNFTEVDVElORycsICdPUkRFUl9TVEFUVVMuQ09ORklSTUVEJ10gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5mZXRjaCgpLmZvckVhY2goKG9yZGVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcmRlcnMudXBkYXRlKHsgX2lkOiBvcmRlci5faWQgfSwgeyAkc2V0OiB7IHRhYmxlSWQ6IF9sRGVzdGluYXRpb25UYWJsZS5faWQsIG1vZGlmaWNhdGlvbl91c2VyOiBfcFVzZXJJZCwgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCkgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChfbERlc3RpbmF0aW9uVGFibGUuc3RhdHVzID09PSAnRlJFRScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVzLnVwZGF0ZSh7IF9pZDogX2xEZXN0aW5hdGlvblRhYmxlLl9pZCB9LCB7ICRzZXQ6IHsgc3RhdHVzOiAnQlVTWScsIGFtb3VudF9wZW9wbGU6IDEgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT3JkZXJzLmZpbmQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRpb25fdXNlcjogX3BVc2VySWQsIGVzdGFibGlzaG1lbnRfaWQ6IF9wRXN0YWJsaXNobWVudElkLCB0YWJsZUlkOiBfbEN1cnJlbnRUYWJsZS5faWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHsgJGluOiBbJ09SREVSX1NUQVRVUy5TRUxFQ1RJTkcnLCAnT1JERVJfU1RBVFVTLkNPTkZJUk1FRCddIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuZmV0Y2goKS5mb3JFYWNoKChvcmRlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT3JkZXJzLnVwZGF0ZSh7IF9pZDogb3JkZXIuX2lkIH0sIHsgJHNldDogeyB0YWJsZUlkOiBfbERlc3RpbmF0aW9uVGFibGUuX2lkLCBtb2RpZmljYXRpb25fdXNlcjogX3BVc2VySWQsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzIwNicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfbEN1clRhYmxlQXV4OiBUYWJsZSA9IFRhYmxlcy5maW5kT25lKHsgUVJfY29kZTogX3BRUkNvZGVDdXJyZW50VGFibGUgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9sQ3VyVGFibGVBdXguYW1vdW50X3Blb3BsZSA9PT0gMCAmJiBfbEN1clRhYmxlQXV4LnN0YXR1cyA9PT0gJ0JVU1knKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhYmxlcy51cGRhdGUoeyBfaWQ6IF9sQ3VyVGFibGVBdXguX2lkIH0sIHsgJHNldDogeyBzdGF0dXM6ICdGUkVFJyB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IHVzZXJfaWQ6IF9wVXNlcklkIH0sIHsgJHNldDogeyBjdXJyZW50X3RhYmxlOiBfbERlc3RpbmF0aW9uVGFibGUuX2lkIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzIwNScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1ldGVvci5FcnJvcignMjAyJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTWV0ZW9yLkVycm9yKCcyMDEnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBNZXRlb3IuRXJyb3IoJzIwMCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIGNyZWF0ZUNvbGxhYm9yYXRvclVzZXI6IGZ1bmN0aW9uICggX2luZm8gOiBhbnkgKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gQWNjb3VudHMuY3JlYXRlVXNlcih7XG4gICAgICAgICAgICAgICAgZW1haWw6IF9pbmZvLmVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBfaW5mby5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogX2luZm8udXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgcHJvZmlsZTogX2luZm8ucHJvZmlsZSxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cblxuICAgIFxuIiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvcm9sZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IE1lbnVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvYXV0aC9tZW51LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgTWVudSB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoL21lbnUubW9kZWwnO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIGdldE1lbnVzOiBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGxldCBtZW51TGlzdDogTWVudVtdID0gW107XG4gICAgICAgICAgICBsZXQgdXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZE9uZSh7IHVzZXJfaWQ6IHRoaXMudXNlcklkIH0pO1xuICAgICAgICAgICAgbGV0IHJvbGUgPSBSb2xlcy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IHVzZXJEZXRhaWwucm9sZV9pZCB9KTtcbiAgICAgICAgICAgIE1lbnVzLmNvbGxlY3Rpb24uZmluZCh7IF9pZDogeyAkaW46IHJvbGUubWVudXMgfSwgaXNfYWN0aXZlOiB0cnVlIH0sIHsgc29ydDogeyBvcmRlcjogMSB9IH0pLmZvckVhY2goZnVuY3Rpb24gPE1lbnU+KG1lbnUsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgIG1lbnVMaXN0LnB1c2gobWVudSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBtZW51TGlzdDtcbiAgICAgICAgfVxuICAgIH0pO1xufSIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcblxuaWYgKE1ldGVvci5pc1NlcnZlcikge1xuICAgIE1ldGVvci5tZXRob2RzKHtcbiAgICAgICAgZ2V0Um9sZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHJvbGU6IHN0cmluZyA9IFwiXCI7XG4gICAgICAgICAgICBsZXQgdXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZE9uZSh7IHVzZXJfaWQ6IHRoaXMudXNlcklkIH0pO1xuICAgICAgICAgICAgaWYodXNlckRldGFpbCl7XG4gICAgICAgICAgICAgICAgcm9sZSA9IHVzZXJEZXRhaWwucm9sZV9pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByb2xlO1xuICAgICAgICB9LFxuICAgICAgICB2YWxpZGF0ZUFkbWluOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgcm9sZTogc3RyaW5nO1xuICAgICAgICAgICAgbGV0IHVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmRPbmUoeyB1c2VyX2lkOiB0aGlzLnVzZXJJZCB9KTtcbiAgICAgICAgICAgIHJvbGUgPSB1c2VyRGV0YWlsLnJvbGVfaWQ7XG4gICAgICAgICAgICBpZiAocm9sZSA9PT0gJzEwMCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB2YWxpZGF0ZVdhaXRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHJvbGU6IHN0cmluZztcbiAgICAgICAgICAgIGxldCB1c2VyRGV0YWlsID0gVXNlckRldGFpbHMuY29sbGVjdGlvbi5maW5kT25lKHsgdXNlcl9pZDogdGhpcy51c2VySWQgfSk7XG4gICAgICAgICAgICByb2xlID0gdXNlckRldGFpbC5yb2xlX2lkO1xuICAgICAgICAgICAgaWYgKHJvbGUgPT09ICcyMDAnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdmFsaWRhdGVDYXNoaWVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgcm9sZTogc3RyaW5nO1xuICAgICAgICAgICAgbGV0IHVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmRPbmUoeyB1c2VyX2lkOiB0aGlzLnVzZXJJZCB9KTtcbiAgICAgICAgICAgIHJvbGUgPSB1c2VyRGV0YWlsLnJvbGVfaWQ7XG4gICAgICAgICAgICBpZiAocm9sZSA9PT0gJzMwMCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB2YWxpZGF0ZUN1c3RvbWVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgcm9sZTogc3RyaW5nO1xuICAgICAgICAgICAgbGV0IHVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmRPbmUoeyB1c2VyX2lkOiB0aGlzLnVzZXJJZCB9KTtcbiAgICAgICAgICAgIHJvbGUgPSB1c2VyRGV0YWlsLnJvbGVfaWQ7XG4gICAgICAgICAgICBpZiAocm9sZSA9PT0gJzQwMCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB2YWxpZGF0ZUNoZWY6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCByb2xlOiBzdHJpbmc7XG4gICAgICAgICAgICBsZXQgdXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZE9uZSh7IHVzZXJfaWQ6IHRoaXMudXNlcklkIH0pO1xuICAgICAgICAgICAgcm9sZSA9IHVzZXJEZXRhaWwucm9sZV9pZDtcbiAgICAgICAgICAgIGlmIChyb2xlID09PSAnNTAwJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHZhbGlkYXRlQWRtaW5PclN1cGVydmlzb3I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCByb2xlOiBzdHJpbmc7XG4gICAgICAgICAgICBsZXQgdXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZE9uZSh7IHVzZXJfaWQ6IHRoaXMudXNlcklkIH0pO1xuICAgICAgICAgICAgcm9sZSA9IHVzZXJEZXRhaWwucm9sZV9pZDtcbiAgICAgICAgICAgIGlmIChyb2xlID09PSAnMTAwJyB8fCByb2xlID09PSAnNjAwJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGdldERldGFpbHNDb3VudDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IGNvdW50OiBudW1iZXI7XG4gICAgICAgICAgICBjb3VudCA9IFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZCh7IHVzZXJfaWQ6IHRoaXMudXNlcklkIH0pLmNvdW50KCk7XG4gICAgICAgICAgICByZXR1cm4gY291bnQ7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBWYWxpZGF0ZSB1c2VyIGlzIGFjdGl2ZVxuICAgICAgICAgKi9cbiAgICAgICAgdmFsaWRhdGVVc2VySXNBY3RpdmUgOiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgbGV0IHVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmRPbmUoeyB1c2VyX2lkOiB0aGlzLnVzZXJJZCB9KTtcbiAgICAgICAgICAgIGlmKHVzZXJEZXRhaWwpe1xuICAgICAgICAgICAgICAgIHJldHVybiB1c2VyRGV0YWlsLmlzX2FjdGl2ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG5cblxuXG4iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbi8vaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuLy9pbXBvcnQgeyBVc2VyRGV0YWlsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuXG5pbXBvcnQgeyBVc2VyRGV2aWNlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvZGV2aWNlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldmljZSwgRGV2aWNlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvZGV2aWNlLm1vZGVsJztcblxuaWYgKE1ldGVvci5pc1NlcnZlcikge1xuICAgIE1ldGVvci5tZXRob2RzKHtcbiAgICAgICAgdXNlckRldmljZXNWYWxpZGF0aW9uOiBmdW5jdGlvbiAoIF9kYXRhIDogYW55ICkge1xuICAgICAgICAgICAgdmFyIF9kZXZpY2UgPSBuZXcgRGV2aWNlKCk7XG4gICAgICAgICAgICB2YXIgX3VzZXJEZXZpY2UgPSBVc2VyRGV2aWNlcy5jb2xsZWN0aW9uLmZpbmQoe3VzZXJfaWQ6IHRoaXMudXNlcklkfSk7XG5cbiAgICAgICAgICAgIF9kZXZpY2UucGxheWVyX2lkID0gX2RhdGEudXNlcklkO1xuICAgICAgICAgICAgX2RldmljZS5pc19hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiggX3VzZXJEZXZpY2UuY291bnQoKSA9PT0gMCApIHtcblxuICAgICAgICAgICAgICAgIFVzZXJEZXZpY2VzLmluc2VydCh7XG4gICAgICAgICAgICAgICAgICAgIHVzZXJfaWQgOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgICAgIGRldmljZXM6IFsgX2RldmljZSBdLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfdXNlckRldmljZS5jb3VudCgpID4gMCApIHtcbiAgICAgICAgICAgICAgICBfdXNlckRldmljZS5mZXRjaCgpLmZvckVhY2goICh1c3JfZGV2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBfZGV2X3ZhbCA9IFVzZXJEZXZpY2VzLmNvbGxlY3Rpb24uZmluZCh7IFwiZGV2aWNlcy5wbGF5ZXJfaWRcIiA6IF9kYXRhLnVzZXJJZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFfZGV2X3ZhbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyRGV2aWNlcy51cGRhdGUoeyBfaWQgOiB1c3JfZGV2Ll9pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgJGFkZFRvU2V0IDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VzOiAgX2RldmljZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyRGV2aWNlcy51cGRhdGUoeyBcImRldmljZXMucGxheWVyX2lkXCIgOiBfZGF0YS51c2VySWQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICRzZXQgOiB7IFwiZGV2aWNlcy4kLmlzX2FjdGl2ZVwiIDogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG5cblxuICAgIFxuIiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBVc2VyTG9naW4gwqB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoL3VzZXItbG9naW4ubW9kZWwnO1xuaW1wb3J0IHsgVXNlcnNMb2dpbiB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1sb2dpbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEFjY291bnRzIH0gZnJvbSAnbWV0ZW9yL2FjY291bnRzLWJhc2UnO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgICAgICBpbnNlcnRVc2VyTG9naW5JbmZvOiBmdW5jdGlvbiAoX3BVc2VyTG9naW46IFVzZXJMb2dpbikge1xuICAgICAgICAgICAgVXNlcnNMb2dpbi5pbnNlcnQoX3BVc2VyTG9naW4pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNoYW5nZVVzZXJQYXNzd29yZDogZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZywgX25ld1Bhc3N3b3JkOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIEFjY291bnRzLnNldFBhc3N3b3JkKF91c2VySWQsIF9uZXdQYXNzd29yZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvYXV0aC91c2VyLm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWwsIFVzZXJEZXRhaWxQZW5hbHR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgV2FpdGVyQ2FsbERldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvdGFibGUubW9kZWwnO1xuaW1wb3J0IHsgVGFibGVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC90YWJsZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJQZW5hbHRpZXMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItcGVuYWx0eS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFBhcmFtZXRlcnMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9nZW5lcmFsL3BhcmFtZXRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFBhcmFtZXRlciB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL3BhcmFtZXRlci5tb2RlbCc7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIHBlbmFsaXplQ3VzdG9tZXI6IGZ1bmN0aW9uIChfcEN1c3RvbWVyVXNlcjogVXNlcikge1xuICAgICAgICAgICAgbGV0IF9sVXNlckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfcEN1c3RvbWVyVXNlci5faWQgfSk7XG4gICAgICAgICAgICBsZXQgX2xDdXN0b21lckVzdGFibGlzaG1lbnQ6IHN0cmluZyA9IF9sVXNlckRldGFpbC5jdXJyZW50X2VzdGFibGlzaG1lbnQ7XG4gICAgICAgICAgICBsZXQgX2xDdXN0b21lclRhYmxlOiBzdHJpbmcgPSBfbFVzZXJEZXRhaWwuY3VycmVudF90YWJsZTtcblxuICAgICAgICAgICAgV2FpdGVyQ2FsbERldGFpbHMuZmluZCh7XG4gICAgICAgICAgICAgICAgZXN0YWJsaXNobWVudF9pZDogX2xDdXN0b21lckVzdGFibGlzaG1lbnQsIHRhYmxlX2lkOiBfbEN1c3RvbWVyVGFibGUsIHVzZXJfaWQ6IF9wQ3VzdG9tZXJVc2VyLl9pZCwgdHlwZTogeyAkaW46IFsnQ1VTVE9NRVJfT1JERVInLCAnQ0FMTF9PRl9DVVNUT01FUiddIH0sXG4gICAgICAgICAgICAgICAgc3RhdHVzOiB7ICRpbjogWyd3YWl0aW5nJywgJ2NvbXBsZXRlZCddIH1cbiAgICAgICAgICAgIH0pLmZldGNoKCkuZm9yRWFjaCgoY2FsbCkgPT4ge1xuICAgICAgICAgICAgICAgIFdhaXRlckNhbGxEZXRhaWxzLnVwZGF0ZSh7IF9pZDogY2FsbC5faWQgfSwgeyAkc2V0OiB7IHN0YXR1czogJ2NhbmNlbCcsIG1vZGlmaWNhdGlvbl9kYXRlOiBuZXcgRGF0ZSgpIH0gfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbGV0IF9sVGFibGVBbW91bnRQZW9wbGU6IG51bWJlciA9IFRhYmxlcy5maW5kT25lKHsgX2lkOiBfbEN1c3RvbWVyVGFibGUgfSkuYW1vdW50X3Blb3BsZTtcbiAgICAgICAgICAgIGxldCBfdGFibGVzVXBkYXRlZDogbnVtYmVyID0gVGFibGVzLmNvbGxlY3Rpb24udXBkYXRlKHsgX2lkOiBfbEN1c3RvbWVyVGFibGUgfSwgeyAkc2V0OiB7IGFtb3VudF9wZW9wbGU6IF9sVGFibGVBbW91bnRQZW9wbGUgLSAxIH0gfSk7XG5cbiAgICAgICAgICAgIGlmIChfdGFibGVzVXBkYXRlZCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGxldCBfbFRhYmxlQXV4OiBUYWJsZSA9IFRhYmxlcy5maW5kT25lKHsgX2lkOiBfbEN1c3RvbWVyVGFibGUgfSk7XG4gICAgICAgICAgICAgICAgaWYgKF9sVGFibGVBdXguYW1vdW50X3Blb3BsZSA9PT0gMCAmJiBfbFRhYmxlQXV4LnN0YXR1cyA9PT0gJ0JVU1knKSB7XG4gICAgICAgICAgICAgICAgICAgIFRhYmxlcy51cGRhdGUoeyBfaWQ6IF9sQ3VzdG9tZXJUYWJsZSB9LCB7ICRzZXQ6IHsgc3RhdHVzOiAnRlJFRScgfSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgX2xVc2VyRGV0YWlsUGVuYWx0eTogVXNlckRldGFpbFBlbmFsdHkgPSB7IGVzdGFibGlzaG1lbnRfaWQ6IF9sQ3VzdG9tZXJFc3RhYmxpc2htZW50LCBkYXRlOiBuZXcgRGF0ZSgpIH07XG4gICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyBfaWQ6IF9sVXNlckRldGFpbC5faWQgfSwgeyAkcHVzaDogeyBwZW5hbHRpZXM6IF9sVXNlckRldGFpbFBlbmFsdHkgfSB9KTtcbiAgICAgICAgICAgIGxldCBfbFVzZXJzVXBkYXRlZDogbnVtYmVyID0gVXNlckRldGFpbHMuY29sbGVjdGlvbi51cGRhdGUoeyBfaWQ6IF9sVXNlckRldGFpbC5faWQgfSwgeyAkc2V0OiB7IGN1cnJlbnRfZXN0YWJsaXNobWVudDogJycsIGN1cnJlbnRfdGFibGU6ICcnIH0gfSk7XG4gICAgICAgICAgICBpZiAoX2xVc2Vyc1VwZGF0ZWQgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBsZXQgX2xVc2VyRGV0YWlsQXV4OiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IF9pZDogX2xVc2VyRGV0YWlsLl9pZCB9KTtcbiAgICAgICAgICAgICAgICBsZXQgX2xNYXhVc2VyUGVuYWx0aWVzOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmZpbmRPbmUoeyBuYW1lOiAnbWF4X3VzZXJfcGVuYWx0aWVzJyB9KTtcbiAgICAgICAgICAgICAgICBpZiAoX2xVc2VyRGV0YWlsQXV4LnBlbmFsdGllcy5sZW5ndGggPj0gTnVtYmVyKF9sTWF4VXNlclBlbmFsdGllcy52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IF9sTGFzdF9kYXRlOiBEYXRlID0gbmV3IERhdGUoTWF0aC5tYXguYXBwbHkobnVsbCwgX2xVc2VyRGV0YWlsQXV4LnBlbmFsdGllcy5tYXAoZnVuY3Rpb24gKHApIHsgcmV0dXJuIG5ldyBEYXRlKHAuZGF0ZSk7IH0pKSk7XG4gICAgICAgICAgICAgICAgICAgIFVzZXJQZW5hbHRpZXMuaW5zZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IF9wQ3VzdG9tZXJVc2VyLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RfZGF0ZTogX2xMYXN0X2RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwZW5hbHRpZXM6IF9sVXNlckRldGFpbEF1eC5wZW5hbHRpZXNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIFVzZXJEZXRhaWxzLnVwZGF0ZSh7IF9pZDogX2xVc2VyRGV0YWlsLl9pZCB9LCB7ICRzZXQ6IHsgcGVuYWx0aWVzOiBbXSB9IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufSIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgQWNjb3VudHMgfSBmcm9tICdtZXRlb3IvYWNjb3VudHMtYmFzZSc7XG5pbXBvcnQgeyBVc2VycyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvdXNlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvYXV0aC91c2VyLm1vZGVsJztcblxuaWYgKE1ldGVvci5pc1NlcnZlcikge1xuXG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgICAgICBhZGRFbWFpbDogZnVuY3Rpb24gKCBuZXdFbWFpbCA6IHN0cmluZyApIHtcbiAgICAgICAgICAgIEFjY291bnRzLmFkZEVtYWlsKE1ldGVvci51c2VySWQoKSwgbmV3RW1haWwsIHRydWUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgICAgICByZW1vdmVFbWFpbDogZnVuY3Rpb24gKCBvbGRFbWFpbCA6IHN0cmluZyApIHtcbiAgICAgICAgICAgIEFjY291bnRzLnJlbW92ZUVtYWlsKE1ldGVvci51c2VySWQoKSwgb2xkRW1haWwpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IENvdW50cmllcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2dlbmVyYWwvY291bnRyeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENvdW50cnkgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9jb3VudHJ5Lm1vZGVsJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuaW1wb3J0IHsgVGFibGVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC90YWJsZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvdGFibGUubW9kZWwnO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG5cbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIGdldENvdW50cnlCeUVzdGFibGlzaG1lbnRJZDogZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuXG4gICAgICAgICAgICBsZXQgdGFibGVzX2xlbmd0aDogbnVtYmVyO1xuICAgICAgICAgICAgbGV0IGNvdW50cnk6IENvdW50cnk7XG4gICAgICAgICAgICBsZXQgZXN0YWJsaXNobWVudDogRXN0YWJsaXNobWVudDtcblxuICAgICAgICAgICAgZXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogX2VzdGFibGlzaG1lbnRJZCB9KTtcbiAgICAgICAgICAgIGNvdW50cnkgPSBDb3VudHJpZXMuZmluZE9uZSh7IF9pZDogZXN0YWJsaXNobWVudC5jb3VudHJ5SWQgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBjb3VudHJ5Lm5hbWU7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcbmltcG9ydCB7IEVtYWlsIH0gZnJvbSAnbWV0ZW9yL2VtYWlsJztcbmltcG9ydCB7IEVtYWlsQ29udGVudHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9nZW5lcmFsL2VtYWlsLWNvbnRlbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFbWFpbENvbnRlbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9lbWFpbC1jb250ZW50Lm1vZGVsJztcbmltcG9ydCB7IExhbmdEaWN0aW9uYXJ5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2dlbmVyYWwvZW1haWwtY29udGVudC5tb2RlbCc7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50Lm1vZGVsJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvdGFibGUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBUYWJsZSB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3RhYmxlLm1vZGVsJztcbmltcG9ydCB7IFBheW1lbnRzSGlzdG9yeSB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL3BheW1lbnQvcGF5bWVudC1oaXN0b3J5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUGF5bWVudEhpc3RvcnkgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGF5bWVudC9wYXltZW50LWhpc3RvcnkubW9kZWwnO1xuaW1wb3J0IHsgVXNlcnMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci5tb2RlbCc7XG5pbXBvcnQgeyBQYXJhbWV0ZXJzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBQYXJhbWV0ZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9wYXJhbWV0ZXIubW9kZWwnO1xuaW1wb3J0IHsgU1NSIH0gZnJvbSAnbWV0ZW9yL21ldGVvcmhhY2tzOnNzcic7XG5pbXBvcnQgeyBSZXdhcmRQb2ludCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3Jld2FyZC1wb2ludC5tb2RlbCc7XG5pbXBvcnQgeyBSZXdhcmRQb2ludHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3Jld2FyZC1wb2ludC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWwsIFVzZXJSZXdhcmRQb2ludHMgfSBmcm9tICcuLi8uLi9tb2RlbHMvYXV0aC91c2VyLWRldGFpbC5tb2RlbCc7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5cblxuaWYgKE1ldGVvci5pc1NlcnZlcikge1xuICAgIE1ldGVvci5tZXRob2RzKHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gY2hhbmdlIHRoZSBmcmVlRGF5cyBmbGFnIHRvIGZhbHNlXG4gICAgICAgICAqICogQHBhcmFtIHtzdHJpbmd9IF9jb3VudHJ5SWRcbiAgICAgICAgICovXG5cbiAgICAgICAgY2hhbmdlRnJlZURheXNUb0ZhbHNlOiBmdW5jdGlvbiAoX2NvdW50cnlJZDogc3RyaW5nKSB7XG4gICAgICAgICAgICBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLnVwZGF0ZSh7IGNvdW50cnlJZDogX2NvdW50cnlJZCwgZnJlZURheXM6IHRydWUsIGlzX2JldGFfdGVzdGVyOiBmYWxzZSB9LCB7ICRzZXQ6IHsgZnJlZURheXM6IGZhbHNlIH0gfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gc2VuZCB0aGUgZW1haWwgdG8gd2FybiBmb3IgaXVyZXN0IGNoYXJnZSBzb29uXG4gICAgICAgICAqICogQHBhcmFtIHtzdHJpbmd9IF9jb3VudHJ5SWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbmRFbWFpbENoYXJnZVNvb246IGZ1bmN0aW9uIChfY291bnRyeUlkOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGxldCBwYXJhbWV0ZXI6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2Zyb21fZW1haWwnIH0pO1xuICAgICAgICAgICAgbGV0IGl1cmVzdF91cmw6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2l1cmVzdF91cmwnIH0pO1xuICAgICAgICAgICAgbGV0IGZhY2Vib29rOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICdmYWNlYm9va19saW5rJyB9KTtcbiAgICAgICAgICAgIGxldCB0d2l0dGVyOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICd0d2l0dGVyX2xpbmsnIH0pO1xuICAgICAgICAgICAgbGV0IGluc3RhZ3JhbTogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaW5zdGFncmFtX2xpbmsnIH0pO1xuICAgICAgICAgICAgbGV0IGl1cmVzdEltZ1ZhcjogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaXVyZXN0X2ltZ191cmwnIH0pO1xuXG4gICAgICAgICAgICBsZXQgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgbGV0IGxhc3RNb250aERheSA9IG5ldyBEYXRlKGN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCksIGN1cnJlbnREYXRlLmdldE1vbnRoKCkgKyAxLCAwKTtcbiAgICAgICAgICAgIGxldCBhdXhBcnJheTogc3RyaW5nW10gPSBbXTtcblxuICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY291bnRyeUlkOiBfY291bnRyeUlkLCBpc0FjdGl2ZTogdHJ1ZSwgaXNfYmV0YV90ZXN0ZXI6IGZhbHNlIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgIGxldCB1c2VyOiBVc2VyID0gVXNlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBlc3RhYmxpc2htZW50LmNyZWF0aW9uX3VzZXIgfSk7XG4gICAgICAgICAgICAgICAgbGV0IGluZGV4b2Z2YXIgPSBhdXhBcnJheS5pbmRleE9mKHVzZXIuX2lkKTtcblxuICAgICAgICAgICAgICAgIGlmIChpbmRleG9mdmFyIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBhdXhBcnJheS5wdXNoKHVzZXIuX2lkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgVXNlcnMuY29sbGVjdGlvbi5maW5kKHsgX2lkOiB7ICRpbjogYXV4QXJyYXkgfSB9KS5mb3JFYWNoKCh1c2VyOiBVc2VyKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGF1eEVzdGFibGlzaG1lbnRzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICAgICAgICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZCh7IGNyZWF0aW9uX3VzZXI6IHVzZXIuX2lkLCBpc19iZXRhX3Rlc3RlcjogZmFsc2UgfSwgeyBmaWVsZHM6IHsgX2lkOiAwLCBuYW1lOiAxIH0gfSkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4obmFtZSwgaW5kZXgsIGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1eEVzdGFibGlzaG1lbnRzLnB1c2gobmFtZS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGxldCBlbWFpbENvbnRlbnQ6IEVtYWlsQ29udGVudCA9IEVtYWlsQ29udGVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgbGFuZ3VhZ2U6IHVzZXIucHJvZmlsZS5sYW5ndWFnZV9jb2RlIH0pO1xuICAgICAgICAgICAgICAgIGxldCBncmVldFZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAnZ3JlZXRWYXInKTtcbiAgICAgICAgICAgICAgICBsZXQgZ3JlZXRpbmc6IHN0cmluZyA9ICh1c2VyLnByb2ZpbGUgJiYgdXNlci5wcm9maWxlLmZpcnN0X25hbWUpID8gKGdyZWV0VmFyICsgJyAnICsgdXNlci5wcm9maWxlLmZpcnN0X25hbWUgKyBcIixcIikgOiBncmVldFZhcjtcbiAgICAgICAgICAgICAgICBTU1IuY29tcGlsZVRlbXBsYXRlKCdjaGFyZ2VTb29uRW1haWxIdG1sJywgQXNzZXRzLmdldFRleHQoJ2NoYXJnZS1zb29uLWVtYWlsLmh0bWwnKSk7XG5cbiAgICAgICAgICAgICAgICB2YXIgZW1haWxEYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICBncmVldGluZzogZ3JlZXRpbmcsXG4gICAgICAgICAgICAgICAgICAgIHJlbWluZGVyTXNnVmFyOiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ3JlbWluZGVyQ2hhcmdlU29vbk1zZ1ZhcicpLFxuICAgICAgICAgICAgICAgICAgICBlc3RhYmxpc2htZW50TGlzdFZhcjogYXV4RXN0YWJsaXNobWVudHMudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgcmVtaW5kZXJNc2dWYXIyOiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ3JlbWluZGVyQ2hhcmdlU29vbk1zZ1ZhcjInKSxcbiAgICAgICAgICAgICAgICAgICAgZGF0ZVZhcjogTWV0ZW9yLmNhbGwoJ2NvbnZlcnREYXRlVG9TaW1wbGUnLCBsYXN0TW9udGhEYXkpLFxuICAgICAgICAgICAgICAgICAgICByZWdhcmRWYXI6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVnYXJkVmFyJyksXG4gICAgICAgICAgICAgICAgICAgIGZvbGxvd01zZ1ZhcjogTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdmb2xsb3dNc2dWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgaXVyZXN0VXJsOiBpdXJlc3RfdXJsLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBmYWNlYm9va0xpbms6IGZhY2Vib29rLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB0d2l0dGVyTGluazogdHdpdHRlci52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFncmFtTGluazogaW5zdGFncmFtLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBpdXJlc3RJbWdWYXI6IGl1cmVzdEltZ1Zhci52YWx1ZVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIEVtYWlsLnNlbmQoe1xuICAgICAgICAgICAgICAgICAgICB0bzogdXNlci5lbWFpbHNbMF0uYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogcGFyYW1ldGVyLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBzdWJqZWN0OiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2NoYXJnZVNvb25FbWFpbFN1YmplY3RWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogU1NSLnJlbmRlcignY2hhcmdlU29vbkVtYWlsSHRtbCcsIGVtYWlsRGF0YSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gc2VuZCB0aGUgZW1haWwgdG8gd2FybiBmb3IgaXVyZXN0IGV4cGlyZSBzb29uXG4gICAgICAgICAqICogQHBhcmFtIHtzdHJpbmd9IF9jb3VudHJ5SWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbmRFbWFpbEV4cGlyZVNvb246IGZ1bmN0aW9uIChfY291bnRyeUlkOiBzdHJpbmcpIHtcbiAgICAgICAgICAgIGxldCBwYXJhbWV0ZXI6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2Zyb21fZW1haWwnIH0pO1xuICAgICAgICAgICAgbGV0IGl1cmVzdF91cmw6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2l1cmVzdF91cmwnIH0pO1xuICAgICAgICAgICAgbGV0IGZhY2Vib29rOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICdmYWNlYm9va19saW5rJyB9KTtcbiAgICAgICAgICAgIGxldCB0d2l0dGVyOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICd0d2l0dGVyX2xpbmsnIH0pO1xuICAgICAgICAgICAgbGV0IGluc3RhZ3JhbTogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaW5zdGFncmFtX2xpbmsnIH0pO1xuICAgICAgICAgICAgbGV0IGl1cmVzdEltZ1ZhcjogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaXVyZXN0X2ltZ191cmwnIH0pO1xuXG4gICAgICAgICAgICBsZXQgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgbGV0IGZpcnN0TW9udGhEYXkgPSBuZXcgRGF0ZShjdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLCBjdXJyZW50RGF0ZS5nZXRNb250aCgpLCAxKTtcbiAgICAgICAgICAgIGxldCBtYXhQYXltZW50RGF5ID0gbmV3IERhdGUoZmlyc3RNb250aERheSk7XG4gICAgICAgICAgICBsZXQgZW5kRGF5ID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnZW5kX3BheW1lbnRfZGF5JyB9KTtcbiAgICAgICAgICAgIG1heFBheW1lbnREYXkuc2V0RGF0ZShtYXhQYXltZW50RGF5LmdldERhdGUoKSArIChOdW1iZXIoZW5kRGF5LnZhbHVlKSAtIDEpKTtcbiAgICAgICAgICAgIGxldCBhdXhBcnJheTogc3RyaW5nW10gPSBbXTtcblxuICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY291bnRyeUlkOiBfY291bnRyeUlkLCBpc0FjdGl2ZTogdHJ1ZSwgZnJlZURheXM6IGZhbHNlLCBpc19iZXRhX3Rlc3RlcjogZmFsc2UgfSkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFyKSB7XG4gICAgICAgICAgICAgICAgbGV0IHVzZXI6IFVzZXIgPSBVc2Vycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IGVzdGFibGlzaG1lbnQuY3JlYXRpb25fdXNlciB9KTtcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXhvZnZhciA9IGF1eEFycmF5LmluZGV4T2YodXNlci5faWQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4b2Z2YXIgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1eEFycmF5LnB1c2godXNlci5faWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBVc2Vycy5jb2xsZWN0aW9uLmZpbmQoeyBfaWQ6IHsgJGluOiBhdXhBcnJheSB9IH0pLmZvckVhY2goKHVzZXI6IFVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgYXV4RXN0YWJsaXNobWVudHM6IHN0cmluZ1tdID0gW107XG4gICAgICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY3JlYXRpb25fdXNlcjogdXNlci5faWQsIGlzQWN0aXZlOiB0cnVlLCBmcmVlRGF5czogZmFsc2UsIGlzX2JldGFfdGVzdGVyOiBmYWxzZSB9LCB7IGZpZWxkczogeyBfaWQ6IDAsIG5hbWU6IDEgfSB9KS5mb3JFYWNoKGZ1bmN0aW9uIDxFc3RhYmxpc2htZW50PihuYW1lLCBpbmRleCwgYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgYXV4RXN0YWJsaXNobWVudHMucHVzaChuYW1lLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgbGV0IGVtYWlsQ29udGVudDogRW1haWxDb250ZW50ID0gRW1haWxDb250ZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBsYW5ndWFnZTogdXNlci5wcm9maWxlLmxhbmd1YWdlX2NvZGUgfSk7XG4gICAgICAgICAgICAgICAgbGV0IGdyZWV0VmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdncmVldFZhcicpO1xuICAgICAgICAgICAgICAgIGxldCBncmVldGluZzogc3RyaW5nID0gKHVzZXIucHJvZmlsZSAmJiB1c2VyLnByb2ZpbGUuZmlyc3RfbmFtZSkgPyAoZ3JlZXRWYXIgKyAnICcgKyB1c2VyLnByb2ZpbGUuZmlyc3RfbmFtZSArIFwiLFwiKSA6IGdyZWV0VmFyO1xuICAgICAgICAgICAgICAgIFNTUi5jb21waWxlVGVtcGxhdGUoJ2V4cGlyZVNvb25FbWFpbEh0bWwnLCBBc3NldHMuZ2V0VGV4dCgnZXhwaXJlLXNvb24tZW1haWwuaHRtbCcpKTtcblxuICAgICAgICAgICAgICAgIHZhciBlbWFpbERhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIGdyZWV0aW5nOiBncmVldGluZyxcbiAgICAgICAgICAgICAgICAgICAgcmVtaW5kZXJNc2dWYXI6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyJyksXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRMaXN0VmFyOiBhdXhFc3RhYmxpc2htZW50cy50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICByZW1pbmRlck1zZ1ZhcjI6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyMicpLFxuICAgICAgICAgICAgICAgICAgICBkYXRlVmFyOiBNZXRlb3IuY2FsbCgnY29udmVydERhdGVUb1NpbXBsZScsIG1heFBheW1lbnREYXkpLFxuICAgICAgICAgICAgICAgICAgICByZW1pbmRlck1zZ1ZhcjM6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyMycpLFxuICAgICAgICAgICAgICAgICAgICByZWdhcmRWYXI6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVnYXJkVmFyJyksXG4gICAgICAgICAgICAgICAgICAgIGZvbGxvd01zZ1ZhcjogTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdmb2xsb3dNc2dWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgaXVyZXN0VXJsOiBpdXJlc3RfdXJsLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBmYWNlYm9va0xpbms6IGZhY2Vib29rLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB0d2l0dGVyTGluazogdHdpdHRlci52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFncmFtTGluazogaW5zdGFncmFtLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBpdXJlc3RJbWdWYXI6IGl1cmVzdEltZ1Zhci52YWx1ZVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIEVtYWlsLnNlbmQoe1xuICAgICAgICAgICAgICAgICAgICB0bzogdXNlci5lbWFpbHNbMF0uYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogcGFyYW1ldGVyLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBzdWJqZWN0OiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2V4cGlyZVNvb25FbWFpbFN1YmplY3RWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogU1NSLnJlbmRlcignZXhwaXJlU29vbkVtYWlsSHRtbCcsIGVtYWlsRGF0YSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gdmFsaWRhdGUgdGhlIGVzdGFibGlzaG1lbnQgcmVnaXN0ZXJlZCBpbiBoaXN0b3J5X3BheW1lbnQgYW5kIGNoYW5nZSBpc0FjdGl2ZSB0byBmYWxzZSBpZiBpcyBub3QgXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBfY291bnRyeUlkXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZUFjdGl2ZUVzdGFibGlzaG1lbnRzOiBmdW5jdGlvbiAoX2NvdW50cnlJZDogc3RyaW5nKSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudERhdGU6IERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRNb250aDogc3RyaW5nID0gKGN1cnJlbnREYXRlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRZZWFyOiBzdHJpbmcgPSBjdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCk7XG5cbiAgICAgICAgICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZCh7IGNvdW50cnlJZDogX2NvdW50cnlJZCwgaXNBY3RpdmU6IHRydWUsIGZyZWVEYXlzOiBmYWxzZSwgaXNfYmV0YV90ZXN0ZXI6IGZhbHNlIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgIGxldCBoaXN0b3J5UGF5bWVudDogUGF5bWVudEhpc3Rvcnk7XG4gICAgICAgICAgICAgICAgbGV0IGF1eEFycmF5OiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICAgICAgICAgIGF1eEFycmF5LnB1c2goZXN0YWJsaXNobWVudC5faWQpO1xuICAgICAgICAgICAgICAgIC8vaGlzdG9yeVBheW1lbnQgPSBIaXN0b3J5UGF5bWVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgZXN0YWJsaXNobWVudF9pZHM6IGVzdGFibGlzaG1lbnQuX2lkLCBtb250aDogY3VycmVudE1vbnRoLCB5ZWFyOiBjdXJyZW50WWVhciwgc3RhdHVzOiAnQVBQUk9WRUQnIH0pO1xuICAgICAgICAgICAgICAgIGhpc3RvcnlQYXltZW50ID0gUGF5bWVudHNIaXN0b3J5LmNvbGxlY3Rpb24uZmluZE9uZSh7IGVzdGFibGlzaG1lbnRfaWRzOiB7ICRpbjogYXV4QXJyYXkgfSwgbW9udGg6IGN1cnJlbnRNb250aCwgeWVhcjogY3VycmVudFllYXIsIHN0YXR1czogJ1RSQU5TQUNUSU9OX1NUQVRVUy5BUFBST1ZFRCcgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIWhpc3RvcnlQYXltZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24udXBkYXRlKHsgX2lkOiBlc3RhYmxpc2htZW50Ll9pZCwgaXNfYmV0YV90ZXN0ZXI6IGZhbHNlIH0sIHsgJHNldDogeyBpc0FjdGl2ZTogZmFsc2UsIGZpcnN0UGF5OiBmYWxzZSB9IH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIFRhYmxlcy5jb2xsZWN0aW9uLmZpbmQoeyBlc3RhYmxpc2htZW50X2lkOiBlc3RhYmxpc2htZW50Ll9pZCB9KS5mb3JFYWNoKGZ1bmN0aW9uIDxUYWJsZT4odGFibGUsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVzLmNvbGxlY3Rpb24udXBkYXRlKHsgX2lkOiB0YWJsZS5faWQgfSwgeyAkc2V0OiB7IGlzX2FjdGl2ZTogZmFsc2UgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIHNlbmQgZW1haWwgdG8gd2FybiB0aGF0IHRoZSBzZXJ2aWNlIGhhcyBleHBpcmVkXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBfY291bnRyeUlkXG4gICAgICAgICAqL1xuICAgICAgICBzZW5kRW1haWxSZXN0RXhwaXJlZDogZnVuY3Rpb24gKF9jb3VudHJ5SWQ6IHN0cmluZykge1xuICAgICAgICAgICAgbGV0IHBhcmFtZXRlcjogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnZnJvbV9lbWFpbCcgfSk7XG4gICAgICAgICAgICBsZXQgaXVyZXN0X3VybDogUGFyYW1ldGVyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaXVyZXN0X3VybCcgfSk7XG4gICAgICAgICAgICBsZXQgZmFjZWJvb2s6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2ZhY2Vib29rX2xpbmsnIH0pO1xuICAgICAgICAgICAgbGV0IHR3aXR0ZXI6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ3R3aXR0ZXJfbGluaycgfSk7XG4gICAgICAgICAgICBsZXQgaW5zdGFncmFtOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICdpbnN0YWdyYW1fbGluaycgfSk7XG4gICAgICAgICAgICBsZXQgaXVyZXN0SW1nVmFyOiBQYXJhbWV0ZXIgPSBQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICdpdXJlc3RfaW1nX3VybCcgfSk7XG5cbiAgICAgICAgICAgIGxldCBhdXhBcnJheTogc3RyaW5nW10gPSBbXTtcblxuICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY291bnRyeUlkOiBfY291bnRyeUlkLCBpc0FjdGl2ZTogZmFsc2UsIGZyZWVEYXlzOiBmYWxzZSwgZmlyc3RQYXk6IGZhbHNlLCBpc19iZXRhX3Rlc3RlcjogZmFsc2UgfSkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFyKSB7XG4gICAgICAgICAgICAgICAgbGV0IHVzZXI6IFVzZXIgPSBVc2Vycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IGVzdGFibGlzaG1lbnQuY3JlYXRpb25fdXNlciB9KTtcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXhvZnZhciA9IGF1eEFycmF5LmluZGV4T2YodXNlci5faWQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4b2Z2YXIgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1eEFycmF5LnB1c2godXNlci5faWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBVc2Vycy5jb2xsZWN0aW9uLmZpbmQoeyBfaWQ6IHsgJGluOiBhdXhBcnJheSB9IH0pLmZvckVhY2goKHVzZXI6IFVzZXIpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgYXV4RXN0YWJsaXNobWVudHM6IHN0cmluZ1tdID0gW107XG4gICAgICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY3JlYXRpb25fdXNlcjogdXNlci5faWQsIGlzQWN0aXZlOiBmYWxzZSwgZnJlZURheXM6IGZhbHNlLCBmaXJzdFBheTogZmFsc2UsIGlzX2JldGFfdGVzdGVyOiBmYWxzZSB9LCB7IGZpZWxkczogeyBfaWQ6IDAsIG5hbWU6IDEgfSB9KS5mb3JFYWNoKGZ1bmN0aW9uIDxFc3RhYmxpc2htZW50PihuYW1lLCBpbmRleCwgYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgYXV4RXN0YWJsaXNobWVudHMucHVzaChuYW1lLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgbGV0IGVtYWlsQ29udGVudDogRW1haWxDb250ZW50ID0gRW1haWxDb250ZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBsYW5ndWFnZTogdXNlci5wcm9maWxlLmxhbmd1YWdlX2NvZGUgfSk7XG4gICAgICAgICAgICAgICAgbGV0IGdyZWV0VmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdncmVldFZhcicpO1xuICAgICAgICAgICAgICAgIGxldCBncmVldGluZzogc3RyaW5nID0gKHVzZXIucHJvZmlsZSAmJiB1c2VyLnByb2ZpbGUuZmlyc3RfbmFtZSkgPyAoZ3JlZXRWYXIgKyAnICcgKyB1c2VyLnByb2ZpbGUuZmlyc3RfbmFtZSArIFwiLFwiKSA6IGdyZWV0VmFyO1xuICAgICAgICAgICAgICAgIFNTUi5jb21waWxlVGVtcGxhdGUoJ3Jlc3RFeHBpcmVkRW1haWxIdG1sJywgQXNzZXRzLmdldFRleHQoJ3Jlc3QtZXhwaXJlZC1lbWFpbC5odG1sJykpO1xuXG4gICAgICAgICAgICAgICAgdmFyIGVtYWlsRGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgZ3JlZXRpbmc6IGdyZWV0aW5nLFxuICAgICAgICAgICAgICAgICAgICByZW1pbmRlck1zZ1ZhcjogTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdyZW1pbmRlclJlc3RFeHBpcmVkVmFyJyksXG4gICAgICAgICAgICAgICAgICAgIGVzdGFibGlzaG1lbnRMaXN0VmFyOiBhdXhFc3RhYmxpc2htZW50cy50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICByZW1pbmRlck1zZ1ZhcjI6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVtaW5kZXJSZXN0RXhwaXJlZFZhcjInKSxcbiAgICAgICAgICAgICAgICAgICAgcmVtaW5kZXJNc2dWYXIzOiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ3JlbWluZGVyUmVzdEV4cGlyZWRWYXIzJyksXG4gICAgICAgICAgICAgICAgICAgIHJlZ2FyZFZhcjogTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdyZWdhcmRWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgZm9sbG93TXNnVmFyOiBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2ZvbGxvd01zZ1ZhcicpLFxuICAgICAgICAgICAgICAgICAgICBpdXJlc3RVcmw6IGl1cmVzdF91cmwudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIGZhY2Vib29rTGluazogZmFjZWJvb2sudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIHR3aXR0ZXJMaW5rOiB0d2l0dGVyLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBpbnN0YWdyYW1MaW5rOiBpbnN0YWdyYW0udmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIGl1cmVzdEltZ1ZhcjogaXVyZXN0SW1nVmFyLnZhbHVlXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgRW1haWwuc2VuZCh7XG4gICAgICAgICAgICAgICAgICAgIHRvOiB1c2VyLmVtYWlsc1swXS5hZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICBmcm9tOiBwYXJhbWV0ZXIudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIHN1YmplY3Q6IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVzdEV4cGlyZWRFbWFpbFN1YmplY3RWYXInKSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogU1NSLnJlbmRlcigncmVzdEV4cGlyZWRFbWFpbEh0bWwnLCBlbWFpbERhdGEpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgdGhlIHZhbHVlIGZyb20gRW1haWxDb250ZW50IGNvbGxlY3Rpb25cbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IF9jb3VudHJ5SWRcbiAgICAgICAgICogQHJldHVybiB7c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0RW1haWxDb250ZW50KF9sYW5nRGljdGlvbmFyeTogTGFuZ0RpY3Rpb25hcnlbXSwgX2xhYmVsOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICAgICAgbGV0IHZhbHVlID0gX2xhbmdEaWN0aW9uYXJ5LmZpbHRlcihmdW5jdGlvbiAod29yZFRyYWR1Y2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdvcmRUcmFkdWNlZC5sYWJlbCA9PSBfbGFiZWw7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZVswXS50cmFkdWN0aW9uO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBjb252ZXJ0IHRoZSBkYXkgYW5kIHJldHVybmluZyBpbiBmb3JtYXQgeXl5eS1tLWRcbiAgICAgICAgICogQHBhcmFtIHtEYXRlfSBfZGF0ZVxuICAgICAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAgICAgICAqL1xuICAgICAgICBjb252ZXJ0RGF0ZVRvU2ltcGxlOiBmdW5jdGlvbiAoX2RhdGU6IERhdGUpIHtcbiAgICAgICAgICAgIGxldCB5ZWFyID0gX2RhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgIGxldCBtb250aCA9IF9kYXRlLmdldE1vbnRoKCkgKyAxO1xuICAgICAgICAgICAgbGV0IGRheSA9IF9kYXRlLmdldERhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBkYXkudG9TdHJpbmcoKSArICcvJyArIG1vbnRoLnRvU3RyaW5nKCkgKyAnLycgKyB5ZWFyLnRvU3RyaW5nKCk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIHZhbGlkYXRlIHRoZSBkYXRlIG9mIHBvaW50cyB0byBleHBpcmUgXG4gICAgICAgICAqL1xuICAgICAgICBjaGVja1BvaW50c1RvRXhwaXJlKF9jb3VudHJ5SWQ6IHN0cmluZykge1xuICAgICAgICAgICAgbGV0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcblxuICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY291bnRyeUlkOiBfY291bnRyeUlkIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy5jb2xsZWN0aW9uLmZpbmQoeyBlc3RhYmxpc2htZW50X2lkOiBlc3RhYmxpc2htZW50Ll9pZCwgaXNfYWN0aXZlOiB0cnVlIH0pLmZvckVhY2goZnVuY3Rpb24gPFJld2FyZFBvaW50PihyZXdhcmRQb2ludCwgaW5kZXgsIGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXdhcmRQb2ludERheU1vcmUgPSByZXdhcmRQb2ludC5leHBpcmVfZGF0ZS5nZXREYXRlKCkgKyAxO1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmV3YXJkUG9pbnREYXRlID0gbmV3IERhdGUocmV3YXJkUG9pbnQuZXhwaXJlX2RhdGUuZ2V0RnVsbFllYXIoKSwgcmV3YXJkUG9pbnQuZXhwaXJlX2RhdGUuZ2V0TW9udGgoKSwgcmV3YXJkUG9pbnREYXlNb3JlKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoKHJld2FyZFBvaW50RGF0ZS5nZXRGdWxsWWVhcigpID09PSBjdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKHJld2FyZFBvaW50RGF0ZS5nZXRNb250aCgpID09PSBjdXJyZW50RGF0ZS5nZXRNb250aCgpKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKHJld2FyZFBvaW50RGF0ZS5nZXREYXRlKCkgPT09IGN1cnJlbnREYXRlLmdldERhdGUoKSkpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlVG9TdWJ0cmFjdDogbnVtYmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJld2FyZFBvaW50LmRpZmZlcmVuY2UgPT09IDAgfHwgcmV3YXJkUG9pbnQuZGlmZmVyZW5jZSA9PT0gbnVsbCB8fCByZXdhcmRQb2ludC5kaWZmZXJlbmNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVRvU3VidHJhY3QgPSByZXdhcmRQb2ludC5wb2ludHM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlVG9TdWJ0cmFjdCA9IHJld2FyZFBvaW50LmRpZmZlcmVuY2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFJld2FyZFBvaW50cy5jb2xsZWN0aW9uLnVwZGF0ZSh7IF9pZDogcmV3YXJkUG9pbnQuX2lkIH0sIHsgJHNldDogeyBpc19hY3RpdmU6IGZhbHNlIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdXNlckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiByZXdhcmRQb2ludC5pZF91c2VyIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHVzZXJSZXdhcmRQb2ludHM6IFVzZXJSZXdhcmRQb2ludHMgPSB1c2VyRGV0YWlsLnJld2FyZF9wb2ludHMuZmluZCh1c3JQb2ludHMgPT4gdXNyUG9pbnRzLmVzdGFibGlzaG1lbnRfaWQgPT09IHJld2FyZFBvaW50LmVzdGFibGlzaG1lbnRfaWQpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyRGV0YWlscy51cGRhdGUoeyB1c2VyX2lkOiByZXdhcmRQb2ludC5pZF91c2VyLCAncmV3YXJkX3BvaW50cy5lc3RhYmxpc2htZW50X2lkJzogcmV3YXJkUG9pbnQuZXN0YWJsaXNobWVudF9pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgJHNldDogeyAncmV3YXJkX3BvaW50cy4kLnBvaW50cyc6ICh1c2VyUmV3YXJkUG9pbnRzLnBvaW50cyAtIHZhbHVlVG9TdWJ0cmFjdCkgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcbmltcG9ydCB7IEVtYWlsIH0gZnJvbSAnbWV0ZW9yL2VtYWlsJztcbmltcG9ydCB7IEVtYWlsQ29udGVudHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9nZW5lcmFsL2VtYWlsLWNvbnRlbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFbWFpbENvbnRlbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9lbWFpbC1jb250ZW50Lm1vZGVsJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuaW1wb3J0IHsgVXNlcnMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci5tb2RlbCc7XG5pbXBvcnQgeyBQYXJhbWV0ZXJzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBQYXJhbWV0ZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9wYXJhbWV0ZXIubW9kZWwnO1xuaW1wb3J0IHsgU1NSIH0gZnJvbSAnbWV0ZW9yL21ldGVvcmhhY2tzOnNzcic7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyh7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIHZhbGlkYXRlIGlmIGVzdGFibGlzaG1lbnQgdHJpYWwgcGVyaW9kIGhhcyBlbmRlZFxuICAgICAgICAgKi9cbiAgICAgICAgdmFsaWRhdGVUcmlhbFBlcmlvZDogZnVuY3Rpb24gKF9jb3VudHJ5SWQ6IHN0cmluZykge1xuXG4gICAgICAgICAgICB2YXIgY3VycmVudERhdGU6IERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRTdHJpbmc6IHN0cmluZyA9IE1ldGVvci5jYWxsKCdjb252ZXJ0RGF0ZScsIGN1cnJlbnREYXRlKTtcbiAgICAgICAgICAgIHZhciB0cmlhbERheXM6IG51bWJlciA9IE51bWJlci5wYXJzZUludChQYXJhbWV0ZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IG5hbWU6ICd0cmlhbF9kYXlzJyB9KS52YWx1ZSk7XG4gICAgICAgICAgICB2YXIgZmlyc3RBZHZpY2VEYXlzOiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnZmlyc3RfYWR2aWNlX2RheXMnIH0pLnZhbHVlKTtcbiAgICAgICAgICAgIHZhciBzZWNvbmRBZHZpY2VEYXlzOiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnc2Vjb25kX2FkdmljZV9kYXlzJyB9KS52YWx1ZSk7XG4gICAgICAgICAgICB2YXIgdGhpcmRBZHZpY2VEYXlzOiBudW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAndGhpcmRfYWR2aWNlX2RheXMnIH0pLnZhbHVlKTtcblxuICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgY291bnRyeUlkOiBfY291bnRyeUlkLCBpc0FjdGl2ZTogdHJ1ZSwgdHN0UGVyaW9kOiB0cnVlIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICAgICAgICAgIGxldCBkaWZmID0gTWF0aC5yb3VuZCgoY3VycmVudERhdGUudmFsdWVPZigpIC0gZXN0YWJsaXNobWVudC5jcmVhdGlvbl9kYXRlLnZhbHVlT2YoKSkgLyAoMTAwMCAqIDYwICogNjAgKiAyNCkpO1xuICAgICAgICAgICAgICAgIGxldCBmb3J3YXJkRGF0ZTogRGF0ZSA9IE1ldGVvci5jYWxsKCdhZGREYXlzJywgZXN0YWJsaXNobWVudC5jcmVhdGlvbl9kYXRlLCB0cmlhbERheXMpO1xuICAgICAgICAgICAgICAgIGxldCBmb3J3YXJkU3RyaW5nOiBzdHJpbmcgPSBNZXRlb3IuY2FsbCgnY29udmVydERhdGUnLCBmb3J3YXJkRGF0ZSk7XG4gICAgICAgICAgICAgICAgbGV0IGZpcnN0QWR2aWNlRGF0ZTogRGF0ZSA9IE1ldGVvci5jYWxsKCdzdWJzdHJhY3REYXlzJywgZm9yd2FyZERhdGUsIGZpcnN0QWR2aWNlRGF5cyk7XG4gICAgICAgICAgICAgICAgbGV0IGZpcnN0QWR2aWNlU3RyaW5nOiBzdHJpbmcgPSBNZXRlb3IuY2FsbCgnY29udmVydERhdGUnLCBmaXJzdEFkdmljZURhdGUpO1xuICAgICAgICAgICAgICAgIGxldCBzZWNvbmRBZHZpY2VEYXRlOiBEYXRlID0gTWV0ZW9yLmNhbGwoJ3N1YnN0cmFjdERheXMnLCBmb3J3YXJkRGF0ZSwgc2Vjb25kQWR2aWNlRGF5cyk7XG4gICAgICAgICAgICAgICAgbGV0IHNlY29uZEFkdmljZVN0cmluZzogc3RyaW5nID0gTWV0ZW9yLmNhbGwoJ2NvbnZlcnREYXRlJywgc2Vjb25kQWR2aWNlRGF0ZSk7XG4gICAgICAgICAgICAgICAgbGV0IHRoaXJkQWR2aWNlRGF0ZTogRGF0ZSA9IE1ldGVvci5jYWxsKCdzdWJzdHJhY3REYXlzJywgZm9yd2FyZERhdGUsIHRoaXJkQWR2aWNlRGF5cyk7XG4gICAgICAgICAgICAgICAgbGV0IHRoaXJkQWR2aWNlU3RyaW5nOiBzdHJpbmcgPSBNZXRlb3IuY2FsbCgnY29udmVydERhdGUnLCB0aGlyZEFkdmljZURhdGUpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGRpZmYgPiB0cmlhbERheXMpIHtcbiAgICAgICAgICAgICAgICAgICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi51cGRhdGUoeyBfaWQ6IGVzdGFibGlzaG1lbnQuX2lkIH0sIHsgJHNldDogeyBpc0FjdGl2ZTogZmFsc2UsIHRzdFBlcmlvZDogZmFsc2UgfSB9KVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RyaW5nID09IGZpcnN0QWR2aWNlU3RyaW5nIHx8IGN1cnJlbnRTdHJpbmcgPT0gc2Vjb25kQWR2aWNlU3RyaW5nIHx8IGN1cnJlbnRTdHJpbmcgPT0gdGhpcmRBZHZpY2VTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1ldGVvci5jYWxsKCdzZW5kVHJpYWxFbWFpbCcsIGVzdGFibGlzaG1lbnQuY3JlYXRpb25fdXNlciwgZm9yd2FyZFN0cmluZyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIFwiZW1haWxTZW5kXCI7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGlzIGZ1bmN0aW9uIGNvbnZlcnQgdGhlIGRheSBhbmQgcmV0dXJuaW5nIGluIGZvcm1hdCB5eXl5LW0tZFxuICAgICAgICAgKi9cbiAgICAgICAgY29udmVydERhdGU6IGZ1bmN0aW9uIChfZGF0ZTogRGF0ZSkge1xuICAgICAgICAgICAgbGV0IHllYXIgPSBfZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgbGV0IG1vbnRoID0gX2RhdGUuZ2V0TW9udGgoKSArIDE7XG4gICAgICAgICAgICBsZXQgZGF5ID0gX2RhdGUuZ2V0RGF0ZSgpO1xuXG4gICAgICAgICAgICByZXR1cm4geWVhci50b1N0cmluZygpICsgJy0nICsgbW9udGgudG9TdHJpbmcoKSArICctJyArIGRheS50b1N0cmluZygpO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBhZGQgZGF5cyB0byB0aGUgcGFzc2VkIGRhdGVcbiAgICAgICAgICovXG4gICAgICAgIGFkZERheXM6IGZ1bmN0aW9uIChfZGF0ZTogRGF0ZSwgX2RheXM6IG51bWJlcikge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKF9kYXRlKTtcbiAgICAgICAgICAgIHJlc3VsdC5zZXREYXRlKHJlc3VsdC5nZXREYXRlKCkgKyBfZGF5cyk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBzdWJzdHJhY3QgZGF5cyB0byB0aGUgcGFzc2VkIGRhdGVcbiAgICAgICAgICovXG4gICAgICAgIHN1YnN0cmFjdERheXM6IGZ1bmN0aW9uIChfZGF0ZTogRGF0ZSwgX2RheXM6IG51bWJlcikge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKF9kYXRlKTtcbiAgICAgICAgICAgIHJlc3VsdC5zZXREYXRlKHJlc3VsdC5nZXREYXRlKCkgLSBfZGF5cyk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBzZW5kIGRlIGVtYWlsIHRvIHRoZSBhY2NvdW50IGFkbWluIHJlZ2lzdGVyZWQgaWYgdHJpYWwgcGVyaW9kIGlzIGdvaW5nIHRvIGVuZFxuICAgICAgICAgKi9cbiAgICAgICAgc2VuZFRyaWFsRW1haWw6IGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcsIF9mb3J3YXJkRGF0ZTogc3RyaW5nKSB7XG4gICAgICAgICAgICBsZXQgdXNlcjogVXNlciA9IFVzZXJzLmNvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogX3VzZXJJZCB9KTtcbiAgICAgICAgICAgIGxldCBwYXJhbWV0ZXI6IFBhcmFtZXRlciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2Zyb21fZW1haWwnIH0pO1xuICAgICAgICAgICAgbGV0IGVtYWlsQ29udGVudDogRW1haWxDb250ZW50ID0gRW1haWxDb250ZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBsYW5ndWFnZTogdXNlci5wcm9maWxlLmxhbmd1YWdlX2NvZGUgfSk7XG4gICAgICAgICAgICB2YXIgdHJpYWxfZW1haWxfc3ViamVjdDogc3RyaW5nID0gZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeVswXS50cmFkdWN0aW9uO1xuICAgICAgICAgICAgdmFyIGdyZWV0aW5nOiBzdHJpbmcgPSAodXNlci5wcm9maWxlICYmIHVzZXIucHJvZmlsZS5maXJzdF9uYW1lKSA/IChlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5WzFdLnRyYWR1Y3Rpb24gKyAnICcgKyB1c2VyLnByb2ZpbGUuZmlyc3RfbmFtZSArIFwiLFwiKSA6IGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnlbMV0udHJhZHVjdGlvbjtcblxuICAgICAgICAgICAgU1NSLmNvbXBpbGVUZW1wbGF0ZSgnaHRtbEVtYWlsJywgQXNzZXRzLmdldFRleHQoJ2h0bWwtZW1haWwuaHRtbCcpKTtcblxuICAgICAgICAgICAgdmFyIGVtYWlsRGF0YSA9IHtcbiAgICAgICAgICAgICAgICBncmVldGluZzogZ3JlZXRpbmcsXG4gICAgICAgICAgICAgICAgcmVtaW5kZXJNc2dWYXI6IGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnlbN10udHJhZHVjdGlvbixcbiAgICAgICAgICAgICAgICBkYXRlVmFyOiBfZm9yd2FyZERhdGUsXG4gICAgICAgICAgICAgICAgaW5zdHJ1Y3Rpb25Nc2dWYXI6IGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnlbOF0udHJhZHVjdGlvbixcbiAgICAgICAgICAgICAgICByZWdhcmRWYXI6IGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnlbNV0udHJhZHVjdGlvbixcbiAgICAgICAgICAgICAgICBmb2xsb3dNc2dWYXI6IGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnlbNl0udHJhZHVjdGlvblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBFbWFpbC5zZW5kKHtcbiAgICAgICAgICAgICAgICB0bzogdXNlci5lbWFpbHNbMF0uYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBmcm9tOiBwYXJhbWV0ZXIudmFsdWUsXG4gICAgICAgICAgICAgICAgc3ViamVjdDogdHJpYWxfZW1haWxfc3ViamVjdCxcbiAgICAgICAgICAgICAgICBodG1sOiBTU1IucmVuZGVyKCdodG1sRW1haWwnLCBlbWFpbERhdGEpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFBheW1lbnRzSGlzdG9yeSB9IGZyb20gJy4uLy4uL2NvbGxlY3Rpb25zL3BheW1lbnQvcGF5bWVudC1oaXN0b3J5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9jb3VudHJ5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ2l0aWVzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9jaXR5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgSW52b2ljZXNJbmZvIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvcGF5bWVudC9pbnZvaWNlcy1pbmZvLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgSXVyZXN0SW52b2ljZXMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9wYXltZW50L2l1cmVzdC1pbnZvaWNlcy5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFBhcmFtZXRlcnMgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9nZW5lcmFsL3BhcmFtZXRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENvbXBhbnlJbmZvLCBDbGllbnRJbmZvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3BheW1lbnQvaXVyZXN0LWludm9pY2UubW9kZWwnO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBhbGxvdyBnZW5lcmF0ZSBpdXJlc3QgaW52b2ljZSBmb3IgYWRtaW4gZXN0YWJsaXNobWVudFxuICAgICAgICAgKiBAcGFyYW0geyBzdHJpbmcgfSBfcGF5bWVudEhpc3RvcnlJZFxuICAgICAgICAgKiBAcGFyYW0geyBzdHJpbmcgfSBfdXNlcklkIFxuICAgICAgICAgKi9cbiAgICAgICAgZ2VuZXJhdGVJbnZvaWNlSW5mbzogZnVuY3Rpb24gKF9wYXltZW50SGlzdG9yeUlkOiBzdHJpbmcsIF91c2VySWQ6IHN0cmluZykge1xuXG4gICAgICAgICAgICBsZXQgX2N1cnJlbnREYXRlOiBEYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGxldCBfZmlyc3RNb250aERheTogRGF0ZSA9IG5ldyBEYXRlKF9jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLCBfY3VycmVudERhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICAgICAgICBsZXQgX2xhc3RNb250aERheTogRGF0ZSA9IG5ldyBEYXRlKF9jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLCBfY3VycmVudERhdGUuZ2V0TW9udGgoKSArIDEsIDApO1xuXG4gICAgICAgICAgICBsZXQgbFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICAgICAgICAgIGxldCBsQ291bnRyeSA9IENvdW50cmllcy5maW5kT25lKHsgX2lkOiBsVXNlckRldGFpbC5jb3VudHJ5X2lkIH0pO1xuICAgICAgICAgICAgbGV0IGxDaXR5ID0gQ2l0aWVzLmZpbmRPbmUoeyBfaWQ6IGxVc2VyRGV0YWlsLmNpdHlfaWQgfSk7XG4gICAgICAgICAgICBsZXQgbFBheW1lbnRIaXN0b3J5ID0gUGF5bWVudHNIaXN0b3J5LmZpbmRPbmUoeyBfaWQ6IF9wYXltZW50SGlzdG9yeUlkIH0pO1xuICAgICAgICAgICAgbGV0IGludm9pY2VJbmZvID0gSW52b2ljZXNJbmZvLmZpbmRPbmUoeyBjb3VudHJ5X2lkOiBsQ291bnRyeS5faWQgfSk7XG5cbiAgICAgICAgICAgIGxldCB2YXJfcmVzb2x1dGlvbjogc3RyaW5nO1xuICAgICAgICAgICAgbGV0IHZhcl9wcmVmaXg6IHN0cmluZztcbiAgICAgICAgICAgIGxldCB2YXJfc3RhcnRfdmFsdWU6IG51bWJlcjtcbiAgICAgICAgICAgIGxldCB2YXJfY3VycmVudF92YWx1ZTogbnVtYmVyO1xuICAgICAgICAgICAgbGV0IHZhcl9lbmRfdmFsdWU6IG51bWJlcjtcbiAgICAgICAgICAgIGxldCB2YXJfc3RhcnRfZGF0ZTogRGF0ZTtcbiAgICAgICAgICAgIGxldCB2YXJfZW5kX2RhdGU6IERhdGU7XG4gICAgICAgICAgICBsZXQgdmFyX2VuYWJsZV90d286IGJvb2xlYW47XG4gICAgICAgICAgICBsZXQgdmFyX3N0YXJ0X25ldzogYm9vbGVhbjtcblxuICAgICAgICAgICAgbGV0IGNvbXBhbnlfbmFtZSA9IFBhcmFtZXRlcnMuZmluZE9uZSh7IG5hbWU6ICdjb21wYW55X25hbWUnIH0pLnZhbHVlO1xuICAgICAgICAgICAgbGV0IGNvbXBhbnlfYWRkcmVzcyA9IFBhcmFtZXRlcnMuZmluZE9uZSh7IG5hbWU6ICdjb21wYW55X2FkZHJlc3MnIH0pLnZhbHVlO1xuICAgICAgICAgICAgbGV0IGNvbXBhbnlfcGhvbmUgPSBQYXJhbWV0ZXJzLmZpbmRPbmUoeyBuYW1lOiAnY29tcGFueV9waG9uZScgfSkudmFsdWU7XG4gICAgICAgICAgICBsZXQgY29tcGFueV9jb3VudHJ5ID0gUGFyYW1ldGVycy5maW5kT25lKHsgbmFtZTogJ2NvbXBhbnlfY291bnRyeScgfSkudmFsdWU7XG4gICAgICAgICAgICBsZXQgY29tcGFueV9jaXR5ID0gUGFyYW1ldGVycy5maW5kT25lKHsgbmFtZTogJ2NvbXBhbnlfY2l0eScgfSkudmFsdWU7XG4gICAgICAgICAgICBsZXQgY29tcGFueV9uaXQgPSBQYXJhbWV0ZXJzLmZpbmRPbmUoeyBuYW1lOiAnY29tcGFueV9uaXQnIH0pLnZhbHVlO1xuICAgICAgICAgICAgbGV0IGNvbXBhbnlfcmVnaW1lID0gUGFyYW1ldGVycy5maW5kT25lKHsgbmFtZTogJ2NvbXBhbnlfcmVnaW1lJyB9KS52YWx1ZTtcbiAgICAgICAgICAgIGxldCBjb21wYW55X2NvbnRyaWJ1dGlvbiA9IFBhcmFtZXRlcnMuZmluZE9uZSh7IG5hbWU6ICdjb21wYW55X2NvbnRyaWJ1dGlvbicgfSkudmFsdWU7XG4gICAgICAgICAgICBsZXQgY29tcGFueV9yZXRhaW5lciA9IFBhcmFtZXRlcnMuZmluZE9uZSh7IG5hbWU6ICdjb21wYW55X3JldGFpbmVyJyB9KS52YWx1ZTtcbiAgICAgICAgICAgIGxldCBjb21wYW55X2FnZW50X3JldGFpbmVyID0gUGFyYW1ldGVycy5maW5kT25lKHsgbmFtZTogJ2NvbXBhbnlfYWdlbnRfcmV0YWluZXInIH0pLnZhbHVlO1xuICAgICAgICAgICAgbGV0IGludm9pY2VfZ2VuZXJhdGVkX21zZyA9IFBhcmFtZXRlcnMuZmluZE9uZSh7IG5hbWU6ICdpbnZvaWNlX2dlbmVyYXRlZF9tc2cnIH0pLnZhbHVlO1xuXG4gICAgICAgICAgICAvL0dlbmVyYXRlIGNvbnNlY3V0aXZlXG4gICAgICAgICAgICBpZiAoaW52b2ljZUluZm8uZW5hYmxlX3R3byA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGlmIChpbnZvaWNlSW5mby5zdGFydF9uZXdfdmFsdWUgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXJfY3VycmVudF92YWx1ZSA9IGludm9pY2VJbmZvLnN0YXJ0X3ZhbHVlX29uZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyX2VuYWJsZV90d28gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyX3N0YXJ0X25ldyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhcl9jdXJyZW50X3ZhbHVlID0gaW52b2ljZUluZm8uY3VycmVudF92YWx1ZSArIDE7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YXJfY3VycmVudF92YWx1ZSA9PSBpbnZvaWNlSW5mby5lbmRfdmFsdWVfb25lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJfZW5hYmxlX3R3byA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJfc3RhcnRfbmV3ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcl9lbmFibGVfdHdvID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJfc3RhcnRfbmV3ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyX3Jlc29sdXRpb24gPSBpbnZvaWNlSW5mby5yZXNvbHV0aW9uX29uZTtcbiAgICAgICAgICAgICAgICB2YXJfcHJlZml4ID0gaW52b2ljZUluZm8ucHJlZml4X29uZTtcbiAgICAgICAgICAgICAgICB2YXJfc3RhcnRfdmFsdWUgPSBpbnZvaWNlSW5mby5zdGFydF92YWx1ZV9vbmU7XG4gICAgICAgICAgICAgICAgdmFyX2VuZF92YWx1ZSA9IGludm9pY2VJbmZvLmVuZF92YWx1ZV9vbmU7XG4gICAgICAgICAgICAgICAgdmFyX3N0YXJ0X2RhdGUgPSBpbnZvaWNlSW5mby5zdGFydF9kYXRlX29uZTtcbiAgICAgICAgICAgICAgICB2YXJfZW5kX2RhdGUgPSBpbnZvaWNlSW5mby5lbmRfZGF0ZV9vbmU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChpbnZvaWNlSW5mby5zdGFydF9uZXdfdmFsdWUgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXJfY3VycmVudF92YWx1ZSA9IGludm9pY2VJbmZvLnN0YXJ0X3ZhbHVlX3R3bztcbiAgICAgICAgICAgICAgICAgICAgdmFyX2VuYWJsZV90d28gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB2YXJfc3RhcnRfbmV3ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyX2N1cnJlbnRfdmFsdWUgPSBpbnZvaWNlSW5mby5jdXJyZW50X3ZhbHVlICsgMTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhcl9jdXJyZW50X3ZhbHVlID09IGludm9pY2VJbmZvLmVuZF92YWx1ZV90d28pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcl9lbmFibGVfdHdvID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJfc3RhcnRfbmV3ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcl9lbmFibGVfdHdvID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcl9zdGFydF9uZXcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXJfcmVzb2x1dGlvbiA9IGludm9pY2VJbmZvLnJlc29sdXRpb25fdHdvO1xuICAgICAgICAgICAgICAgIHZhcl9wcmVmaXggPSBpbnZvaWNlSW5mby5wcmVmaXhfdHdvO1xuICAgICAgICAgICAgICAgIHZhcl9zdGFydF92YWx1ZSA9IGludm9pY2VJbmZvLnN0YXJ0X3ZhbHVlX3R3bztcbiAgICAgICAgICAgICAgICB2YXJfZW5kX3ZhbHVlID0gaW52b2ljZUluZm8uZW5kX3ZhbHVlX3R3bztcbiAgICAgICAgICAgICAgICB2YXJfc3RhcnRfZGF0ZSA9IGludm9pY2VJbmZvLnN0YXJ0X2RhdGVfdHdvO1xuICAgICAgICAgICAgICAgIHZhcl9lbmRfZGF0ZSA9IGludm9pY2VJbmZvLmVuZF9kYXRlX3R3bztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgSW52b2ljZXNJbmZvLmNvbGxlY3Rpb24udXBkYXRlKHsgX2lkOiBpbnZvaWNlSW5mby5faWQgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICRzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IHZhcl9jdXJyZW50X3ZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlX3R3bzogdmFyX2VuYWJsZV90d28sXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydF9uZXdfdmFsdWU6IHZhcl9zdGFydF9uZXdcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBsZXQgY29tcGFueV9pbmZvOiBDb21wYW55SW5mbyA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBjb21wYW55X25hbWUsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogY29tcGFueV9hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHBob25lOiBjb21wYW55X3Bob25lLFxuICAgICAgICAgICAgICAgIGNvdW50cnk6IGNvbXBhbnlfY291bnRyeSxcbiAgICAgICAgICAgICAgICBjaXR5OiBjb21wYW55X2NpdHksXG4gICAgICAgICAgICAgICAgbml0OiBjb21wYW55X25pdCxcbiAgICAgICAgICAgICAgICByZWdpbWU6IGNvbXBhbnlfcmVnaW1lLFxuICAgICAgICAgICAgICAgIGNvbnRyaWJ1dGlvbjogY29tcGFueV9jb250cmlidXRpb24sXG4gICAgICAgICAgICAgICAgcmV0YWluZXI6IGNvbXBhbnlfcmV0YWluZXIsXG4gICAgICAgICAgICAgICAgYWdlbnRfcmV0YWludGVyOiBjb21wYW55X2FnZW50X3JldGFpbmVyLFxuICAgICAgICAgICAgICAgIHJlc29sdXRpb25fbnVtYmVyOiB2YXJfcmVzb2x1dGlvbixcbiAgICAgICAgICAgICAgICByZXNvbHV0aW9uX3ByZWZpeDogdmFyX3ByZWZpeCxcbiAgICAgICAgICAgICAgICByZXNvbHV0aW9uX3N0YXJ0X2RhdGU6IHZhcl9zdGFydF9kYXRlLFxuICAgICAgICAgICAgICAgIHJlc29sdXRpb25fZW5kX2RhdGU6IHZhcl9lbmRfZGF0ZSxcbiAgICAgICAgICAgICAgICByZXNvbHV0aW9uX3N0YXJ0X3ZhbHVlOiB2YXJfc3RhcnRfdmFsdWUudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICByZXNvbHV0aW9uX2VuZF92YWx1ZTogdmFyX2VuZF92YWx1ZS50b1N0cmluZygpXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBsZXQgYXV4Q2l0eSA9IGxVc2VyRGV0YWlsLmNpdHlfaWQgPT09ICcnIHx8IGxVc2VyRGV0YWlsLmNpdHlfaWQgPT09IG51bGwgfHwgbFVzZXJEZXRhaWwuY2l0eV9pZCA9PT0gdW5kZWZpbmVkID8gbFVzZXJEZXRhaWwub3RoZXJfY2l0eSA6IGxDaXR5Lm5hbWU7XG5cbiAgICAgICAgICAgIGxldCBjbGllbnRfaW5mbzogQ2xpZW50SW5mbyA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBNZXRlb3IudXNlcigpLnByb2ZpbGUuZmlyc3RfbmFtZSArICcgJyArIE1ldGVvci51c2VyKCkucHJvZmlsZS5sYXN0X25hbWUsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogbFVzZXJEZXRhaWwuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBjaXR5OiBhdXhDaXR5LFxuICAgICAgICAgICAgICAgIGNvdW50cnk6IGxDb3VudHJ5Lm5hbWUsXG4gICAgICAgICAgICAgICAgaWRlbnRpZmljYXRpb246IGxVc2VyRGV0YWlsLmRuaV9udW1iZXIsXG4gICAgICAgICAgICAgICAgcGhvbmU6IGxVc2VyRGV0YWlsLmNvbnRhY3RfcGhvbmUsXG4gICAgICAgICAgICAgICAgZW1haWw6IE1ldGVvci51c2VyKCkuZW1haWxzWzBdLmFkZHJlc3NcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIEl1cmVzdEludm9pY2VzLmNvbGxlY3Rpb24uaW5zZXJ0KHtcbiAgICAgICAgICAgICAgICBjcmVhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCksXG4gICAgICAgICAgICAgICAgY3JlYXRpb25fZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICBwYXltZW50X2hpc3RvcnlfaWQ6IGxQYXltZW50SGlzdG9yeS5faWQsXG4gICAgICAgICAgICAgICAgY291bnRyeV9pZDogbENvdW50cnkuX2lkLFxuICAgICAgICAgICAgICAgIG51bWJlcjogdmFyX2N1cnJlbnRfdmFsdWUudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0aW9uX2RhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgcGF5bWVudF9tZXRob2Q6ICdSRVNfUEFZTUVOVF9ISVNUT1JZLkNDX1BBWU1FTlRfTUVUSE9EJyxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1JFU19QQVlNRU5UX0hJU1RPUlkuREVTQ1JJUFRJT04nLFxuICAgICAgICAgICAgICAgIHBlcmlvZDogX2ZpcnN0TW9udGhEYXkuZ2V0RGF0ZSgpICsgJy8nICsgKF9maXJzdE1vbnRoRGF5LmdldE1vbnRoKCkgKyAxKSArICcvJyArIF9maXJzdE1vbnRoRGF5LmdldEZ1bGxZZWFyKCkgK1xuICAgICAgICAgICAgICAgICAgICAnIC0gJyArIF9sYXN0TW9udGhEYXkuZ2V0RGF0ZSgpICsgJy8nICsgKF9sYXN0TW9udGhEYXkuZ2V0TW9udGgoKSArIDEpICsgJy8nICsgX2xhc3RNb250aERheS5nZXRGdWxsWWVhcigpLFxuICAgICAgICAgICAgICAgIGFtb3VudF9ub19pdmE6IE1ldGVvci5jYWxsKCdnZXRSZXR1cm5CYXNlJywgbFBheW1lbnRIaXN0b3J5LnBheW1lbnRWYWx1ZSkudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBzdWJ0b3RhbDogXCIwXCIsXG4gICAgICAgICAgICAgICAgaXZhOiBcIjBcIixcbiAgICAgICAgICAgICAgICB0b3RhbDogbFBheW1lbnRIaXN0b3J5LnBheW1lbnRWYWx1ZS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIGN1cnJlbmN5OiBsUGF5bWVudEhpc3RvcnkuY3VycmVuY3ksXG4gICAgICAgICAgICAgICAgY29tcGFueV9pbmZvOiBjb21wYW55X2luZm8sXG4gICAgICAgICAgICAgICAgY2xpZW50X2luZm86IGNsaWVudF9pbmZvLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlZF9jb21wdXRlcl9tc2c6IGludm9pY2VfZ2VuZXJhdGVkX21zZ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAqIFRoaXMgZnVuY3Rpb24gZ2V0cyB0aGUgdGF4IHZhbHVlIGFjY29yZGluZyB0byB0aGUgdmFsdWVcbiAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gX3BheW1lbnRWYWx1ZVxuICAgICAgICAqL1xuICAgICAgICBnZXRWYWx1ZVRheDogZnVuY3Rpb24gKF9wYXltZW50VmFsdWU6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgICAgICBsZXQgcGFyYW1ldGVyVGF4ID0gUGFyYW1ldGVycy5maW5kT25lKHsgbmFtZTogJ2NvbG9tYmlhX3RheF9pdmEnIH0pO1xuICAgICAgICAgICAgbGV0IHBlcmNlbnRWYWx1ZSA9IE51bWJlcihwYXJhbWV0ZXJUYXgudmFsdWUpO1xuICAgICAgICAgICAgcmV0dXJuIChfcGF5bWVudFZhbHVlICogcGVyY2VudFZhbHVlKSAvIDEwMDtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICogVGhpcyBmdW5jdGlvbiBnZXRzIHRoZSB0YXggdmFsdWUgYWNjb3JkaW5nIHRvIHRoZSB2YWx1ZVxuICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBfcGF5bWVudFZhbHVlXG4gICAgICAgICovXG4gICAgICAgIGdldFJldHVybkJhc2U6IGZ1bmN0aW9uIChfcGF5bWVudFZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICAgICAgbGV0IGFtb3VudFBlcmNlbnQ6IG51bWJlciA9IE1ldGVvci5jYWxsKCdnZXRWYWx1ZVRheCcsIF9wYXltZW50VmFsdWUpO1xuICAgICAgICAgICAgcmV0dXJuIF9wYXltZW50VmFsdWUgLSBhbW91bnRQZXJjZW50O1xuICAgICAgICB9XG4gICAgfSk7XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5pbXBvcnQgeyBQYXJhbWV0ZXJzIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBQYXJhbWV0ZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9wYXJhbWV0ZXIubW9kZWwnO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG4gICAgTWV0ZW9yLm1ldGhvZHMoe1xuXG4gICAgfSk7XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBPbmVTaWduYWwgfSBmcm9tICdtZXRlb3IvYXN0cm9jb2RlcnM6b25lLXNpZ25hbCc7XG5cbmlmIChNZXRlb3IuaXNTZXJ2ZXIpIHtcbiAgICBNZXRlb3IubWV0aG9kcyAoe1xuICAgICAgICBzZW5kUHVzaDogZnVuY3Rpb24gKCBfdXNlckRldmljZUlkIDogc3RyaW5nW10sIGNvbnRlbnQgOiBzdHJpbmcgKXtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgY29udGVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgZW46IGNvbnRlbnQsICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgT25lU2lnbmFsLk5vdGlmaWNhdGlvbnMuY3JlYXRlKCBfdXNlckRldmljZUlkLCBkYXRhICk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEl0ZW1zIH0gZnJvbSAnLi4vLi4vY29sbGVjdGlvbnMvbWVudS9pdGVtLmNvbGxlY3Rpb24nO1xuXG5pZiAoTWV0ZW9yLmlzU2VydmVyKSB7XG4gIE1ldGVvci5tZXRob2RzKHtcbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byB1cGRhdGUgaXRlbSBhdmFpbGFibGUgZm9yIHN1cGVydmlzb3JcbiAgICAgKiBAcGFyYW0ge1VzZXJEZXRhaWx9IF91c2VyRGV0YWlsXG4gICAgICogQHBhcmFtIHtJdGVtfSBfaXRlbVxuICAgICAqL1xuICAgIHVwZGF0ZUl0ZW1BdmFpbGFibGU6IGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudElkOiBzdHJpbmcsIF9pdGVtSWQ6IHN0cmluZykge1xuICAgICAgbGV0IF9pdGVtRXN0YWJsaXNobWVudCA9IEl0ZW1zLmNvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogX2l0ZW1JZCB9LCB7IGZpZWxkczogeyBfaWQ6IDAsIGVzdGFibGlzaG1lbnRzOiAxIH0gfSk7XG4gICAgICBsZXQgYXV4ID0gX2l0ZW1Fc3RhYmxpc2htZW50LmVzdGFibGlzaG1lbnRzLmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LmVzdGFibGlzaG1lbnRfaWQgPT09IF9lc3RhYmxpc2htZW50SWQpO1xuICAgICAgSXRlbXMudXBkYXRlKHsgX2lkOiBfaXRlbUlkLCBcImVzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWRcIjogX2VzdGFibGlzaG1lbnRJZCB9LCB7ICRzZXQ6IHsgJ2VzdGFibGlzaG1lbnRzLiQuaXNBdmFpbGFibGUnOiAhYXV4LmlzQXZhaWxhYmxlLCBtb2RpZmljYXRpb25fZGF0ZTogbmV3IERhdGUoKSwgbW9kaWZpY2F0aW9uX3VzZXI6IE1ldGVvci51c2VySWQoKSB9IH0pO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gdXBkYXRlIGl0ZW0gcmVjb21tZW5kZWRcbiAgICAgKiBAcGFyYW0ge1VzZXJEZXRhaWx9IF91c2VyRGV0YWlsXG4gICAgICogQHBhcmFtIHtJdGVtfSBfaXRlbVxuICAgICAqL1xuICAgIHVwZGF0ZVJlY29tbWVuZGVkOiBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nLCBfaXRlbUlkOiBzdHJpbmcpIHtcbiAgICAgIGxldCBfaXRlbUVzdGFibGlzaG1lbnQgPSBJdGVtcy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBfaWQ6IF9pdGVtSWQgfSwgeyBmaWVsZHM6IHsgX2lkOiAwLCBlc3RhYmxpc2htZW50czogMSB9IH0pO1xuICAgICAgbGV0IGF1eCA9IF9pdGVtRXN0YWJsaXNobWVudC5lc3RhYmxpc2htZW50cy5maW5kKGVsZW1lbnQgPT4gZWxlbWVudC5lc3RhYmxpc2htZW50X2lkID09PSBfZXN0YWJsaXNobWVudElkKTtcbiAgICAgIEl0ZW1zLnVwZGF0ZSh7IF9pZDogX2l0ZW1JZCwgXCJlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkXCI6IF9lc3RhYmxpc2htZW50SWQgfSwgeyAkc2V0OiB7ICdlc3RhYmxpc2htZW50cy4kLnJlY29tbWVuZGVkJzogIWF1eC5yZWNvbW1lbmRlZCwgbW9kaWZpY2F0aW9uX2RhdGU6IG5ldyBEYXRlKCksIG1vZGlmaWNhdGlvbl91c2VyOiBNZXRlb3IudXNlcklkKCkgfSB9KTtcbiAgICB9XG4gIH0pXG59XG5cblxuXG4iLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBVc2VyRGV2aWNlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvZGV2aWNlLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IFVzZXJEZXZpY2VzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFVzZXJEZXZpY2U+KCd1c2VyX2RldmljZXMnKTtcblxuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG5Vc2VyRGV2aWNlcy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluLFxuICAgIHJlbW92ZTogbG9nZ2VkSW4sXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZW51IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvbWVudS5tb2RlbCc7XG5cbmV4cG9ydCBjb25zdCBNZW51cyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxNZW51PignbWVudXMnKTtcbiIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IFJvbGUgfSBmcm9tICcuLi8uLi9tb2RlbHMvYXV0aC9yb2xlLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IFJvbGVzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFJvbGU+KCdyb2xlcycpO1xuIiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IFVzZXJEZXRhaWxzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFVzZXJEZXRhaWw+KCd1c2VyX2RldGFpbHMnKTtcblxuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG5Vc2VyRGV0YWlscy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluLFxuICAgIHJlbW92ZTogbG9nZ2VkSW4sXG59KTtcbiIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZcKgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZXRlb3LCoH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBVc2VyTG9naW4gfSBmcm9tICcuLi8uLi9tb2RlbHMvYXV0aC91c2VyLWxvZ2luLm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogVXNlciBMb2dpbiBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBVc2Vyc0xvZ2luID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFVzZXJMb2dpbj4oJ3VzZXJzX2xvZ2luJyk7XG5cblVzZXJzTG9naW4uYWxsb3coe1xuICAgIGluc2VydDpsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFVzZXJQZW5hbHR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2F1dGgvdXNlci1wZW5hbHR5Lm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogVXNlciBQZW5hbHRpZXMgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgVXNlclBlbmFsdGllcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxVc2VyUGVuYWx0eT4oJ3VzZXJfcGVuYWx0aWVzJyk7XG5cbi8qKlxuICogQWxsb3cgVXNlciBQZW5hbHRpZXMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuVXNlclBlbmFsdGllcy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTtcbiIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBVc2VycyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBVc2VycyA9IE1vbmdvT2JzZXJ2YWJsZS5mcm9tRXhpc3RpbmcoTWV0ZW9yLnVzZXJzKTtcblxuLyoqXG4gKiBBbGxvdyBVc2VycyBjb2xsZWN0aW9uIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuVXNlcnMuYWxsb3coe1xuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQsIEVzdGFibGlzaG1lbnRUdXJuLCBFc3RhYmxpc2htZW50UHJvZmlsZSwgRXN0YWJsaXNobWVudFByb2ZpbGVJbWFnZSB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKSB7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBFc3RhYmxpc2htZW50cyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBFc3RhYmxpc2htZW50cyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxFc3RhYmxpc2htZW50PignZXN0YWJsaXNobWVudHMnKTtcblxuLyoqXG4gKiBBbGxvdyBFc3RhYmxpc2htZW50IGNvbGxlY2lvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuRXN0YWJsaXNobWVudHMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7XG5cbi8qKlxuICogRXN0YWJsaXNobWVudCBUdXJucyBDb2xsZWN0aW9uXG4gKi9cblxuZXhwb3J0IGNvbnN0IEVzdGFibGlzaG1lbnRUdXJucyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxFc3RhYmxpc2htZW50VHVybj4oJ2VzdGFibGlzaG1lbnRfdHVybnMnKTtcblxuLyoqXG4gKiBBbGxvdyBFc3RhYmxpc2htZW50IFR1cm5zIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkVzdGFibGlzaG1lbnRUdXJucy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluLFxuICAgIHJlbW92ZTogbG9nZ2VkSW5cbn0pO1xuXG4vKipcbiAqIEVzdGFibGlzaG1lbnQgUHJvZmlsZSBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBFc3RhYmxpc2htZW50c1Byb2ZpbGUgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248RXN0YWJsaXNobWVudFByb2ZpbGU+KCdlc3RhYmxpc2htZW50X3Byb2ZpbGUnKTtcblxuLyoqXG4gKiBBbGxvdyBFc3RhYmxpc2htZW50IFByb2ZpbGUgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuRXN0YWJsaXNobWVudHNQcm9maWxlLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pO1xuIiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBPcmRlckhpc3RvcnkgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC9vcmRlci1oaXN0b3J5Lm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogT3JkZXJIaXN0b3JpZXMgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgT3JkZXJIaXN0b3JpZXMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248T3JkZXJIaXN0b3J5Pignb3JkZXJfaGlzdG9yaWVzJyk7XG5cbi8qKlxuICogQWxsb3cgT3JkZXJIaXN0b3JpZXMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuT3JkZXJIaXN0b3JpZXMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgT3JkZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC9vcmRlci5tb2RlbCc7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIE9yZGVycyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBPcmRlcnMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248T3JkZXI+KCdvcmRlcnMnKTtcblxuLyoqXG4gKiBBbGxvdyBPcmRlcnMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuT3JkZXJzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTpsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBSZXdhcmRQb2ludCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3Jld2FyZC1wb2ludC5tb2RlbCc7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIFJld2FyZFBvaW50cyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBSZXdhcmRQb2ludHMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248UmV3YXJkUG9pbnQ+KCdyZXdhcmRfcG9pbnRzJyk7XG5cbi8qKlxuICogQWxsb3cgUmV3YXJkUG9pbnRzIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblJld2FyZFBvaW50cy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6bG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgUmV3YXJkIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2VzdGFibGlzaG1lbnQvcmV3YXJkLm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpIHtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIFJld2FyZCBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBSZXdhcmRzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFJld2FyZD4oJ3Jld2FyZHMnKTtcblxuLyoqXG4gKiBBbGxvdyBSZXdhcmQgY29sbGVjdGlvbiBpbnNlcnQsIHVwZGF0ZSBhbmQgcmVtb3ZlIGZ1bmN0aW9uc1xuICovXG5SZXdhcmRzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW4sXG4gICAgcmVtb3ZlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgVGFibGUgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXN0YWJsaXNobWVudC90YWJsZS5tb2RlbCc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogVGFibGVzIENvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IFRhYmxlcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxUYWJsZT4oJ3RhYmxlcycpO1xuXG4vKipcbiAqIEFsbG93IFRhYmxlcyBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5UYWJsZXMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgV2FpdGVyQ2FsbERldGFpbCB9IGZyb20gJy4uLy4uL21vZGVscy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5tb2RlbCc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogV2FpdGVyQ2FsbERldGFpbHMgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgV2FpdGVyQ2FsbERldGFpbHMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248V2FpdGVyQ2FsbERldGFpbD4oJ3dhaXRlcl9jYWxsX2RldGFpbHMnKTtcblxuLyoqXG4gKiBBbGxvdyBXYWl0ZXJDYWxsRGV0YWlscyBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5XYWl0ZXJDYWxsRGV0YWlscy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBDaXR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2dlbmVyYWwvY2l0eS5tb2RlbCc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogQ2l0aWVzIENvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IENpdGllcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxDaXR5PignY2l0aWVzJyk7XG5cbi8qKlxuICogQWxsb3cgQ2l0aWVzIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkNpdGllcy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBDb29raW5nVGltZSB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL2Nvb2tpbmctdGltZS5tb2RlbCc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogQ29va2luZ3RpbWVzIENvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IENvb2tpbmdUaW1lcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxDb29raW5nVGltZT4oJ2Nvb2tpbmdfdGltZXMnKTtcblxuLyoqXG4gKiBBbGxvdyBjb29raW5ndGltZXMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuQ29va2luZ1RpbWVzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJ1xuaW1wb3J0IHsgQ291bnRyeSB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL2NvdW50cnkubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIENvdW50cmllcyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBDb3VudHJpZXMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248Q291bnRyeT4oJ2NvdW50cmllcycpO1xuXG4vKipcbiAqIEFsbG93IENvdW50cmllcyBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5Db3VudHJpZXMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgQ3VycmVuY3kgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9jdXJyZW5jeS5tb2RlbCc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcblxuZXhwb3J0IGNvbnN0IEN1cnJlbmNpZXMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248Q3VycmVuY3k+KCdjdXJyZW5jaWVzJyk7XG5cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuQ3VycmVuY2llcy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBFbWFpbENvbnRlbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9lbWFpbC1jb250ZW50Lm1vZGVsJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG5leHBvcnQgY29uc3QgRW1haWxDb250ZW50cyA9ICBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248RW1haWxDb250ZW50PignZW1haWxfY29udGVudHMnKTtcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogQWxsb3cgRW1haWxDb250ZW50cyBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkVtYWlsQ29udGVudHMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgSG91ciB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL2hvdXIubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbmV4cG9ydCBjb25zdCBIb3VycyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxIb3VyPignaG91cnMnKTtcblxuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG5Ib3Vycy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBMYW5ndWFnZSB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL2xhbmd1YWdlLm1vZGVsJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBMYW5ndWFnZXMgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgTGFuZ3VhZ2VzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPExhbmd1YWdlPignbGFuZ3VhZ2VzJyk7XG5cbi8qKlxuICogQWxsb3cgTGFuZ3VhZ2VzIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkxhbmd1YWdlcy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBQYXJhbWV0ZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9wYXJhbWV0ZXIubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbmV4cG9ydCBjb25zdCBQYXJhbWV0ZXJzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFBhcmFtZXRlcj4oJ3BhcmFtZXRlcnMnKTtcblxuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG5QYXJhbWV0ZXJzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IFBheW1lbnRNZXRob2QgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC9wYXltZW50TWV0aG9kLm1vZGVsJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG5leHBvcnQgY29uc3QgUGF5bWVudE1ldGhvZHMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248UGF5bWVudE1ldGhvZD4oJ3BheW1lbnRNZXRob2RzJyk7XG5cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuUGF5bWVudE1ldGhvZHMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBQb2ludFZhbGlkaXR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2dlbmVyYWwvcG9pbnQtdmFsaWRpdHkubW9kZWwnO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBQb2ludHMgVmFsaWRpdHkgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgUG9pbnRzVmFsaWRpdHkgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248UG9pbnRWYWxpZGl0eT4oJ3BvaW50c192YWxpZGl0eScpO1xuXG4vKipcbiAqIEFsbG93IHBvaW50cyB2YWxpZGl0eSBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5Qb2ludHNWYWxpZGl0eS5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBQb2ludCB9IGZyb20gJy4uLy4uL21vZGVscy9nZW5lcmFsL3BvaW50Lm1vZGVsJztcbmltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBQb2ludHMgQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgUG9pbnRzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFBvaW50PigncG9pbnRzJyk7XG5cbi8qKlxuICogQWxsb3cgcG9pbnRzIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblBvaW50cy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3ItcnhqcydcbmltcG9ydCB7IFF1ZXVlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2dlbmVyYWwvcXVldWUubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIFF1ZXVlcyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBRdWV1ZXMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248UXVldWU+KCdxdWV1ZXMnKTtcblxuLyoqXG4gKiBBbGxvdyBRdWV1ZXMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuUXVldWVzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IFR5cGVPZkZvb2QgfSBmcm9tICcuLi8uLi9tb2RlbHMvZ2VuZXJhbC90eXBlLW9mLWZvb2QubW9kZWwnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKSB7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBUeXBlc09mRm9vZCBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBUeXBlc09mRm9vZCA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxUeXBlT2ZGb29kPigndHlwZXNfb2ZfZm9vZCcpO1xuXG4vKipcbiAqIEFsbG93IFR5cGVzT2ZGb29kIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblR5cGVzT2ZGb29kLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IEFkZGl0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvYWRkaXRpb24ubW9kZWwnO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBBZGRpdGlvbiBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBBZGRpdGlvbnMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248QWRkaXRpb24+KCdhZGRpdGlvbnMnKTtcblxuLyoqXG4gKiBBbGxvdyBBZGRpdGlvbiBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5BZGRpdGlvbnMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJbixcbiAgICByZW1vdmU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBDYXRlZ29yeSB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L2NhdGVnb3J5Lm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogQ2F0ZWdvcmllcyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBDYXRlZ29yaWVzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPENhdGVnb3J5PignY2F0ZWdvcmllcycpO1xuXG4vKipcbiAqIEFsbG93IENhdGVnb3J5IGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkNhdGVnb3JpZXMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJbixcbiAgICByZW1vdmU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBHYXJuaXNoRm9vZCB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L2dhcm5pc2gtZm9vZC5tb2RlbCc7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEdhcm5pc2ggRm9vZCBDb2xsZWNpb25cbiAqL1xuZXhwb3J0IGNvbnN0IEdhcm5pc2hGb29kQ29sID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPEdhcm5pc2hGb29kPignZ2FybmlzaEZvb2QnKTtcblxuLyoqXG4gKiBBbGxvdyBHYXJuaXNoIEZvb2QgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuR2FybmlzaEZvb2RDb2wuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJbixcbiAgICByZW1vdmU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBJdGVtLCBJdGVtSW1hZ2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvbWVudS9pdGVtLm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpIHtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEl0ZW1zIENvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IEl0ZW1zID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPEl0ZW0+KCdpdGVtcycpO1xuXG4vKipcbiAqIEFsbG93IEl0ZW1zIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkl0ZW1zLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW4sXG4gICAgcmVtb3ZlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgT3B0aW9uVmFsdWUgfSBmcm9tICcuLi8uLi9tb2RlbHMvbWVudS9vcHRpb24tdmFsdWUubW9kZWwnO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCkge1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogT3B0aW9uIFZhbHVlIENvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IE9wdGlvblZhbHVlcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxPcHRpb25WYWx1ZT4oJ29wdGlvbl92YWx1ZXMnKTtcblxuLyoqXG4gKiBBbGxvdyBPcHRpb25WYWx1ZXMgY29sbGVjdGlvbiBpbnNlcnQgYW5kIHVwZGF0ZSBmdW5jdGlvbnNcbiAqL1xuT3B0aW9uVmFsdWVzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW4sXG4gICAgcmVtb3ZlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvb3B0aW9uLm1vZGVsJztcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpe1xuICAgIHJldHVybiAhIU1ldGVvci51c2VyKCk7XG59XG5cbi8qKlxuICogT3B0aW9ucyBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBPcHRpb25zID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPE9wdGlvbj4oJ29wdGlvbnMnKTtcblxuLyoqXG4gKiBBbGxvdyBPcHRpb25zIGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbk9wdGlvbnMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJbixcbiAgICByZW1vdmU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvc2VjdGlvbi5tb2RlbCc7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIFNlY3Rpb24gQ29sbGVjdGlvblxuICovXG5leHBvcnQgY29uc3QgU2VjdGlvbnMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248U2VjdGlvbj4oJ3NlY3Rpb25zJyk7XG5cbi8qKlxuICogQWxsb3cgU2VjdGlvbiBjb2xsZWN0aW9uIGluc2VydCBhbmQgdXBkYXRlIGZ1bmN0aW9uc1xuICovXG5TZWN0aW9ucy5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluLFxuICAgIHJlbW92ZTogbG9nZ2VkSW5cbn0pOyIsImltcG9ydCB7IE1vbmdvT2JzZXJ2YWJsZSB9IGZyb20gJ21ldGVvci1yeGpzJztcbmltcG9ydCB7IFN1YmNhdGVnb3J5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvc3ViY2F0ZWdvcnkubW9kZWwnO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRvIHZhbGlkYXRlIGlmIHVzZXIgZXhpc3RzXG4gKi9cbmZ1bmN0aW9uIGxvZ2dlZEluKCl7XG4gICAgcmV0dXJuICEhTWV0ZW9yLnVzZXIoKTtcbn1cblxuLyoqXG4gKiBTdWJjYXRlZ29yeSBDb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBTdWJjYXRlZ29yaWVzID0gbmV3IE1vbmdvT2JzZXJ2YWJsZS5Db2xsZWN0aW9uPFN1YmNhdGVnb3J5Pignc3ViY2F0ZWdvcmllcycpO1xuXG4vKipcbiAqIEFsbG93IFN1YmNhdGVnb3J5IGNvbGxlY3Rpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblN1YmNhdGVnb3JpZXMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJbixcbiAgICByZW1vdmU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IENjUGF5bWVudE1ldGhvZCB9IGZyb20gJy4uLy4uL21vZGVscy9wYXltZW50L2NjLXBheW1lbnQtbWV0aG9kLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IENjUGF5bWVudE1ldGhvZHMgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248Q2NQYXltZW50TWV0aG9kPignY2NfcGF5bWVudF9tZXRob2RzJyk7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEFsbG93IEhpc3RvcnlQYXltZW50Q29sbGVjdGlvbiBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkNjUGF5bWVudE1ldGhvZHMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBJbnZvaWNlSW5mbyB9IGZyb20gJy4uLy4uL21vZGVscy9wYXltZW50L2ludm9pY2UtaW5mby5tb2RlbCc7XG5cbmV4cG9ydCBjb25zdCBJbnZvaWNlc0luZm8gPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248SW52b2ljZUluZm8+KCdpbnZvaWNlc19pbmZvJyk7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEFsbG93IEhpc3RvcnlQYXltZW50Q29sbGVjdGlvbiBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkludm9pY2VzSW5mby5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEl1cmVzdEludm9pY2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGF5bWVudC9pdXJlc3QtaW52b2ljZS5tb2RlbCc7XG5cbmV4cG9ydCBjb25zdCBJdXJlc3RJbnZvaWNlcyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxJdXJlc3RJbnZvaWNlPignaXVyZXN0X2ludm9pY2UnKTtcblxuLyoqXG4gKiBGdW5jdGlvbiB0byB2YWxpZGF0ZSBpZiB1c2VyIGV4aXN0c1xuICovXG5mdW5jdGlvbiBsb2dnZWRJbigpIHtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEFsbG93IEhpc3RvcnlQYXltZW50Q29sbGVjdGlvbiBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cbkl1cmVzdEludm9pY2VzLmFsbG93KHtcbiAgICBpbnNlcnQ6IGxvZ2dlZEluLFxuICAgIHVwZGF0ZTogbG9nZ2VkSW5cbn0pO1xuIiwiaW1wb3J0IHsgTW9uZ29PYnNlcnZhYmxlIH0gZnJvbSAnbWV0ZW9yLXJ4anMnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBQYXltZW50SGlzdG9yeSB9IGZyb20gJy4uLy4uL21vZGVscy9wYXltZW50L3BheW1lbnQtaGlzdG9yeS5tb2RlbCc7XG5cbmV4cG9ydCBjb25zdCBQYXltZW50c0hpc3RvcnkgPSBuZXcgTW9uZ29PYnNlcnZhYmxlLkNvbGxlY3Rpb248UGF5bWVudEhpc3Rvcnk+KCdwYXltZW50c19oaXN0b3J5Jyk7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEFsbG93IEhpc3RvcnlQYXltZW50Q29sbGVjdGlvbiBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblBheW1lbnRzSGlzdG9yeS5hbGxvdyh7XG4gICAgaW5zZXJ0OiBsb2dnZWRJbixcbiAgICB1cGRhdGU6IGxvZ2dlZEluXG59KTsiLCJpbXBvcnQgeyBNb25nb09ic2VydmFibGUgfSBmcm9tICdtZXRlb3Itcnhqcyc7XG5pbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFBheW1lbnRUcmFuc2FjdGlvbiB9IGZyb20gJy4uLy4uL21vZGVscy9wYXltZW50L3BheW1lbnQtdHJhbnNhY3Rpb24ubW9kZWwnO1xuXG5leHBvcnQgY29uc3QgUGF5bWVudFRyYW5zYWN0aW9ucyA9IG5ldyBNb25nb09ic2VydmFibGUuQ29sbGVjdGlvbjxQYXltZW50VHJhbnNhY3Rpb24+KCdwYXltZW50X3RyYW5zYWN0aW9uJyk7XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gdmFsaWRhdGUgaWYgdXNlciBleGlzdHNcbiAqL1xuZnVuY3Rpb24gbG9nZ2VkSW4oKXtcbiAgICByZXR1cm4gISFNZXRlb3IudXNlcigpO1xufVxuXG4vKipcbiAqIEFsbG93IEhpc3RvcnlQYXltZW50Q29sbGVjdGlvbiBjb2xsZWNpb24gaW5zZXJ0IGFuZCB1cGRhdGUgZnVuY3Rpb25zXG4gKi9cblBheW1lbnRUcmFuc2FjdGlvbnMuYWxsb3coe1xuICAgIGluc2VydDogbG9nZ2VkSW4sXG4gICAgdXBkYXRlOiBsb2dnZWRJblxufSk7IiwiaW1wb3J0IHsgQ29sbGVjdGlvbk9iamVjdCB9IGZyb20gJy4uL2NvbGxlY3Rpb24tb2JqZWN0Lm1vZGVsJztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGV2aWNlIGV4dGVuZHMgQ29sbGVjdGlvbk9iamVjdCB7XG4gICAgdXNlcl9pZDogc3RyaW5nO1xuICAgIGRldmljZXMgOiBEZXZpY2VbXTtcbn1cblxuZXhwb3J0IGNsYXNzIERldmljZSB7XG4gICAgcGxheWVyX2lkOiBzdHJpbmc7XG4gICAgaXNfYWN0aXZlIDogYm9vbGVhbjtcbn1cblxuIiwiaW1wb3J0IHsgQ29sbGVjdGlvbk9iamVjdCB9IGZyb20gJy4uL2NvbGxlY3Rpb24tb2JqZWN0Lm1vZGVsJztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGV0YWlsIGV4dGVuZHMgQ29sbGVjdGlvbk9iamVjdCB7XG4gICAgdXNlcl9pZDogc3RyaW5nO1xuICAgIHJvbGVfaWQ6IHN0cmluZztcbiAgICBpc19hY3RpdmU6IGJvb2xlYW47XG5cbiAgICAvL2ZpZWxkcyBmb3IgYWRtaW4gcmVnaXN0ZXJcbiAgICBjb250YWN0X3Bob25lPzogc3RyaW5nO1xuICAgIGRuaV9udW1iZXI/OiBzdHJpbmc7XG4gICAgYWRkcmVzcz86IHN0cmluZztcbiAgICBjb3VudHJ5X2lkPzogc3RyaW5nO1xuICAgIGNpdHlfaWQ/OiBzdHJpbmc7XG4gICAgb3RoZXJfY2l0eT86IHN0cmluZztcbiAgICBzaG93X2FmdGVyX3Jlc3RfY3JlYXRpb24/OiBib29sZWFuO1xuICAgIC8vXG5cbiAgICBlc3RhYmxpc2htZW50X3dvcms/OiBzdHJpbmc7XG4gICAgam9icz86IG51bWJlcjtcbiAgICBwZW5hbHRpZXM/OiBVc2VyRGV0YWlsUGVuYWx0eVtdO1xuICAgIGN1cnJlbnRfZXN0YWJsaXNobWVudD86IHN0cmluZztcbiAgICBjdXJyZW50X3RhYmxlPzogc3RyaW5nO1xuICAgIGJpcnRoZGF0ZT86IERhdGU7XG4gICAgcGhvbmU/OiBzdHJpbmc7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgdGFibGVfYXNzaWdubWVudF9pbml0PzogbnVtYmVyO1xuICAgIHRhYmxlX2Fzc2lnbm1lbnRfZW5kPzogbnVtYmVyO1xuICAgIGltYWdlPzogVXNlckRldGFpbEltYWdlO1xuICAgIHJld2FyZF9wb2ludHM/OiBVc2VyUmV3YXJkUG9pbnRzW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlckRldGFpbFBlbmFsdHkge1xuICAgIGVzdGFibGlzaG1lbnRfaWQ6IHN0cmluZztcbiAgICBkYXRlOiBEYXRlO1xufVxuXG4vKipcbiAqIFVzZXIgRGV0YWlsIEltYWdlIE1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBVc2VyRGV0YWlsSW1hZ2Uge1xuICAgIF9pZD86IHN0cmluZztcbiAgICBmaWxlbmFtZTogc3RyaW5nO1xuICAgIGhhbmRsZTogc3RyaW5nO1xuICAgIG1pbWV0eXBlOiBzdHJpbmc7XG4gICAgb3JpZ2luYWxQYXRoOiBzdHJpbmc7XG4gICAgc2l6ZTogc3RyaW5nO1xuICAgIHNvdXJjZTogc3RyaW5nO1xuICAgIHVybDogc3RyaW5nO1xuICAgIG9yaWdpbmFsRmlsZT86IE9iamVjdDtcbiAgICBzdGF0dXM/OiBzdHJpbmc7XG4gICAga2V5Pzogc3RyaW5nO1xuICAgIGNvbnRhaW5lcj86IHN0cmluZztcbiAgICB1cGxvYWRJZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJSZXdhcmRQb2ludHMge1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgZXN0YWJsaXNobWVudF9pZDogc3RyaW5nO1xuICAgIHBvaW50czogbnVtYmVyO1xufSIsIi8qKlxuICogVXNlciBMb2dpbiBNb2RlbFxuICovXG5leHBvcnQgY2xhc3MgVXNlckxvZ2luIHtcbiAgICB1c2VyX2lkOiBzdHJpbmc7XG4gICAgbG9naW5fZGF0ZTogRGF0ZTtcbiAgICBhcHBfY29kZV9uYW1lOiBzdHJpbmc7XG4gICAgYXBwX25hbWU6IHN0cmluZztcbiAgICBhcHBfdmVyc2lvbjogc3RyaW5nO1xuICAgIGNvb2tpZV9lbmFibGVkOiBib29sZWFuO1xuICAgIGxhbmd1YWdlOiBzdHJpbmc7XG4gICAgcGxhdGZvcm06IHN0cmluZztcbiAgICBjb3Jkb3ZhX3ZlcnNpb24/OiBzdHJpbmc7XG4gICAgbW9kZWw/OiBzdHJpbmc7XG4gICAgcGxhdGZvcm1fZGV2aWNlPzogc3RyaW5nO1xuICAgIHZlcnNpb24/OiBzdHJpbmc7XG59IiwiaW1wb3J0IHsgQ29sbGVjdGlvbk9iamVjdCB9IGZyb20gJy4uL2NvbGxlY3Rpb24tb2JqZWN0Lm1vZGVsJztcblxuLyoqXG4gKiBVc2VyIFByb2ZpbGUgTW9kZWxcbiAqL1xuZXhwb3J0IGNsYXNzIFVzZXJQcm9maWxlIHtcbiAgICBmaXJzdF9uYW1lPzogc3RyaW5nO1xuICAgIGxhc3RfbmFtZT86IHN0cmluZztcbiAgICBsYW5ndWFnZV9jb2RlPzogc3RyaW5nO1xuICAgIGdlbmRlcj86IHN0cmluZztcbiAgICBmdWxsX25hbWU6IHN0cmluZztcbn0iLCJpbXBvcnQgeyBDb2xsZWN0aW9uT2JqZWN0IH0gZnJvbSAnLi4vY29sbGVjdGlvbi1vYmplY3QubW9kZWwnO1xuXG4vKipcbiAqIEVzdGFibGlzaG1lbnQgbW9kZWxcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFc3RhYmxpc2htZW50IGV4dGVuZHMgQ29sbGVjdGlvbk9iamVjdCB7XG4gICAgY291bnRyeUlkOiBzdHJpbmc7XG4gICAgY2l0eUlkPzogc3RyaW5nO1xuICAgIG90aGVyX2NpdHk/OiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGN1cnJlbmN5SWQ6IHN0cmluZztcbiAgICBhZGRyZXNzOiBzdHJpbmc7XG4gICAgaW5kaWNhdGl2ZTogc3RyaW5nO1xuICAgIHBob25lOiBzdHJpbmc7XG4gICAgZXN0YWJsaXNobWVudF9jb2RlOiBzdHJpbmc7XG4gICAgcGF5bWVudE1ldGhvZHM6IHN0cmluZ1tdO1xuICAgIHBvaW50c192YWxpZGl0eTogc3RyaW5nO1xuICAgIHRhYmxlc19xdWFudGl0eTogbnVtYmVyO1xuICAgIGltYWdlPzogRXN0YWJsaXNobWVudEltYWdlO1xuICAgIG9yZGVyTnVtYmVyQ291bnQ6IG51bWJlcjtcbiAgICBtYXhfam9icz86IG51bWJlcjtcbiAgICBxdWV1ZTogc3RyaW5nW107XG4gICAgaXNBY3RpdmU6IGJvb2xlYW47XG4gICAgZmlyc3RQYXk6IGJvb2xlYW47XG4gICAgZnJlZURheXM/OiBib29sZWFuO1xuICAgIGlzX3ByZW1pdW0/OiBib29sZWFuO1xuICAgIGlzX2JldGFfdGVzdGVyOiBib29sZWFuO1xufVxuXG4vKipcbiAqIEVzdGFibGlzaG1lbnRJbWFnZSBtb2RlbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEVzdGFibGlzaG1lbnRJbWFnZSB7XG4gICAgX2lkPzogc3RyaW5nO1xuICAgIGZpbGVuYW1lOiBzdHJpbmc7XG4gICAgaGFuZGxlOiBzdHJpbmc7XG4gICAgbWltZXR5cGU6IHN0cmluZztcbiAgICBvcmlnaW5hbFBhdGg6IHN0cmluZztcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgc291cmNlOiBzdHJpbmc7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgb3JpZ2luYWxGaWxlPzogT2JqZWN0O1xuICAgIHN0YXR1cz86IHN0cmluZztcbiAgICBrZXk/OiBzdHJpbmc7XG4gICAgY29udGFpbmVyPzogc3RyaW5nO1xuICAgIHVwbG9hZElkOiBzdHJpbmc7XG59XG5cbi8qKlxuICogRXN0YWJsaXNobWVudExvY2F0aW9uIG1vZGVsXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRXN0YWJsaXNobWVudExvY2F0aW9uIHtcbiAgICBsYXQ6IG51bWJlcjtcbiAgICBsbmc6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBFc3RhYmxpc2htZW50U2NoZWR1bGUgbW9kZWxcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFc3RhYmxpc2htZW50U2NoZWR1bGUge1xuICAgIG1vbmRheT86IHtcbiAgICAgICAgaXNBY3RpdmU6IGJvb2xlYW4sXG4gICAgICAgIG9wZW5pbmdfdGltZTogc3RyaW5nLFxuICAgICAgICBjbG9zaW5nX3RpbWU6IHN0cmluZ1xuICAgIH0sXG4gICAgdHVlc2RheT86IHtcbiAgICAgICAgaXNBY3RpdmU6IGJvb2xlYW4sXG4gICAgICAgIG9wZW5pbmdfdGltZTogc3RyaW5nLFxuICAgICAgICBjbG9zaW5nX3RpbWU6IHN0cmluZ1xuICAgIH0sXG4gICAgd2VkbmVzZGF5Pzoge1xuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbixcbiAgICAgICAgb3BlbmluZ190aW1lOiBzdHJpbmcsXG4gICAgICAgIGNsb3NpbmdfdGltZTogc3RyaW5nXG4gICAgfSxcbiAgICB0aHVyc2RheT86IHtcbiAgICAgICAgaXNBY3RpdmU6IGJvb2xlYW4sXG4gICAgICAgIG9wZW5pbmdfdGltZTogc3RyaW5nLFxuICAgICAgICBjbG9zaW5nX3RpbWU6IHN0cmluZ1xuICAgIH0sXG4gICAgZnJpZGF5Pzoge1xuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbixcbiAgICAgICAgb3BlbmluZ190aW1lOiBzdHJpbmcsXG4gICAgICAgIGNsb3NpbmdfdGltZTogc3RyaW5nXG4gICAgfSxcbiAgICBzYXR1cmRheT86IHtcbiAgICAgICAgaXNBY3RpdmU6IGJvb2xlYW4sXG4gICAgICAgIG9wZW5pbmdfdGltZTogc3RyaW5nLFxuICAgICAgICBjbG9zaW5nX3RpbWU6IHN0cmluZ1xuICAgIH0sXG4gICAgc3VuZGF5Pzoge1xuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbixcbiAgICAgICAgb3BlbmluZ190aW1lOiBzdHJpbmcsXG4gICAgICAgIGNsb3NpbmdfdGltZTogc3RyaW5nXG4gICAgfSxcbiAgICBob2xpZGF5Pzoge1xuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbixcbiAgICAgICAgb3BlbmluZ190aW1lOiBzdHJpbmcsXG4gICAgICAgIGNsb3NpbmdfdGltZTogc3RyaW5nXG4gICAgfVxufTtcblxuLyoqXG4gKiBFc3RhYmxpc2htZW50VHVybiBtb2RlbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEVzdGFibGlzaG1lbnRUdXJuIGV4dGVuZHMgQ29sbGVjdGlvbk9iamVjdCB7XG4gICAgZXN0YWJsaXNobWVudF9pZDogc3RyaW5nLFxuICAgIHR1cm46IG51bWJlcixcbiAgICBsYXN0X3dhaXRlcl9pZDogc3RyaW5nLFxufVxuXG4vKipcbiAqIEVzdGFibGlzaG1lbnRTb2NpYWxOZXR3b3JrIE1vZGVsXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRXN0YWJsaXNobWVudFNvY2lhbE5ldHdvcmsge1xuICAgIGZhY2Vib29rPzogc3RyaW5nO1xuICAgIHR3aXR0ZXI/OiBzdHJpbmc7XG4gICAgaW5zdGFncmFtPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEVzdGFibGlzaG1lbnQgUHJvZmlsZSBNb2RlbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEVzdGFibGlzaG1lbnRQcm9maWxlIGV4dGVuZHMgQ29sbGVjdGlvbk9iamVjdCB7XG4gICAgX2lkPzogc3RyaW5nO1xuICAgIGVzdGFibGlzaG1lbnRfaWQ6IHN0cmluZztcbiAgICBlc3RhYmxpc2htZW50X2Rlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgd2ViX3BhZ2U/OiBzdHJpbmc7XG4gICAgZW1haWw/OiBzdHJpbmc7XG4gICAgc29jaWFsX25ldHdvcmtzPzogRXN0YWJsaXNobWVudFNvY2lhbE5ldHdvcms7XG4gICAgaW1hZ2VzPzpFc3RhYmxpc2htZW50UHJvZmlsZUltYWdlW107XG4gICAgc2NoZWR1bGU6IEVzdGFibGlzaG1lbnRTY2hlZHVsZTtcbiAgICBsb2NhdGlvbjogRXN0YWJsaXNobWVudExvY2F0aW9uO1xufVxuXG4vKipcbiAqIEVzdGFibGlzaG1lbnRQcm9maWxlSW1hZ2UgbW9kZWxcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFc3RhYmxpc2htZW50UHJvZmlsZUltYWdlIHtcbiAgICBfaWQ/OiBzdHJpbmc7XG4gICAgZmlsZW5hbWU6IHN0cmluZztcbiAgICBoYW5kbGU6IHN0cmluZztcbiAgICBtaW1ldHlwZTogc3RyaW5nO1xuICAgIG9yaWdpbmFsUGF0aDogc3RyaW5nO1xuICAgIHNpemU6IHN0cmluZztcbiAgICBzb3VyY2U6IHN0cmluZztcbiAgICB1cmw6IHN0cmluZztcbiAgICBvcmlnaW5hbEZpbGU/OiBPYmplY3Q7XG4gICAgc3RhdHVzPzogc3RyaW5nO1xuICAgIGtleT86IHN0cmluZztcbiAgICBjb250YWluZXI/OiBzdHJpbmc7XG4gICAgdXBsb2FkSWQ6IHN0cmluZztcbn0iLCJleHBvcnQgY2xhc3MgTm9kZSB7XG4gICAgcHJpdmF0ZSBmcmVjdWVuY3k6bnVtYmVyO1xuICAgIHByaXZhdGUgY2hhcnM6bnVtYmVyO1xuICAgIHByaXZhdGUgbm9kZUxlZnQ6Tm9kZTtcbiAgICBwcml2YXRlIG5vZGVSaWdodDpOb2RlO1xuXG4gICAgY3JlYXRlTm9kZSggX3BDaGFyczpudW1iZXIgKTp2b2lke1xuICAgICAgICB0aGlzLmZyZWN1ZW5jeSA9IDE7XG4gICAgICAgIHRoaXMuY2hhcnMgPSBfcENoYXJzO1xuICAgIH1cblxuICAgIGNyZWF0ZU5vZGVFeHRlbmQoIF9wRnJlY3VlbmN5Om51bWJlciwgX3BDaGFyczpudW1iZXIsIF9wTGVmdDpOb2RlLCBfcFJpZ2h0Ok5vZGUgKXtcbiAgICAgICAgdGhpcy5mcmVjdWVuY3kgPSBfcEZyZWN1ZW5jeTtcbiAgICAgICAgdGhpcy5jaGFycyA9IF9wQ2hhcnM7XG4gICAgICAgIHRoaXMubm9kZUxlZnQgPSBfcExlZnQ7XG4gICAgICAgIHRoaXMubm9kZVJpZ2h0ID0gX3BSaWdodDtcbiAgICB9XG5cbiAgICBnZXRDaGFyKCk6bnVtYmVye1xuICAgICAgICByZXR1cm4gdGhpcy5jaGFycztcbiAgICB9XG5cbiAgICBzZXRDaGFyKCBfcENoYXI6bnVtYmVyICk6dm9pZHtcbiAgICAgICAgdGhpcy5jaGFycyA9IF9wQ2hhcjtcbiAgICB9XG5cbiAgICBnZXRGcmVjdWVuY3koKTpudW1iZXJ7XG4gICAgICAgIHJldHVybiB0aGlzLmZyZWN1ZW5jeTtcbiAgICB9XG5cbiAgICBzZXRGcmVjdWVuY3koIF9wRnJlY3VlbmN5Om51bWJlciApOnZvaWR7XG4gICAgICAgIHRoaXMuZnJlY3VlbmN5ID0gX3BGcmVjdWVuY3k7XG4gICAgfVxuXG4gICAgZ2V0Tm9kZUxlZnQoKTpOb2Rle1xuICAgICAgICByZXR1cm4gdGhpcy5ub2RlTGVmdDtcbiAgICB9XG5cbiAgICBzZXROb2RlTGVmdCggX3BMZWZ0Ok5vZGUgKTp2b2lke1xuICAgICAgICB0aGlzLm5vZGVMZWZ0ID0gX3BMZWZ0O1xuICAgIH1cblxuICAgIGdldE5vZGVSaWdodCgpOk5vZGV7XG4gICAgICAgIHJldHVybiB0aGlzLm5vZGVSaWdodDtcbiAgICB9XG5cbiAgICBzZXROb2RlUmlnaHQoIF9wTm9kZVJpZ2h0Ok5vZGUgKTp2b2lke1xuICAgICAgICB0aGlzLm5vZGVSaWdodCA9IF9wTm9kZVJpZ2h0O1xuICAgIH0gIFxufSIsIi8qKlxuICogQ2NSZXF1ZXN0Q29sb21iaWEgbW9kZWxcbiAqL1xuZXhwb3J0IGNsYXNzIENjUmVxdWVzdENvbG9tYmlhIHtcbiAgICBsYW5ndWFnZTogc3RyaW5nO1xuICAgIGNvbW1hbmQ6IHN0cmluZztcbiAgICBtZXJjaGFudDogTWVyY2hhbnQ7XG4gICAgdHJhbnNhY3Rpb246IFRyYW5zYWN0aW9uO1xuICAgIHRlc3Q6IGJvb2xlYW47XG59XG5cbi8qKlxuICogTWVyY2hhbnQgbW9kZWxcbiAqL1xuZXhwb3J0IGNsYXNzIE1lcmNoYW50IHtcbiAgICBhcGlLZXk6IHN0cmluZztcbiAgICBhcGlMb2dpbjogc3RyaW5nO1xufVxuXG4vKipcbiAqIFRyYW5zYWN0aW9uIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBUcmFuc2FjdGlvbiB7XG4gICAgb3JkZXI6IE9yZGVyO1xuICAgIHBheWVyOiBQYXllcjtcbiAgICBjcmVkaXRDYXJkOiBDcmVkaXRDYXJkO1xuICAgIGV4dHJhUGFyYW1ldGVycz86IEV4dHJhUGFyYW1ldGVycztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgcGF5bWVudE1ldGhvZDogc3RyaW5nO1xuICAgIHBheW1lbnRDb3VudHJ5OiBzdHJpbmc7XG4gICAgZGV2aWNlU2Vzc2lvbklkOiBzdHJpbmc7XG4gICAgaXBBZGRyZXNzOiBzdHJpbmc7XG4gICAgY29va2llOiBzdHJpbmc7XG4gICAgdXNlckFnZW50OiBzdHJpbmc7XG59XG5cbi8qKlxuICogT3JkZXIgbW9kZWxcbiAqL1xuZXhwb3J0IGNsYXNzIE9yZGVyIHtcbiAgICBhY2NvdW50SWQ6IG51bWJlcjtcbiAgICByZWZlcmVuY2VDb2RlOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICBsYW5ndWFnZTogc3RyaW5nO1xuICAgIHNpZ25hdHVyZTogc3RyaW5nO1xuICAgIG5vdGlmeVVybD86IHN0cmluZztcbiAgICBhZGRpdGlvbmFsVmFsdWVzOiBBZGRpdGlvbmFsVmFsdWVzO1xuICAgIGJ1eWVyOiBCdXllcjtcbiAgICBzaGlwcGluZ0FkZHJlc3M/OiBTaGlwcGluZ0JpbGxpbmdBZGRyZXNzO1xufVxuXG4vKipcbiAqIFBheWVyIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBQYXllciB7XG4gICAgbWVyY2hhbnRQYXllcklkPzogc3RyaW5nO1xuICAgIGZ1bGxOYW1lOiBzdHJpbmc7XG4gICAgZW1haWxBZGRyZXNzOiBzdHJpbmc7XG4gICAgY29udGFjdFBob25lOiBzdHJpbmc7XG4gICAgZG5pTnVtYmVyOiBzdHJpbmc7XG4gICAgYmlsbGluZ0FkZHJlc3M6IFNoaXBwaW5nQmlsbGluZ0FkZHJlc3M7XG59XG5cbi8qKlxuICogQ3JlZGl0Q2FyZCBtb2RlbFxuICovXG5leHBvcnQgY2xhc3MgQ3JlZGl0Q2FyZCB7XG4gICAgbnVtYmVyOiBzdHJpbmc7XG4gICAgc2VjdXJpdHlDb2RlOiBzdHJpbmc7XG4gICAgZXhwaXJhdGlvbkRhdGU6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG59XG5cbi8qKlxuICogRXh0cmFQYXJhbWV0ZXJzIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHRyYVBhcmFtZXRlcnMge1xuICAgIElOU1RBTExNRU5UU19OVU1CRVI/OiBudW1iZXI7XG4gICAgUkVTUE9OU0VfVVJMPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEFkZGl0aW9uYWxWYWx1ZXMgbW9kZWxcbiAqL1xuZXhwb3J0IGNsYXNzIEFkZGl0aW9uYWxWYWx1ZXMge1xuICAgIFRYX1ZBTFVFOiBUWF9WQUxVRTtcbiAgICBUWF9UQVg/OiBUWF9UQVg7XG4gICAgVFhfVEFYX1JFVFVSTl9CQVNFPzogVFhfVEFYX1JFVFVSTl9CQVNFO1xufVxuXG4vKipcbiAqIFRYX1ZBTFVFIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBUWF9WQUxVRSB7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgICBjdXJyZW5jeTogc3RyaW5nO1xufVxuXG4vKipcbiAqIFRYX1RBWCBtb2RlbFxuICovXG5leHBvcnQgY2xhc3MgVFhfVEFYIHtcbiAgICB2YWx1ZTogbnVtYmVyO1xuICAgIGN1cnJlbmN5OiBzdHJpbmc7XG59XG5cbi8qKlxuICogVFhfVEFYX1JFVFVSTl9CQVNFIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBUWF9UQVhfUkVUVVJOX0JBU0Uge1xuICAgIHZhbHVlOiBudW1iZXI7XG4gICAgY3VycmVuY3k6IHN0cmluZztcbn1cblxuLyoqXG4gKiBCdXllciBtb2RlbFxuICovXG5leHBvcnQgY2xhc3MgQnV5ZXIge1xuICAgIG1lcmNoYW50QnV5ZXJJZD86IHN0cmluZztcbiAgICBmdWxsTmFtZTogc3RyaW5nO1xuICAgIGVtYWlsQWRkcmVzczogc3RyaW5nO1xuICAgIGNvbnRhY3RQaG9uZTogc3RyaW5nO1xuICAgIGRuaU51bWJlcjogc3RyaW5nO1xuICAgIHNoaXBwaW5nQWRkcmVzczogU2hpcHBpbmdCaWxsaW5nQWRkcmVzcztcbn1cblxuLyoqXG4gKiBTaGlwcGluZ0JpbGxpbmdBZGRyZXNzXG4gKi9cbmV4cG9ydCBjbGFzcyBTaGlwcGluZ0JpbGxpbmdBZGRyZXNzIHtcbiAgICBzdHJlZXQxPzogc3RyaW5nO1xuICAgIHN0cmVldDI/OiBzdHJpbmc7XG4gICAgY2l0eT86IHN0cmluZztcbiAgICBzdGF0ZT86IHN0cmluZztcbiAgICBjb3VudHJ5Pzogc3RyaW5nO1xuICAgIHBvc3RhbENvZGU/OiBzdHJpbmc7XG4gICAgcGhvbmU/OiBzdHJpbmc7XG59IiwiLyoqXG4gKiBSZXNwb25zZVF1ZXJ5IG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXNwb25zZVF1ZXJ5IHtcbiAgICBsYW5ndWFnZTogc3RyaW5nO1xuICAgIGNvbW1hbmQ6IHN0cmluZztcbiAgICBtZXJjaGFudDogTWVyY2hhbnQ7XG4gICAgZGV0YWlsczogRGV0YWlscztcbiAgICB0ZXN0OiBib29sZWFuO1xufVxuXG4vKipcbiAqIE1lcmNoYW50IG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBNZXJjaGFudCB7XG4gICAgYXBpS2V5OiBzdHJpbmc7XG4gICAgYXBpTG9naW46IHN0cmluZztcbn1cblxuLyoqXG4gKiBEZXRhaWxzIG1vZGVsXG4gKi9cbmV4cG9ydCBjbGFzcyBEZXRhaWxzIHtcbiAgICB0cmFuc2FjdGlvbklkOiBzdHJpbmc7XG59IiwiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21WYWxpZGF0b3JzIHtcblxuICBwdWJsaWMgc3RhdGljIGVtYWlsVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlLm1hdGNoKC9bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKD86XFwuW2EtejAtOSEjJCUmJyorLz0/Xl9ge3x9fi1dKykqQCg/OlthLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKT9cXC4pK1thLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKSs/LykpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyAnaW52YWxpZEVtYWlsQWRkcmVzcyc6IHRydWUgfTtcbiAgICB9XG4gIH1cblxuICAvKlxuICBwdWJsaWMgc3RhdGljIG51bWVyaWNWYWxpZGF0b3IoY29udHJvbDogQWJzdHJhY3RDb250cm9sKSB7XG4gICAgaWYgKGNvbnRyb2wudmFsdWUubWF0Y2goL14oMHxbMS05XVswLTldKikkLykpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyAnaW52YWxpZE51bWVyaWNGaWVsZCc6IHRydWUgfTtcbiAgICB9XG4gIH1cbiAgKi9cbiAgcHVibGljIHN0YXRpYyBudW1lcmljVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlLm1hdGNoKC9eXFxkKyQvKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7ICdpbnZhbGlkTnVtZXJpY0ZpZWxkJzogdHJ1ZSB9O1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgbGV0dGVyVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlLm1hdGNoKC9eW0Etel0rJC8pKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgJ2ludmFsaWRMZXR0ZXJGaWVsZCc6IHRydWUgfTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGxldHRlclNwYWNlVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlLm1hdGNoKC9eW2EtekEtWlxcc10qJC8pKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgJ2ludmFsaWRMZXR0ZXJTcGFjZUZpZWxkJzogdHJ1ZSB9O1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZGF5T2ZEYXRlVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlID49IDEgJiYgY29udHJvbC52YWx1ZSA8PSAzMSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7ICdpbnZhbGlkRGF5RmllbGQnOiB0cnVlIH07XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBtb250aE9mRGF0ZVZhbGlkYXRvcihjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpIHtcbiAgICBpZiAoY29udHJvbC52YWx1ZSA+PSAxICYmIGNvbnRyb2wudmFsdWUgPD0gMTIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyAnaW52YWxpZE1vbnRoRmllbGQnOiB0cnVlIH07XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyB5ZWFyT2ZEYXRlVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sLnZhbHVlID49IDE5NzApIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyAnaW52YWxpZFllYXJGaWVsZCc6IHRydWUgfTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIG5vU3BhY2VzVmFsaWRhdG9yKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmKGNvbnRyb2wudmFsdWUgIT09IG51bGwgJiYgY29udHJvbC52YWx1ZSAhPT0gdW5kZWZpbmVkKXtcbiAgICAgIGlmIChjb250cm9sLnZhbHVlLm1hdGNoKC9eXFxTKiQvKSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7ICdpbnZhbGlkTm9TcGFjZXNWYWxpZGF0b3InOiB0cnVlIH07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLypQYXNzd29yZCBjb25zdHJhaW50c1xuICAgIG1pbiA2IGNoYXJhY3RlcnNcbiAgICBtYXggMjAgY2hhcmFjdGVyc1xuICAgIGxvd2VyIGFuZCB1cHBlciBsZXR0ZXJzXG4gICAgbnVtYmVyc1xuICAgIGFsbG93ZWQgY2hhcmFjdGVycyAhQCMkJV4mKlxuICAqL1xuICAvKnB1YmxpYyBzdGF0aWMgcGFzc3dvcmRWYWxpZGF0b3IoY29udHJvbDogQWJzdHJhY3RDb250cm9sKSB7XG5cdCAgICBpZiAoY29udHJvbC52YWx1ZS5tYXRjaCgvXig/PS4qWzAtOV0pW2EtekEtWjAtOSFAIyQlXiYqXXs2LDIwfSQvKSkge1xuXHQgICAgICByZXR1cm4gbnVsbDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICAgIHJldHVybiB7J2ludmFsaWRQYXNzd29yZCc6IHRydWUgfTtcblx0ICAgIH1cbiAgfSovXG59ICIsImltcG9ydCB7IEFjY291bnRzIH0gZnJvbSAnbWV0ZW9yL2FjY291bnRzLWJhc2UnO1xuXG5BY2NvdW50cy5vbkNyZWF0ZVVzZXIoZnVuY3Rpb24gKG9wdGlvbnMsIHVzZXIpIHtcblxuICAgIHVzZXIucHJvZmlsZSA9IG9wdGlvbnMucHJvZmlsZSB8fCB7fTtcbiAgICB1c2VyLnByb2ZpbGUuZnVsbF9uYW1lID0gb3B0aW9ucy5wcm9maWxlLmZ1bGxfbmFtZTtcbiAgICB1c2VyLnByb2ZpbGUubGFuZ3VhZ2VfY29kZSA9IG9wdGlvbnMucHJvZmlsZS5sYW5ndWFnZV9jb2RlO1xuICAgIHVzZXIucHJvZmlsZS5nZW5kZXIgPSBvcHRpb25zLnByb2ZpbGUuZ2VuZGVyO1xuXG4gICAgLy8gUmV0dXJucyB0aGUgdXNlciBvYmplY3RcbiAgICByZXR1cm4gdXNlcjtcbn0pOyIsImltcG9ydCB7IEFjY291bnRzIH0gZnJvbSAnbWV0ZW9yL2FjY291bnRzLWJhc2UnO1xuaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBQYXJhbWV0ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL3BhcmFtZXRlci5tb2RlbCc7XG5pbXBvcnQgeyBQYXJhbWV0ZXJzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BhcmFtZXRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVtYWlsQ29udGVudHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvZW1haWwtY29udGVudC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVtYWlsQ29udGVudCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2dlbmVyYWwvZW1haWwtY29udGVudC5tb2RlbCc7XG5cbkFjY291bnRzLnVybHMucmVzZXRQYXNzd29yZCA9IGZ1bmN0aW9uICh0b2tlbikge1xuICAgIHJldHVybiBNZXRlb3IuYWJzb2x1dGVVcmwoJ3Jlc2V0LXBhc3N3b3JkLycgKyB0b2tlbik7XG59O1xuXG5mdW5jdGlvbiBncmVldCgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHVzZXIsIHVybCkge1xuXG4gICAgICAgIGxldCBlbWFpbENvbnRlbnQ6IEVtYWlsQ29udGVudCA9IEVtYWlsQ29udGVudHMuY29sbGVjdGlvbi5maW5kT25lKHsgbGFuZ3VhZ2U6IHVzZXIucHJvZmlsZS5sYW5ndWFnZV9jb2RlIH0pO1xuICAgICAgICBsZXQgZ3JlZXRWYXIgPSBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2dyZWV0VmFyJyk7XG4gICAgICAgIGxldCB3ZWxjb21lTXNnVmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICd3ZWxjb21lTXNnVmFyJyk7XG4gICAgICAgIGxldCBidG5UZXh0VmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdidG5UZXh0VmFyJyk7XG4gICAgICAgIGxldCBiZWZvcmVNc2dWYXIgPSBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2JlZm9yZU1zZ1ZhcicpO1xuICAgICAgICBsZXQgcmVnYXJkVmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdyZWdhcmRWYXInKTtcbiAgICAgICAgbGV0IGZvbGxvd01zZ1ZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAnZm9sbG93TXNnVmFyJyk7XG5cbiAgICAgICAgbGV0IGZhY2Vib29rVmFyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnZmFjZWJvb2tfbGluaycgfSkudmFsdWU7XG4gICAgICAgIGxldCB0d2l0dGVyVmFyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAndHdpdHRlcl9saW5rJyB9KS52YWx1ZTtcbiAgICAgICAgbGV0IGluc3RhZ3JhbVZhciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2luc3RhZ3JhbV9saW5rJyB9KS52YWx1ZTtcbiAgICAgICAgbGV0IGl1cmVzdFZhciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2l1cmVzdF91cmwnIH0pLnZhbHVlO1xuICAgICAgICBsZXQgaXVyZXN0SW1nVmFyID0gUGFyYW1ldGVycy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBuYW1lOiAnaXVyZXN0X2ltZ191cmwnIH0pLnZhbHVlO1xuXG4gICAgICAgIHZhciBncmVldGluZyA9ICh1c2VyLnByb2ZpbGUgJiYgdXNlci5wcm9maWxlLmZpcnN0X25hbWUpID8gKGdyZWV0VmFyICsgJyAnICsgdXNlci5wcm9maWxlLmZpcnN0X25hbWUgKyBcIixcIikgOiBncmVldFZhcjtcblxuICAgICAgICByZXR1cm4gYFxuICAgICAgICA8dGFibGUgYm9yZGVyPVwiMFwiIHdpZHRoPVwiMTAwJVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiIGJnY29sb3I9XCIjZjVmNWY1XCI+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAyMHB4IDAgMzBweCAwO1wiPlxuICAgICAgICAgICAgICAgICAgICA8dGFibGUgc3R5bGU9XCJib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMik7XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cIjBcIiB3aWR0aD1cIjYwJVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAxMHB4IDAgMTBweCAwO1wiIGFsaWduPVwiY2VudGVyXCIgYmdjb2xvcj1cIiMzYzQxNDZcIj48aW1nIHN0eWxlPVwiZGlzcGxheTogYmxvY2s7XCIgc3JjPSR7aXVyZXN0SW1nVmFyfWxvZ29faXVyZXN0X3doaXRlLnBuZyBhbHQ9XCJSZXNldCBwYXNzd2RcIiAvPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6IDEwcHggMzBweCAxMHB4IDMwcHg7XCIgYmdjb2xvcj1cIiNmZmZmZmZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9XCIwXCIgd2lkdGg9XCIxMDAlXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAxNXB4IDAgMCAwOyBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZTogMjRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7XCI+JHtncmVldGluZ308L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAxNXB4IDAgMTBweCAwOyBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XCI+JHt3ZWxjb21lTXNnVmFyfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6IDIwcHggMCAyMHB4IDA7IGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPVwiY2VudGVyXCI+PGEgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLXdpZHRoOiAycHg7IGNvbG9yOiAjRUY1MzUwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDEwcHggMzBweDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBmb250LXdlaWdodDogYm9sZCBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiR7dXJsfVwiPiR7YnRuVGV4dFZhcn08L2E+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAwIDAgMCAwOyBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+JHtiZWZvcmVNc2dWYXJ9IDxiciAvPiAke3JlZ2FyZFZhcn08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAwcHggMzBweCAxMHB4IDMwcHg7XCIgYmdjb2xvcj1cIiNmZmZmZmZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxociAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj1cIjBcIiB3aWR0aD1cIjEwMCVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cImZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcIj4ke2ZvbGxvd01zZ1Zhcn08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPVwicmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPVwiMFwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIGhyZWY9JHtmYWNlYm9va1Zhcn0+IDxpbWcgc3R5bGU9XCJkaXNwbGF5OiBibG9jaztcIiBzcmM9JHtpdXJlc3RJbWdWYXJ9ZmFjZWJvb2tfcmVkLnBuZyBhbHQ9XCJGYWNlYm9va1wiIC8+IDwvYT48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cImZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7XCIgd2lkdGg9XCIyMFwiPiZuYnNwOzwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIGhyZWY9JHt0d2l0dGVyVmFyfT4gPGltZyBzdHlsZT1cImRpc3BsYXk6IGJsb2NrO1wiIHNyYz0ke2l1cmVzdEltZ1Zhcn10d2l0dGVyX3JlZC5wbmcgYWx0PVwiVHdpdHRlclwiIC8+IDwvYT48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cImZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7XCIgd2lkdGg9XCIyMFwiPiZuYnNwOzwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIGhyZWY9JHtpbnN0YWdyYW1WYXJ9PiA8aW1nIHN0eWxlPVwiZGlzcGxheTogYmxvY2s7XCIgc3JjPSR7aXVyZXN0SW1nVmFyfWluc3RhZ3JhbV9yZWQucG5nIGFsdD1cIkluc3RhZ3JhbVwiIC8+IDwvYT48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVwiZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyBwYWRkaW5nOiAxMHB4IDAgMTBweCAwO1wiPjxhIHN0eWxlPVwiZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGZsb2F0OiBsZWZ0O1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9JHtpdXJlc3RWYXJ9Pml1cmVzdC5jb208L2E+PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgPC90Ym9keT5cbiAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgYDtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBncmVldFRleHQoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh1c2VyLCB1cmwpIHtcblxuICAgICAgICBsZXQgZW1haWxDb250ZW50OiBFbWFpbENvbnRlbnQgPSBFbWFpbENvbnRlbnRzLmNvbGxlY3Rpb24uZmluZE9uZSh7IGxhbmd1YWdlOiB1c2VyLnByb2ZpbGUubGFuZ3VhZ2VfY29kZSB9KTtcbiAgICAgICAgbGV0IGdyZWV0VmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdncmVldFZhcicpO1xuICAgICAgICBsZXQgd2VsY29tZU1zZ1ZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAnd2VsY29tZU1zZ1ZhcicpO1xuICAgICAgICBsZXQgYnRuVGV4dFZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAnYnRuVGV4dFZhcicpO1xuICAgICAgICBsZXQgYmVmb3JlTXNnVmFyID0gTWV0ZW9yLmNhbGwoJ2dldEVtYWlsQ29udGVudCcsIGVtYWlsQ29udGVudC5sYW5nX2RpY3Rpb25hcnksICdiZWZvcmVNc2dWYXInKTtcbiAgICAgICAgbGV0IHJlZ2FyZFZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVnYXJkVmFyJyk7XG4gICAgICAgIGxldCBmb2xsb3dNc2dWYXIgPSBNZXRlb3IuY2FsbCgnZ2V0RW1haWxDb250ZW50JywgZW1haWxDb250ZW50LmxhbmdfZGljdGlvbmFyeSwgJ2ZvbGxvd01zZ1ZhcicpO1xuXG4gICAgICAgIHZhciBncmVldGluZyA9ICh1c2VyLnByb2ZpbGUgJiYgdXNlci5wcm9maWxlLmZpcnN0X25hbWUpID8gKGdyZWV0VmFyICsgdXNlci5wcm9maWxlLmZpcnN0X25hbWUgKyBcIixcIikgOiBncmVldFZhcjtcblxuICAgICAgICByZXR1cm4gYCAgICAke2dyZWV0aW5nfVxuICAgICAgICAgICAgICAgICAgICAke3dlbGNvbWVNc2dWYXJ9XG4gICAgICAgICAgICAgICAgICAgICR7dXJsfVxuICAgICAgICAgICAgICAgICAgICAke2JlZm9yZU1zZ1Zhcn1cbiAgICAgICAgICAgICAgICAgICAgJHtyZWdhcmRWYXJ9XG4gICAgICAgICAgICAgICBgO1xuICAgIH1cbn1cblxuQWNjb3VudHMuZW1haWxUZW1wbGF0ZXMgPSB7XG4gICAgZnJvbTogJycsXG4gICAgc2l0ZU5hbWU6IE1ldGVvci5hYnNvbHV0ZVVybCgpLnJlcGxhY2UoL15odHRwcz86XFwvXFwvLywgJycpLnJlcGxhY2UoL1xcLyQvLCAnJyksXG4gICAgcmVzZXRQYXNzd29yZDoge1xuICAgICAgICBzdWJqZWN0OiBmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgbGV0IGVtYWlsQ29udGVudDogRW1haWxDb250ZW50ID0gRW1haWxDb250ZW50cy5jb2xsZWN0aW9uLmZpbmRPbmUoeyBsYW5ndWFnZTogdXNlci5wcm9maWxlLmxhbmd1YWdlX2NvZGUgfSk7XG4gICAgICAgICAgICBsZXQgc3ViamVjdFZhciA9IE1ldGVvci5jYWxsKCdnZXRFbWFpbENvbnRlbnQnLCBlbWFpbENvbnRlbnQubGFuZ19kaWN0aW9uYXJ5LCAncmVzZXRQYXNzd29yZFN1YmplY3RWYXInKTtcblxuICAgICAgICAgICAgcmV0dXJuIHN1YmplY3RWYXIgKyAnICcgKyBBY2NvdW50cy5lbWFpbFRlbXBsYXRlcy5zaXRlTmFtZTtcbiAgICAgICAgfSxcbiAgICAgICAgaHRtbDogZ3JlZXQoKSxcbiAgICAgICAgdGV4dDogZ3JlZXRUZXh0KCksXG4gICAgfSxcbiAgICB2ZXJpZnlFbWFpbDoge1xuICAgICAgICBzdWJqZWN0OiBmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgcmV0dXJuIFwiSG93IHRvIHZlcmlmeSBlbWFpbCBhZGRyZXNzIG9uIFwiICsgQWNjb3VudHMuZW1haWxUZW1wbGF0ZXMuc2l0ZU5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIHRleHQ6IGdyZWV0KClcbiAgICB9LFxuICAgIGVucm9sbEFjY291bnQ6IHtcbiAgICAgICAgc3ViamVjdDogZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBcIkFuIGFjY291bnQgaGFzIGJlZW4gY3JlYXRlZCBmb3IgeW91IG9uIFwiICsgQWNjb3VudHMuZW1haWxUZW1wbGF0ZXMuc2l0ZU5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIHRleHQ6IGdyZWV0KClcbiAgICB9XG59O1xuXG5cbkFjY291bnRzLmVtYWlsVGVtcGxhdGVzLnJlc2V0UGFzc3dvcmQuZnJvbSA9ICgpID0+IHtcbiAgICBsZXQgZnJvbVZhciA9IFBhcmFtZXRlcnMuY29sbGVjdGlvbi5maW5kT25lKHsgbmFtZTogJ2Zyb21fZW1haWwnIH0pLnZhbHVlO1xuICAgIHJldHVybiBmcm9tVmFyO1xufTtcbiIsImltcG9ydCB7IE1lbnVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL21lbnUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBNZW51IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvYXV0aC9tZW51Lm1vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRNZW51cygpIHtcblxuICAgIGlmIChNZW51cy5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApIHtcblxuICAgICAgICBjb25zdCBtZW51czogTWVudVtdID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCI5MDBcIixcbiAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5EQVNIQk9BUkQuREFTSEJPQVJEXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvZGFzaGJvYXJkXCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcInRyZW5kaW5nIHVwXCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDkwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiOTEwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuREFTSEJPQVJELkRBU0hCT0FSRFwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2Rhc2hib2FyZHNcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwidHJlbmRpbmcgdXBcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogOTEwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxMDAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLlJFV0FSRFNcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9yZXdhcmRzXCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcImdyYWRlXCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDEwMDAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxMDAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuQURNSU5JU1RSQVRJT04uTUFOQUdFTUVOVFwiLFxuICAgICAgICAgICAgICAgIHVybDogXCJcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwic3VwZXJ2aXNvciBhY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDEwMDAsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46XG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMTAwMVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLlJFU1RBVVJBTlRTXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMTAwMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIxMDAxMVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLk1ZX1JFU1RBVVJBTlRTXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvZXN0YWJsaXNobWVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMTAwMTFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMTAwMTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5BRE1JTklTVFJBVElPTi5QUk9GSUxFXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvZXN0YWJsaXNobWVudC1wcm9maWxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAxMDAxMlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIxMDAxM1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLk1PTlRITFlfQ09ORklHXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvbW9udGhseS1jb25maWdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDEwMDEzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMTAwMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLlRBQkxFU1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDEwMDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMTAwMjFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5BRE1JTklTVFJBVElPTi5UQUJMRVNfU0VBUkNIXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvdGFibGVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAxMDAyMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIxMDAyMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLlRBQkxFX0NPTlRST0xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9lc3RhYmxpc2htZW50LXRhYmxlLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDEwMDIyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMTAwM1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLkNPTExBQk9SQVRPUlNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9jb2xsYWJvcmF0b3JzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAxMDAzXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2lkOiBcIjExMDBcIixcbiAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5BRE1JTklTVFJBVElPTi5DT0xMQUJPUkFUT1JTXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvc3VwZXJ2aXNvci1jb2xsYWJvcmF0b3JzXCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcInN1cGVydmlzb3IgYWNjb3VudFwiLFxuICAgICAgICAgICAgICAgIG9yZGVyOiAxMTAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxMjAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuQURNSU5JU1RSQVRJT04uVEFCTEVTXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvc3VwZXJ2aXNvci10YWJsZXNcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwicmVzdGF1cmFudFwiLFxuICAgICAgICAgICAgICAgIG9yZGVyOiAxMjAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxMzAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuQURNSU5JU1RSQVRJT04uVEFCTEVfQ09OVFJPTFwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL3N1cGVydmlzb3ItZXN0YWJsaXNobWVudC10YWJsZS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcImxpc3RcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogMTMwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiMjAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5QQVlNRU5UUy5QQVlNRU5UU1wiLFxuICAgICAgICAgICAgICAgIHVybDogXCJcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwicGF5bWVudFwiLFxuICAgICAgICAgICAgICAgIG9yZGVyOiAyMDAwLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOlxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBcIjIwMDFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5QQVlNRU5UUy5NT05USExZX1BBWU1FTlRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9tb250aGx5LXBheW1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDIwMDFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBcIjIwMDJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5QQVlNRU5UUy5QQVlNRU5UX0hJU1RPUllcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9wYXltZW50LWhpc3RvcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDIwMDJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBcIjIwMDNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5QQVlNRU5UUy5SRUFDVElWQVRFX1JFU1RBVVJBTlRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9yZWFjdGl2YXRlLWVzdGFibGlzaG1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDIwMDNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiMTQwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLk9SREVSU19UT0RBWVwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL29yZGVycy10b2RheVwiLFxuICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJsaXN0XCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDEzMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2lkOiBcIjMwMDBcIixcbiAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5NRU5VX0RFRklOSVRJT04uTUVOVV9ERUZJTklUSU9OXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIlwiLFxuICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJsaXN0XCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDMwMDAsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46XG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMzAwMVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLk1FTlVfREVGSU5JVElPTi5TRUNUSU9OU1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL3NlY3Rpb25zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAzMDAxXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBcIjMwMDJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5NRU5VX0RFRklOSVRJT04uQ0FURUdPUklFU1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2NhdGVnb3JpZXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDMwMDJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMzAwM1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLk1FTlVfREVGSU5JVElPTi5TVUJDQVRFR09SSUVTXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvc3ViY2F0ZWdvcmllc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMzAwM1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIzMDA0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLkFERElUSU9OU1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2FkZGl0aW9uc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMzAwNFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIzMDA1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLk9QVElPTlNfVkFMVUVTXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMzAwNSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMzAwNTFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLk9QVElPTlNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL29wdGlvbnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAzMDA1MVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaWQ6IFwiMzAwNTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLlZBTFVFU1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvb3B0aW9uLXZhbHVlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDMwMDUyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBcIjMwMDZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5NRU5VX0RFRklOSVRJT04uSVRFTVNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9pdGVtc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMzAwNlxuICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogXCIzMDA3XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLklURU1TX0VOQUJMRVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2l0ZW1zLWVuYWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMzAwN1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIzMTAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuTUVOVV9ERUZJTklUSU9OLklURU1TX0VOQUJMRVwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2l0ZW1zLWVuYWJsZS1zdXBcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiZG9uZSBhbGxcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogMzEwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiNDAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLk9SREVSU1wiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL29yZGVyc1wiLFxuICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJkbnNcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogNDAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiNjAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLldBSVRFUl9DQUxMXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvd2FpdGVyLWNhbGxcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwicmVjb3JkX3ZvaWNlX292ZXJcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogNjAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiNzAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLk1FTlVfREVGSU5JVElPTi5PUkRFUlNfQ0hFRlwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2NoZWYtb3JkZXJzXCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcImxpc3RcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogNzAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiODAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkNBTExTXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvY2FsbHNcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwicGFuX3Rvb2xcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogODAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiOTAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLk1FTlVfREVGSU5JVElPTi5NRU5VX0RFRklOSVRJT05cIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9tZW51LWxpc3RcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwicmVzdGF1cmFudF9tZW51XCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDkwMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2lkOiBcIjIwMDAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuU0VUVElOR1NcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC9zZXR0aW5nc1wiLFxuICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJzZXR0aW5nc1wiLFxuICAgICAgICAgICAgICAgIG9yZGVyOiAyMDAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBfaWQ6IFwiMTEwMDBcIixcbiAgICAgICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJNRU5VUy5UQUJMRVNcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwcC90YWJsZS1jaGFuZ2VcIixcbiAgICAgICAgICAgICAgICBpY29uX25hbWU6IFwiY29tcGFyZV9hcnJvd3NcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogMTEwMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2lkOiBcIjEyMDAwXCIsXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiTUVOVVMuUkVTVEFVUkFOVF9FWElUXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcHAvZXN0YWJsaXNobWVudC1leGl0XCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcImV4aXRfdG9fYXBwXCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDEyMDAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxOTAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLlBPSU5UU1wiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL3BvaW50c1wiLFxuICAgICAgICAgICAgICAgIGljb25fbmFtZTogXCJwYXltZW50XCIsXG4gICAgICAgICAgICAgICAgb3JkZXI6IDE5MDAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogXCIxMzAwMFwiLFxuICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcIk1FTlVTLkFETUlOSVNUUkFUSU9OLk9SREVSU19UT0RBWVwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBwL2Nhc2hpZXItb3JkZXJzLXRvZGF5XCIsXG4gICAgICAgICAgICAgICAgaWNvbl9uYW1lOiBcImxpc3RcIixcbiAgICAgICAgICAgICAgICBvcmRlcjogMTMwMDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcbiAgICAgICAgbWVudXMuZm9yRWFjaCgobWVudTogTWVudSkgPT4gTWVudXMuaW5zZXJ0KG1lbnUpKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC9yb2xlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUm9sZSB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvcm9sZS5tb2RlbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkUm9sZXMoKSB7XG5cbiAgICBpZihSb2xlcy5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDAgKXtcblxuICAgICAgICBjb25zdCByb2xlczogUm9sZVtdID0gW3tcbiAgICAgICAgICAgIF9pZDogXCIxMDBcIixcbiAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6IFwiUk9MRS5BRE1JTklTVFJBVE9SXCIsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJlc3RhYmxpc2htZW50IGFkbWluaXN0cmF0b3JcIixcbiAgICAgICAgICAgIG1lbnVzOiBbXCI5MDBcIiwgXCIxMDAwXCIsIFwiMTQwMFwiLFwiMjAwMFwiLCBcIjMwMDBcIiwgXCIxMDAwMFwiLCBcIjIwMDAwXCJdXG4gICAgICAgIH0se1xuICAgICAgICAgICAgX2lkOiBcIjIwMFwiLFxuICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogXCJST0xFLldBSVRFUlwiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiZXN0YWJsaXNobWVudCB3YWl0ZXJcIixcbiAgICAgICAgICAgIG1lbnVzOiBbXCI4MDAwXCIsXCI5MDAwXCIsIFwiMjAwMDBcIl0sXG4gICAgICAgICAgICB1c2VyX3ByZWZpeDogJ3dhJ1xuICAgICAgICB9LHtcbiAgICAgICAgICAgIF9pZDogXCIzMDBcIixcbiAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6IFwiUk9MRS5DQVNISUVSXCIsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJlc3RhYmxpc2htZW50IGNhc2hpZXJcIixcbiAgICAgICAgICAgIG1lbnVzOiBbXCIxMzAwMFwiLCBcIjIwMDAwXCJdLFxuICAgICAgICAgICAgdXNlcl9wcmVmaXg6ICdjYScgICAgICAgICAgICBcbiAgICAgICAgfSx7XG4gICAgICAgICAgICBfaWQ6IFwiNDAwXCIsXG4gICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiBcIlJPTEUuQ1VTVE9NRVJcIixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcImVzdGFibGlzaG1lbnQgY3VzdG9tZXJcIixcbiAgICAgICAgICAgIG1lbnVzOiBbXCI0MDAwXCIsXCI2MDAwXCIsXCIxMTAwMFwiLFwiMTIwMDBcIixcIjIwMDAwXCIsIFwiMTkwMDBcIl1cbiAgICAgICAgfSx7XG4gICAgICAgICAgICBfaWQ6IFwiNjAwXCIsXG4gICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiBcIlJPTEUuU1VQRVJWSVNPUlwiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiZXN0YWJsaXNobWVudCBzdXBlcnZpc29yXCIsXG4gICAgICAgICAgICBtZW51czogW1wiOTEwXCIsXCIxMTAwXCIsXCIzMTAwXCIsIFwiMTIwMFwiLCBcIjEzMDBcIiwgXCIyMDAwMFwiXSxcbiAgICAgICAgICAgIHVzZXJfcHJlZml4OiAnc3AnICAgICAgICAgICAgXG4gICAgICAgIH1dO1xuXG4gICAgICAgIHJvbGVzLmZvckVhY2goKHJvbGU6IFJvbGUpID0+IFJvbGVzLmluc2VydChyb2xlKSk7XG4gICAgfVxufSIsImltcG9ydCB7IENpdGllcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jaXR5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ2l0eSB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2dlbmVyYWwvY2l0eS5tb2RlbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ2l0aWVzKCl7XG4gICAgaWYoQ2l0aWVzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PT0gMCl7XG4gICAgICAgIGNvbnN0IGNpdGllczogQ2l0eVtdID0gW1xuICAgICAgICAgICAgeyBfaWQ6ICcxOTAxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQWd1YWRhcycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbWF6b25hcycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBcmF1Y2EnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTA0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQXJtZW5pYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCYXJpY2hhcmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTA2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQmFycmFucXVpbGxhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkwNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0JvZ290w6EgRC5DJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkwOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0J1Y2FyYW1hbmdhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkwOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0J1ZW5hdmVudHVyYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCdWdhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkxMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NhbGknLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTEyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FydGFnZW5hIGRlIEluZGlhcycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MTMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYXJ0YWdvJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkxNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaXF1aW5xdWlyw6EnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTE1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2hvY8OzJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkxNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Npw6luYWdhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkxNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0PDumN1dGEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTE4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRWwgQ29jdXknLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTE5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRWwgRXNwaW5hbCcsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFbCBIb2JvJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0VsIEphcmTDrW4nLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTIyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRmxvcmVuY2lhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dpcmFyZG90JywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dpcsOzbicsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MjUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHdWFkdWFzJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0d1YWluw61hJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0d1YXBpJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0hvbmRhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkyOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0liYWd1w6knLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTMwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSW56w6EnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTMxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSmVyaWPDsycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MzInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBDYWxlcmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTMzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGEgTWFjYXJlbmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTM0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGEgUGxheWEgZGUgQmVsw6luJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkzNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvcmljYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MzYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNYW5pemFsZXMnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTM3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWVkZWxsw61uJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTkzOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01lbGdhcicsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5MzknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNaXTDuicsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NDAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb2NvYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb21wb3gnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9uZ3XDrScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb250ZXLDrWEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQ0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTmVpdmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQ1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFpcGEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQ2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFtcGxvbmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQ3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFzdG8nLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTQ4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVyZWlyYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NDknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQaXRhbGl0bycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQb3BhecOhbicsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQcmFkbycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NTInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdWVydG8gQ2FycmXDsW8nLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTUzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmlvaGFjaGEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTU0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FsYW1pbmEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTU1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEFndXN0w61uJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTk1NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBBbmRyw6lzJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTk1NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBHaWwnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTU4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEpvc8OpIGRlbCBHdWF2aWFyZScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NTknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW50YSBGZSBkZSBBbnRpb3F1aWEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTYwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGEgTWFydGEnLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTYxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGEgUm9zYSBkZSBDYWJhbCcsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NjInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTaWJ1bmRveScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTaW5jZWxlam8nLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTY0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU29jb3JybycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NjUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTb2dhbW9zbycsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NjYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUdW5qYScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NjcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdWYWxsZWR1cGFyJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTk2OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGxhIGRlIExleXZhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTk2OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGxhdmljZW5jaW8nLCBjb3VudHJ5OiAnMTkwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTcwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGV0YScsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NzEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdZb3BhbCcsIGNvdW50cnk6ICcxOTAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE5NzInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdaaXBhcXVpcsOhJywgY291bnRyeTogJzE5MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcwMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Fpc8OpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbGdhcnJvYm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzAzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQWxodcOpJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcwNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0FsdG8gQmlvYsOtbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbHRvIGRlbCBDYXJtZW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzA2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQWx0byBIb3NwaWNpbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbmN1ZCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbmRhY29sbG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzA5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQW5nb2wnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQW50w6FydGljYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbnRvZmFnYXN0YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbnR1Y28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQXJhdWNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0FyaWNhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0J1aW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQnVsbmVzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NhYmlsZG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FibyBkZSBIb3Jub3MnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FicmVybycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYWxhbWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FsYnVjbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYWxkZXJhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NhbGVyYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYWxlcmEgZGUgVGFuZ28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FsbGUgTGFyZ2EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FtYXJvbmVzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NhbWnDsWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FuZWxhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Nhw7FldGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FyYWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYXJ0YWdlbmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FzYWJsYW5jYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDYXN0cm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2F0ZW11JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NhdXF1ZW5lcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDZXJyaWxsb3MnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2Vycm8gTmF2aWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2hhaXTDqW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2hhbmNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc0MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoYcOxYXJhbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaMOpcGljYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGlndWF5YW50ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGlsZSBDaGljbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGlsbMOhbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGlsbMOhbiBWaWVqbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGltYmFyb25nbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaG9sY2hvbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaG9uY2hpJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc0OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Npc25lcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb2JxdWVjdXJhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc1MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvY2hhbcOzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc1MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvY2hyYW5lJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc1MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvZGVndWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzU0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29lbGVtdScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb2loYWlxdWUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzU2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29paHVlY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzU3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29pbmNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc1OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvbGLDum4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzU5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29sY2hhbmUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzYwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29saW5hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc2MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvbGxpcHVsbGknLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzYyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29sdGF1Y28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzYzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29tYmFyYmFsw6EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzY0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29uY2VwY2nDs24nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzY1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29uY2hhbMOtJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc2NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvbmPDs24nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzY3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29uc3RpdHVjacOzbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NjgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb250dWxtbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb3BpYXDDsycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb3F1aW1ibycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb3JvbmVsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc3MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvcnJhbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDdW5jbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDdXJhY2F1dMOtbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDdXJhY2F2w60nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzc2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ3VyYWNvIGRlIFbDqWxleicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDdXJhbmlsYWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3NzgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDdXJhcnJlaHVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc3OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0N1cmVwdG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzgwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ3VyaWPDsycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3ODEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdEYWxjYWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3ODInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdEaWVnbyBkZSBBbG1hZ3JvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc4MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Rvw7FpaHVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc4NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0VsIEJvc3F1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3ODUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFbCBDYXJtZW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzg2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRWwgTW9udGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzg3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRWwgUXVpc2NvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc4OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0VsIFRhYm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzg5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRW1wZWRyYWRvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc5MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0VyY2lsbGEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzkxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRXN0YWNpw7NuIENlbnRyYWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzkyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRmxvcmlkYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3OTMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdGcmVpcmUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzk0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRnJlaXJpbmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzk1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRnJlc2lhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc5NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0ZydXRpbGxhcicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3OTcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdGdXRhbGV1ZsO6JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTc5OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Z1dHJvbm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzk5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnR2FsdmFyaW5vJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHZW5lcmFsIExhZ29zJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHb3JiZWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEwMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dyYW5lcm9zJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHdWFpdGVjYXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEwNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0hpanVlbGFzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWFsYWlodcOpJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWFsYcOxw6knLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEwNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0h1YWxww6luJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWFscXVpJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMDknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWFyYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTEwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSHVhc2NvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWVjaHVyYWJhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMTInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdJZ25vcmFkYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSWxsYXBlbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTE0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSW5kZXBlbmRlbmNpYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTE1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSXF1aXF1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTE2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSXNsYSBkZSBNYWlwbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTE3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSXNsYSBkZSBQYXNjdWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzExOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0p1YW4gRmVybsOhbmRleicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTE5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGEgQ2lzdGVybmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEyMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhIENydXonLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEyMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhIEVzdHJlbGxhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMjInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBGbG9yaWRhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBHcmFuamEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEyNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhIEhpZ3VlcmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEyNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhIExpZ3VhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMjYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBQaW50YW5hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMjcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBSZWluYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTI4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGEgU2VyZW5hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBVbmnDs24nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhZ28gUmFuY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhZ28gVmVyZGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhZ3VuYSBCbGFuY2EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhamEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzEzNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhbXBhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxMzUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYW5jbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTM2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGFzIENhYnJhcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTM3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGFzIENvbmRlcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTM4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGF1dGFybycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTM5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGVidScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTQwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGljYW50w6luJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMaW1hY2hlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMaW5hcmVzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMaXR1ZWNoZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTQ0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGxhaWxsYXknLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE0NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xsYW5xdWlodWUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE0NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvIEJhcm5lY2hlYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTQ3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG8gRXNwZWpvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMbyBQcmFkbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTQ5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9sb2wnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE1MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvbmNvY2hlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMb25nYXbDrScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTUyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9ucXVpbWF5JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNTMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMb3Mgw4FsYW1vcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTU0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9zIEFuZGVzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMb3Mgw4FuZ2VsZXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE1NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvcyBMYWdvcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTU3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9zIE11ZXJtb3MnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE1OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvcyBTYXVjZXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE1OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xvcyBWaWxvcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTYwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG90YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTYxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTHVtYWNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNjInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNYWNoYWzDrScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTYzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFjdWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE2NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ03DoWZpbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTY1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFpcMO6JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNjYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNYWxsb2EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE2NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hcmNoaWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTY4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFyw61hIEVsZW5hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNYXLDrWEgUGludG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE3MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hcmlxdWluYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTcxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWF1bGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE3MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hdWxsw61uJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNzMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNZWppbGxvbmVzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNZWxpcGV1Y28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE3NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01lbGlwaWxsYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTc2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9saW5hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb250ZSBQYXRyaWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE3OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01vc3RhemFsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxNzknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNdWxjaMOpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTgwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTmFjaW1pZW50bycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTgxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTmFuY2FndWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ05hdGFsZXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ05hdmlkYWQnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ05lZ3JldGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ05pbmh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTg2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTm9nYWxlcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTg3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTnVldmEgSW1wZXJpYWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE4OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ8ORaXF1w6luJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxODknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICfDkXXDsW9hJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxOTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdPSGlnZ2lucycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTkxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnT2xpdmFyJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxOTInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdPbGxhZ8O8ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTkzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnT2xtdcOpJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxOTQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdPc29ybm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzE5NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ092YWxsZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTk2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFkcmUgSHVydGFkbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTk3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFkcmUgTGFzIENhc2FzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcxOTgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYWlndWFubycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MTk5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFpbGxhY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIwMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BhaW5lJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYWxlbmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIwMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BhbG1pbGxhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYW5ndWlwdWxsaScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjA0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFucXVlaHVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYXB1ZG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIwNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BhcmVkb25lcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjA3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFycmFsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZWRybyBBZ3VpcnJlIENlcmRhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMDknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZWxhcmNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZWxsdWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjExJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVtdWNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMTInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZW5jYWh1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVuY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIxNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Blw7FhZmxvcicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjE1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGXDsWFsb2zDqW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIxNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BlcmFsaWxsbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjE3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVycXVlbmNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMTgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZXRvcmNhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMTknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQZXVtbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjIwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGljYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjIxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGljaGlkZWd1YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjIyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGljaGlsZW11JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQaW50bycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjI0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGlycXVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMjUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQaXRydWZxdcOpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjI2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGxhY2lsbGEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BvcnRlenVlbG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIyOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BvcnZlbmlyJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQb3pvIEFsbW9udGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIzMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ByaW1hdmVyYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjMxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHJvdmlkZW5jaWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIzMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1Y2h1bmNhdsOtJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMzMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdWPDs24nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIzNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1ZGFodWVsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMzUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdWVudGUgQWx0bycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjM2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHVlcnRvIE1vbnR0JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyMzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdWVydG8gT2N0YXknLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzIzOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1ZXJ0byBWYXJhcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjM5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHVtYW5xdWUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI0MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1bml0YXF1aScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjQxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHVudGEgQXJlbmFzJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdXF1ZWxkw7NuJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdXLDqW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI0NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1cnJhbnF1ZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjQ1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHV0YWVuZG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI0NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1dHJlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdXllaHVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNDgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdRdWVpbMOpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjQ5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVlbGzDs24nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1ZW1jaGknLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1aWxhY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1aWxpY3VyYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjUzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbGxlY28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1aWxsw7NuJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdRdWlsbG90YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjU2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbHB1w6knLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI1NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1aW5jaGFvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNTgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdRdWludGEgZGUgVGlsY29jbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjU5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbnRhIE5vcm1hbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjYwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbnRlcm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI2MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1F1aXJpaHVlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNjInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSYW5jYWd1YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjYzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUsOhbnF1aWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI2NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JhdWNvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNjUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSZWNvbGV0YScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjY2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmVuYWljbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjY3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmVuY2EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI2OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JlbmdvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSZXF1w61ub2EnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JldGlybycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjcxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmluY29uYWRhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNzInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSw61vIEJ1ZW5vJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNzMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSw61vIENsYXJvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyNzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdSw61vIEh1cnRhZG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1LDrW8gSWLDocOxZXonLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1LDrW8gTmVncm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1LDrW8gVmVyZGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JvbWVyYWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI3OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhYXZlZHJhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyODAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYWdyYWRhIEZhbWlsaWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI4MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbGFtYW5jYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjgyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEFudG9uaW8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI4MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBCZXJuYXJkbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3Mjg0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIENhcmxvcycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3Mjg1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIENsZW1lbnRlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyODYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gRXN0ZWJhbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3Mjg3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEZhYmnDoW4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI4OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBGZWxpcGUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI4OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBGZXJuYW5kbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjkwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEdyZWdvcmlvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyOTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gSWduYWNpbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjkyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEphdmllcicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MjkzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEpvYXF1w61uJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyOTQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gSm9zw6kgZGUgTWFpcG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI5NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBKdWFuIGRlIGxhIENvc3RhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyOTYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gTWlndWVsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcyOTcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gTmljb2zDoXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzI5OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBQYWJsbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3Mjk5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFBlZHJvJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMDAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gUGVkcm8gZGUgQXRhY2FtYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzAxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFBlZHJvIGRlIGxhIFBheicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzAyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFJhZmFlbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzAzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFJhbcOzbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzA0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFJvc2VuZG8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMwNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBWaWNlbnRlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMDYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW50YSBCw6FyYmFyYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzA3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGEgQ3J1eicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzA4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGEgSnVhbmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMwOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbnRhIE1hcsOtYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzEwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGlhZ28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMxMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbnRvIERvbWluZ28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMxMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NpZXJyYSBHb3JkYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFsYWdhbnRlJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMTQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUYWxjYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzE1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFsY2FodWFubycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzE2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFsdGFsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMTcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUZW11Y28nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMxOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Rlbm8nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMxOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Rlb2Rvcm8gU2NobWlkdCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzIwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGllcnJhIEFtYXJpbGxhJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMjEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUaWx0aWwnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMyMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RpbWF1a2VsJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUaXLDumEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMyNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RvY29waWxsYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzI1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVG9sdMOpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzI2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVG9tw6knLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RvcnJlcyBkZWwgUGFpbmUnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMyOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RvcnRlbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzI5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVHJhaWd1w6luJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMzAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUcmVndWFjbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzMxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVHVjYXBlbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzMyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmFsZGl2aWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMzMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZhbGxlbmFyJywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczMzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdWYWxwYXJhw61zbycsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzM1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmljaHVxdcOpbicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzM2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmljdG9yaWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMzNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpY3XDsWEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMzOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGPDum4nLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzMzOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGxhIEFsZWdyZScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzQwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgQWxlbWFuYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzQxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGFycmljYScsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzQyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmnDsWEgZGVsIE1hcicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzQzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVml0YWN1cmEnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM0NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1llcmJhcyBCdWVuYXMnLCBjb3VudHJ5OiAnMTcwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNzM0NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1l1bWJlbCcsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzE3MzQ2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnWXVuZ2F5JywgY291bnRyeTogJzE3MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTczNDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdaYXBhbGxhcicsIGNvdW50cnk6ICcxNzAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQwMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0F6dWwnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQwMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0JhaMOtYSBCbGFuY2EnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQwMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0JhbmRhIGRlbCBSw61vIFNhbMOtJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MDQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCYW5maWVsZCcsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDA1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQmFycmFucXVlcmFzJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MDYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCw6ljY2FyJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCZWzDqW4gZGUgRXNjb2JhcicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDA4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQmVsbGEgVmlzdGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQwOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0JlcmF6YXRlZ3VpJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCZXJpc3NvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCZXJuYWwnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Jvc3F1ZXMnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0JvdWxvZ25lIFN1ciBNZXInLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxNCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0J1ZW5vcyBBaXJlcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQnVyemFjbycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FtcGFuYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FzZXJvcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FzdGVsYXInLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaW1iYXMnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQyMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaXZpbGNveScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDIxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2lwb2xsZXR0aScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDIyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2l1ZGFkIGRlIENvcnJpZW50ZXMnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQyMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NpdWRhZCBkZSBGb3Jtb3NhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MjQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWQgZGUgTGEgUmlvamEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQyNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NpdWRhZCBkZSBNZW5kb3phJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MjYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWQgZGUgTmV1cXXDqW4nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NpdWRhZCBkZSBSw61vIEN1YXJ0bycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDI4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2l1ZGFkIGRlIFNhbHRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWQgZGUgU2FuIEp1YW4nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQzMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NpdWRhZCBkZSBTYW4gTHVpcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDMxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2l1ZGFkIGRlIFNhbnRhIEZlJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWQgZGUgU2FudGlhZ28gZGVsIEVzdGVybycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDMzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2l1ZGFkIEV2aXRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWQgSmFyZMOtbiBFbCBMaWJlcnRhZG9yJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaXVkYWRlbGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQzNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Nsb3JpbmRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb21vZG9ybyBSaXZhZGF2aWEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQzOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NvbmNlcGNpw7NuJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDb25jZXBjacOzbiBkZWwgVXJ1Z3VheScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDQwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ29uY29yZGlhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDw7NyZG9iYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDQyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRG9uIFRvcmN1YXRvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFbCBKYWfDvGVsJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFbCBQYWxvbWFyJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFbGRvcmFkbycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDQ2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRXNwZXJhbnphJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdFemVpemEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ0OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0V6cGVsZXRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdGbG9yZW5jaW8gVmFyZWxhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NTAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdGbG9yaWRhIChubyBlcyBjaXVkYWQgc2lubyBiYXJyaW8pJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHZW5lcmFsIFBpY28nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ1MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dlbmVyYWwgUm9jYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDUzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnR2VuZXJhbCBSb2Ryw61ndWV6JywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NTQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHbGV3JywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHb2Jlcm5hZG9yIEp1bGlvIEEgQ29zdGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ1NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dvZG95IENydXonLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ1NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dvbnrDoWxleiBDYXTDoW4nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ1OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dveWEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ1OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0dyYW5kIEJvdXJnJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHcmVnb3JpbyBkZSBMYWZlcnJlcmUnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ2MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0d1YWxlZ3VheWNow7onLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ2MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0d1YXltYWxsw6luJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdJc2lkcm8gQ2FzYW5vdmEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ2NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0l0dXphaW5nw7MnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ2NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0pvc8OpIEMuIFBheicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDY2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSnVuw61uJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NjcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBCYW5kYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDY4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGEgUGxhdGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ2OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhIFRhYmxhZGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ3MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0xhbsO6cycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDcxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGFzIEhlcmFzJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NzInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMaWJlcnRhZCcsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDczJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9tYXMgZGUgWmFtb3JhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMb21hcyBkZWwgTWlyYWRvcicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDc1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9uZ2NoYW1wcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDc2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTG9zIFBvbHZvcmluZXMnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ3NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0x1asOhbicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDc4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTHVqw6FuIGRlIEN1eW8nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ3OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01haXDDuicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDgwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFyIGRlbCBQbGF0YScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDgxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFyaWFubyBBY29zdGEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ4MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hcnTDrW5leicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDgzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWVyY2VkZXMnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ4NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01lcmxvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0ODUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb250ZSBDaGluZ29sbycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDg2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9udGUgR3JhbmRlJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0ODcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNb3Jlbm8nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ4OCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01vcsOzbicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDg5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTmVjb2NoZWEnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQ5MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ09iZXLDoScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDkxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnT2xhdmFycsOtYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDkyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnT2xpdm9zIChubyBlcyBjaXVkYWQgc2lubyBiYXJyaW8pJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0OTMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYWxwYWzDoScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDk0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFyYW7DoScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDk1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVyZ2FtaW5vJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0OTYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQaWxhcicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDk3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUG9zYWRhcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDk4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHJlc2lkZW5jaWEgUm9xdWUgU8OhZW56IFBlw7FhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0OTknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQcmVzaWRlbnRlIFBlcsOzbicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1ZXJ0byBNYWRyeW4nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMDEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQdW50YSBBbHRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTAyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbG1lcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JhZmFlbCBDYWx6YWRhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTA0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmFmYWVsIENhc3RpbGxvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTA1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmFmYWVsYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JhbW9zIE1lasOtYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Jhd3NvbicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1JlY29ucXVpc3RhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTA5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmVtZWRpb3MgZGUgRXNjYWxhZGEgKFBhcnRpZG8gZGUgTGFuw7pzKScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDExMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Jlc2lzdGVuY2lhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTExJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUsOtbyBHYWxsZWdvcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDExMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1LDrW8gR3JhbmRlJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUml2YWRhdmlhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTE0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUm9zYXJpbycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDExNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBDYXJsb3MgZGUgQmFyaWxvY2hlJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTE2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEZlcm5hbmRvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTE3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEZlcm5hbmRvIGRlbCBWYWxsZSBkZSBDYXRhbWFyY2EnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMTgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gRnJhbmNpc2NvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTE5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEZyYW5jaXNjbyBTb2xhbm8nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gSXNpZHJvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTIxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIEp1c3RvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTIyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIE1hcnTDrW4nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMjMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gTWlndWVsJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTI0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIE1pZ3VlbCBkZSBUdWN1bcOhbicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEyNScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBOaWNvbMOhcyBkZSBsb3MgQXJyb3lvcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEyNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBQZWRybyBkZSBKdWp1eScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEyNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhbiBSYWZhZWwnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMjgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYW4gUmFtw7NuIGRlIGxhIE51ZXZhIE9yw6FuJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTI5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FuIFNhbHZhZG9yIGRlIEp1anV5JywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTMwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2FudGEgUm9zYScsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEzMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1NhcmFuZMOtJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTMyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFuZGlsJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTMzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFydGFnYWwnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUZW1wZXJsZXknLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMzUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUcmVsZXcnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMzYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUcmVzIEFycm95b3MnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUcnVqdWknLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxMzgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdVc2h1YWlhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTM5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmVuYWRvIFR1ZXJ0bycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE0MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpY2VudGUgTMOzcGV6JywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmllZG1hJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgQ2FybG9zIFBheicsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE0MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGxhIENlbnRlbmFyaW8nLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxNDQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdWaWxsYSBEb2xvcmVzJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQ1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgRG9tw61uaWNvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQ2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgR29iZXJuYWRvciBHw6FsdmV6JywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQ3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgTHV6dXJpYWdhJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQ4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgTWFkZXJvJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTQ5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgTWFyw61hJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTUwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlsbGEgTWFyaWFubyBNb3Jlbm8tRWwgQ29sbWVuYXInLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxNTEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdWaWxsYSBNZXJjZWRlcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE1MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpbGxhIFRlc2VpJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTUzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVmlycmV5IGRlbCBQaW5vJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTU0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnV2lsZGUnLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxNTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdXaWxsaWFtIE1vcnJpcycsIGNvdW50cnk6ICc0MDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDE1NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1llcmJhIEJ1ZW5hL01hcmNvcyBQYXonLCBjb3VudHJ5OiAnNDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzQxNTcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdaw6FyYXRlJywgY291bnRyeTogJzQwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDAxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQWJhbmNheScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBbmRhaHVheWxhcycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBcmVxdWlwYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdBeWFjdWNobycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCYWd1YScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdCYWd1YSBHcmFuZGUnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDA3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQmFycmFuY2EnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDA4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FqYW1hcmNhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAwOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0Nhw7FldGUnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDEwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FzYSBHcmFuZGUnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDExJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2FzbWEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDEyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2Vycm8gZGUgUGFzY28nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDEzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2hhY2hhcG95YXMnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDE0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ2hhbmNheScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGFuY2hhbWF5bycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMTYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaGVww6luJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAxNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaWNsYXlvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAxOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaW1ib3RlJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAxOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NoaW5jaGEgQWx0YScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdDaHVsdWNhbmFzJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAyMScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0N1c2NvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAyMicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0VzcGluYXInLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDIzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnRmVycmXDsWFmZScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMjQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdHdWFkYWx1cGUnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDI1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSHVhY2hvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAyNicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0h1YW1hY2h1Y28nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDI3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSHVhbmNhdmVsaWNhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAyOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0h1YW5jYXlvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAyOScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0h1YW50YScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMzAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdcOhbnVjbycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMzEnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdIdWFyYWwnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDMyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSHVhcmF6JywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAzMycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0h1YXVyYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwMzQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdJY2EnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDM1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSWxhdmUnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDM2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSWxvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAzNycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ2ltcGVyaWFsJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAzOCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0lxdWl0b3MnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDM5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSmHDqW4nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDQwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSnVhbmp1w60nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDQxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnSnVsaWFjYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNDInLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBBcmVuYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNDMnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMYSBVbmnDs24nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDQ0JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTGFtYmF5ZXF1ZScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNDUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdMaW1hJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA0NicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hamVzJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA0NycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ01hbGEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDQ4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTWFyY2F2ZWxpY2EnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDQ5JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9sbGVuZG8nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDUwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9uc2Vmw7onLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDUxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW9xdWVndWEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDUyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnTW95b2JhbWJhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA1MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ05hemNhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA1NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ051ZXZhIENhamFtYXJjYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNTUnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQYWNhc21heW8nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDU2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGFpdGEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDU3JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUGVyZW7DqScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNTgnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdQaWNoYW5hcXVpJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA1OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Bpc2NvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA2MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1BpdXJhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA2MScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1Y2FsbHBhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA2MicsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1B1ZXJ0byBNYWxkb25hZG8nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDYzJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUHVubycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNjQnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdRdWVyZWNvdGlsbG8nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDY1JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUXVpbGxhYmFtYmEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDY2JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnUmVxdWVuYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNjcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTYXRpcG8nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDY4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnU2VjaHVyYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNjknLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdTaWN1YW5pJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA3MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1N1bGxhbmEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDcxJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFjbmEnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDcyJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVGFsYXJhJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA3MycsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RhcmFwb3RvJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA3NCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Rhcm1hJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA3NScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1RpbmdvIE1hcsOtYScsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNzYnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUcnVqaWxsbycsIGNvdW50cnk6ICc2MDAwJ30sXG4gICAgICAgICAgICB7IF9pZDogJzYwNzcnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdUdW3DoW4nLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MDc4JywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnVHVtYmVzJywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA3OScsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1ZpcsO6JywgY291bnRyeTogJzYwMDAnfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjA4MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1l1cmltYWd1YXMnLCBjb3VudHJ5OiAnNjAwMCd9LFxuICAgICAgICBdO1xuXG4gICAgICAgIGNpdGllcy5mb3JFYWNoKChjaXR5OiBDaXR5KSA9PiBDaXRpZXMuaW5zZXJ0KGNpdHkpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgQ29va2luZ1RpbWUgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL2Nvb2tpbmctdGltZS5tb2RlbCc7XG5pbXBvcnQgeyBDb29raW5nVGltZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY29va2luZy10aW1lLmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZENvb2tpbmdUaW1lcygpIHtcbiAgICBpZihDb29raW5nVGltZXMuZmluZCgpLmN1cnNvci5jb3VudCgpID09PSAwICl7XG4gICAgICAgIGNvbnN0IGNvb2tpbmdfdGltZXM6IENvb2tpbmdUaW1lW10gPSBbXG4gICAgICAgICAgICB7IF9pZDogXCIxMFwiLCBjb29raW5nX3RpbWU6IFwiNSBtaW4gYXByb3hcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjIwXCIsIGNvb2tpbmdfdGltZTogXCIxNSBtaW4gYXByb3hcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzBcIiwgY29va2luZ190aW1lOiBcIjMwIG1pbiBhcHJveFwiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiNDBcIiwgY29va2luZ190aW1lOiBcIjQ1IG1pbiBhcHJveFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCI1MFwiLCBjb29raW5nX3RpbWU6IFwiMSBoIGFwcm94XCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCI2MFwiLCBjb29raW5nX3RpbWU6IFwiMSBoIDE1IG1pbiBhcHJveFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCI3MFwiLCBjb29raW5nX3RpbWU6IFwiMSBoIDMwIG1pbiBhcHJveFwiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiODBcIiwgY29va2luZ190aW1lOiBcIjEgaCA0NSBtaW4gYXByb3hcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiOTBcIiwgY29va2luZ190aW1lOiBcIjIgaCBhcHJveFwiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTAwXCIsIGNvb2tpbmdfdGltZTogXCIrIDIgaCBhcHJveFwiIH1cbiAgICAgICAgXTtcbiAgICAgICAgY29va2luZ190aW1lcy5mb3JFYWNoKChjb29raW5nOkNvb2tpbmdUaW1lKSA9PiBDb29raW5nVGltZXMuaW5zZXJ0KGNvb2tpbmcpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2NvdW50cnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBDb3VudHJ5IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZ2VuZXJhbC9jb3VudHJ5Lm1vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRDb3VudHJpZXMoKSB7XG4gICAgaWYgKENvdW50cmllcy5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApIHtcbiAgICAgICAgY29uc3QgY291bnRyaWVzOiBDb3VudHJ5W10gPSBbXG4gICAgICAgICAgICB7IF9pZDogJzEwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQUxCQU5JQScsIGFsZmFDb2RlMjogJ0FMJywgYWxmYUNvZGUzOiAnQUxCJywgbnVtZXJpY0NvZGU6ICcwMDgnLCBpbmRpY2F0aXZlOiAnKCsgMzU1KScsIGN1cnJlbmN5SWQ6ICcyNzAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5HRVJNQU5ZJywgYWxmYUNvZGUyOiAnREUnLCBhbGZhQ29kZTM6ICdERVUnLCBudW1lcmljQ29kZTogJzI3NicsIGluZGljYXRpdmU6ICcoKyA0OSknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzMwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQU5ET1JSQScsIGFsZmFDb2RlMjogJ0FEJywgYWxmYUNvZGUzOiAnQU5EJywgbnVtZXJpY0NvZGU6ICcwMjAnLCBpbmRpY2F0aXZlOiAnKCsgMzc2KScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5BUkdFTlRJTkEnLCBhbGZhQ29kZTI6ICdBUicsIGFsZmFDb2RlMzogJ0FSRycsIG51bWVyaWNDb2RlOiAnMDMyJywgaW5kaWNhdGl2ZTogJygrIDU0KScsIGN1cnJlbmN5SWQ6ICczNzAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW1wiNFwiLCBcIjVcIl0sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDExNywgdGFibGVQcmljZTogMywgY3JvblZhbGlkYXRlQWN0aXZlOiAnMSAwIDYgKiAqJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnMCAwIDEgKiAqJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJzMwIDE3IDI4ICogKicsIGNyb25FbWFpbEV4cGlyZVNvb246ICczMCAxNyAzICogKicsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnMTAgMCA2ICogKicsIG1heF9udW1iZXJfdGFibGVzOiAxMDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzUwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQVJNRU5JQScsIGFsZmFDb2RlMjogJ0FNJywgYWxmYUNvZGUzOiAnQVJNJywgbnVtZXJpY0NvZGU6ICcwNTEnLCBpbmRpY2F0aXZlOiAnKCsgMzc0KScsIGN1cnJlbmN5SWQ6ICcxOTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5BVVNUUklBJywgYWxmYUNvZGUyOiAnQVQnLCBhbGZhQ29kZTM6ICdBVVQnLCBudW1lcmljQ29kZTogJzA0MCcsIGluZGljYXRpdmU6ICcoKyA0MyknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzcwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQVpFUkJBSUpBTicsIGFsZmFDb2RlMjogJ0FaJywgYWxmYUNvZGUzOiAnQVpFJywgbnVtZXJpY0NvZGU6ICcwMzEnLCBpbmRpY2F0aXZlOiAnKCsgOTk0KScsIGN1cnJlbmN5SWQ6ICczNTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnODAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5CRUxHSVVNJywgYWxmYUNvZGUyOiAnQkUnLCBhbGZhQ29kZTM6ICdCRUwnLCBudW1lcmljQ29kZTogJzA1NicsIGluZGljYXRpdmU6ICcoKyAzMiknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzkwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQkVMSVpFJywgYWxmYUNvZGUyOiAnQlonLCBhbGZhQ29kZTM6ICdCTFonLCBudW1lcmljQ29kZTogJzA4NCcsIGluZGljYXRpdmU6ICcoKyA1MDEpJywgY3VycmVuY3lJZDogJzEzMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxMDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5CRVJNVURBUycsIGFsZmFDb2RlMjogJ0JNJywgYWxmYUNvZGUzOiAnQk1VJywgbnVtZXJpY0NvZGU6ICcwNjAnLCBpbmRpY2F0aXZlOiAnKCsgMTAwNCknLCBjdXJyZW5jeUlkOiAnMTQwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzExMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkJFTEFSVVMnLCBhbGZhQ29kZTI6ICdCWScsIGFsZmFDb2RlMzogJ0JMUicsIG51bWVyaWNDb2RlOiAnMTEyJywgaW5kaWNhdGl2ZTogJygrIDM3NSknLCBjdXJyZW5jeUlkOiAnNDQwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzEyMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkJPTElWSUEnLCBhbGZhQ29kZTI6ICdCTycsIGFsZmFDb2RlMzogJ0JPTCcsIG51bWVyaWNDb2RlOiAnMDY4JywgaW5kaWNhdGl2ZTogJygrIDU5MSknLCBjdXJyZW5jeUlkOiAnMzAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTMwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQk9TTklBX0hFUlpFR09WSU5BJywgYWxmYUNvZGUyOiAnQkEnLCBhbGZhQ29kZTM6ICdCSUgnLCBudW1lcmljQ29kZTogJzA3MCcsIGluZGljYXRpdmU6ICcoKyAzODcpJywgY3VycmVuY3lJZDogJzM2MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5CUkFaSUwnLCBhbGZhQ29kZTI6ICdCUicsIGFsZmFDb2RlMzogJ0JSQScsIG51bWVyaWNDb2RlOiAnMDc2JywgaW5kaWNhdGl2ZTogJygrIDU1KScsIGN1cnJlbmN5SWQ6ICc0MzAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTUwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQlVMR0FSSUEnLCBhbGZhQ29kZTI6ICdCRycsIGFsZmFDb2RlMzogJ0JHUicsIG51bWVyaWNDb2RlOiAnMTAwJywgaW5kaWNhdGl2ZTogJygrIDM1OSknLCBjdXJyZW5jeUlkOiAnMzEwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE2MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkNBTkFEQScsIGFsZmFDb2RlMjogJ0NBJywgYWxmYUNvZGUzOiAnQ0FOJywgbnVtZXJpY0NvZGU6ICcxMjQnLCBpbmRpY2F0aXZlOiAnKCsgMDAxKScsIGN1cnJlbmN5SWQ6ICcxNTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTcwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQ0hJTEUnLCBhbGZhQ29kZTI6ICdDTCcsIGFsZmFDb2RlMzogJ0NITCcsIG51bWVyaWNDb2RlOiAnMTUyJywgaW5kaWNhdGl2ZTogJygrIDU2KScsIGN1cnJlbmN5SWQ6ICczODAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW1wiMlwiLCBcIjNcIl0sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDQzMDAsIHRhYmxlUHJpY2U6IDEwNiwgY3JvblZhbGlkYXRlQWN0aXZlOiAnMSAwIDYgKiAqJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnMCAwIDEgKiAqJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJzMwIDE3IDI4ICogKicsIGNyb25FbWFpbEV4cGlyZVNvb246ICczMCAxNyAzICogKicsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnMTAgMCA2ICogKicsIG1heF9udW1iZXJfdGFibGVzOiAxMDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE4MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkNZUFJVUycsIGFsZmFDb2RlMjogJ0NZJywgYWxmYUNvZGUzOiAnQ1lQJywgbnVtZXJpY0NvZGU6ICcxOTYnLCBpbmRpY2F0aXZlOiAnKCszNTcpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTAwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQ09VTlRSSUVTLkNPTE9NQklBJywgYWxmYUNvZGUyOiAnQ08nLCBhbGZhQ29kZTM6ICdDT0wnLCBudW1lcmljQ29kZTogJzE3MCcsIGluZGljYXRpdmU6ICcoKyA1NyknLCBjdXJyZW5jeUlkOiAnMzkwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtcIjBcIiwgXCIxXCJdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAyMjAwMCwgdGFibGVQcmljZTogMjAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcxIDAgNiAqIConLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcwIDAgMSAqIConLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnMzAgMTcgMjggKiAqJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJzMwIDE3IDMgKiAqJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcxMCAwIDYgKiAqJywgbWF4X251bWJlcl90YWJsZXM6IDEwMCwgY3JvblBvaW50c0V4cGlyZTogJzE1IDAgKiAqIConIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIwMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkNPU1RBX1JJQ0EnLCBhbGZhQ29kZTI6ICdDUicsIGFsZmFDb2RlMzogJ0NSSScsIG51bWVyaWNDb2RlOiAnMTg4JywgaW5kaWNhdGl2ZTogJygrIDUwNiknLCBjdXJyZW5jeUlkOiAnNDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjEwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuQ1JPQVRJQScsIGFsZmFDb2RlMjogJ0hSJywgYWxmYUNvZGUzOiAnSFJWJywgbnVtZXJpY0NvZGU6ICcxOTEnLCBpbmRpY2F0aXZlOiAnKCsgMzg1KScsIGN1cnJlbmN5SWQ6ICcyNTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjIwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuREVOTUFSSycsIGFsZmFDb2RlMjogJ0RLJywgYWxmYUNvZGUzOiAnRE5LJywgbnVtZXJpY0NvZGU6ICcyMDgnLCBpbmRpY2F0aXZlOiAnKCsgNDUpJywgY3VycmVuY3lJZDogJzcwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIzMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkVDVUFET1InLCBhbGZhQ29kZTI6ICdFQycsIGFsZmFDb2RlMzogJ0VDVScsIG51bWVyaWNDb2RlOiAnMjE4JywgaW5kaWNhdGl2ZTogJygrIDU5MyknLCBjdXJyZW5jeUlkOiAnMTYwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzI0MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkVMX1NBTFZBRE9SJywgYWxmYUNvZGUyOiAnU1YnLCBhbGZhQ29kZTM6ICdTTFYnLCBudW1lcmljQ29kZTogJzIyMicsIGluZGljYXRpdmU6ICcoKyA1MDMpJywgY3VycmVuY3lJZDogJzE2MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyNTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5TTE9WQUtJQScsIGFsZmFDb2RlMjogJ1NLJywgYWxmYUNvZGUzOiAnU1ZLJywgbnVtZXJpY0NvZGU6ICc3MDMnLCBpbmRpY2F0aXZlOiAnKCsgNDIxKScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjYwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuU0xPVkVOSUEnLCBhbGZhQ29kZTI6ICdTSScsIGFsZmFDb2RlMzogJ1NWTicsIG51bWVyaWNDb2RlOiAnNzA1JywgaW5kaWNhdGl2ZTogJygrIDM4NiknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzI3MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlNQQUlOJywgYWxmYUNvZGUyOiAnRVMnLCBhbGZhQ29kZTM6ICdFU1AnLCBudW1lcmljQ29kZTogJzcyNCcsIGluZGljYXRpdmU6ICcoKyAzNCknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzI4MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlVOSVRFRF9TVEFURVMnLCBhbGZhQ29kZTI6ICdVUycsIGFsZmFDb2RlMzogJ1VTQScsIG51bWVyaWNDb2RlOiAnODQwJywgaW5kaWNhdGl2ZTogJygrIDEpJywgY3VycmVuY3lJZDogJzE2MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyOTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5FU1RPTklBJywgYWxmYUNvZGUyOiAnRUUnLCBhbGZhQ29kZTM6ICdFU1QnLCBudW1lcmljQ29kZTogJzIzMycsIGluZGljYXRpdmU6ICcoKyAzNzIpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5GSU5MQU5EJywgYWxmYUNvZGUyOiAnRkknLCBhbGZhQ29kZTM6ICdGSU4nLCBudW1lcmljQ29kZTogJzI0NicsIGluZGljYXRpdmU6ICcoKyAzNTgpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5GUkFOQ0UnLCBhbGZhQ29kZTI6ICdGUicsIGFsZmFDb2RlMzogJ0ZSQScsIG51bWVyaWNDb2RlOiAnMjUwJywgaW5kaWNhdGl2ZTogJygrIDMzKScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzIwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuR0VPUkdJQScsIGFsZmFDb2RlMjogJ0dFJywgYWxmYUNvZGUzOiAnR0VPJywgbnVtZXJpY0NvZGU6ICcyNjgnLCBpbmRpY2F0aXZlOiAnKCsgOTk1KScsIGN1cnJlbmN5SWQ6ICcyNjAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzMwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuR1JFRUNFJywgYWxmYUNvZGUyOiAnR1InLCBhbGZhQ29kZTM6ICdHUkMnLCBudW1lcmljQ29kZTogJzMwMCcsIGluZGljYXRpdmU6ICcoKyAzMCknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM0MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkdSRUVOTEFORCcsIGFsZmFDb2RlMjogJ0dMJywgYWxmYUNvZGUzOiAnR1JMJywgbnVtZXJpY0NvZGU6ICczMDQnLCBpbmRpY2F0aXZlOiAnKCsgMjk5KScsIGN1cnJlbmN5SWQ6ICc3MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczNTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5HVUFURU1BTEEnLCBhbGZhQ29kZTI6ICdHVCcsIGFsZmFDb2RlMzogJ0dUTScsIG51bWVyaWNDb2RlOiAnMzIwJywgaW5kaWNhdGl2ZTogJygrIDUwMiknLCBjdXJyZW5jeUlkOiAnNDIwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM2MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkZSRU5DSF9HVUlBTkEnLCBhbGZhQ29kZTI6ICdHRicsIGFsZmFDb2RlMzogJ0dVRicsIG51bWVyaWNDb2RlOiAnMjU0JywgaW5kaWNhdGl2ZTogJygrIDU5NCknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM3MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkdVWUFOQScsIGFsZmFDb2RlMjogJ0dZJywgYWxmYUNvZGUzOiAnR1VZJywgbnVtZXJpY0NvZGU6ICczMjgnLCBpbmRpY2F0aXZlOiAnKCsgNTkyKScsIGN1cnJlbmN5SWQ6ICcxNzAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzgwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuSE9ORFVSQVMnLCBhbGZhQ29kZTI6ICdITicsIGFsZmFDb2RlMzogJ0hORCcsIG51bWVyaWNDb2RlOiAnMzQwJywgaW5kaWNhdGl2ZTogJygrIDUwNCknLCBjdXJyZW5jeUlkOiAnMjgwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM5MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkhVTkdBUlknLCBhbGZhQ29kZTI6ICdIVScsIGFsZmFDb2RlMzogJ0hVTicsIG51bWVyaWNDb2RlOiAnMzQ4JywgaW5kaWNhdGl2ZTogJygrIDM2KScsIGN1cnJlbmN5SWQ6ICcyMTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDAwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuSVJFTEFORCcsIGFsZmFDb2RlMjogJ0lFJywgYWxmYUNvZGUzOiAnSVJMJywgbnVtZXJpY0NvZGU6ICczNzInLCBpbmRpY2F0aXZlOiAnKCsgMzUzKScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDEwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuSUNFTEFORCcsIGFsZmFDb2RlMjogJ0lTJywgYWxmYUNvZGUzOiAnSVNMJywgbnVtZXJpY0NvZGU6ICczNTInLCBpbmRpY2F0aXZlOiAnKCsgMzU0KScsIGN1cnJlbmN5SWQ6ICc4MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5GQUxLTEFORF9JU0xBTkRTJywgYWxmYUNvZGUyOiAnRksnLCBhbGZhQ29kZTM6ICdGTEsnLCBudW1lcmljQ29kZTogJzIzOCcsIGluZGljYXRpdmU6ICcoKyA1MDApJywgY3VycmVuY3lJZDogJzMzMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MzAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5JVEFMWScsIGFsZmFDb2RlMjogJ0lUJywgYWxmYUNvZGUzOiAnSVRBJywgbnVtZXJpY0NvZGU6ICczODAnLCBpbmRpY2F0aXZlOiAnKCsgMzkpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5LQVpBS0hTVEFOJywgYWxmYUNvZGUyOiAnS1onLCBhbGZhQ29kZTM6ICdLQVonLCBudW1lcmljQ29kZTogJzM5OCcsIGluZGljYXRpdmU6ICcoKyA3MzEpJywgY3VycmVuY3lJZDogJzQ3MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5MQVRWSUEnLCBhbGZhQ29kZTI6ICdMVicsIGFsZmFDb2RlMzogJ0xWQScsIG51bWVyaWNDb2RlOiAnNDI4JywgaW5kaWNhdGl2ZTogJygrIDM3MSknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQ2MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkxJRUNIVEVOU1RFSU4nLCBhbGZhQ29kZTI6ICdMSScsIGFsZmFDb2RlMzogJ0xJRScsIG51bWVyaWNDb2RlOiAnNDM4JywgaW5kaWNhdGl2ZTogJygrIDQxNyknLCBjdXJyZW5jeUlkOiAnMjIwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQ3MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkxJVEhVQU5JQScsIGFsZmFDb2RlMjogJ0xUJywgYWxmYUNvZGUzOiAnTFRVJywgbnVtZXJpY0NvZGU6ICc0NDAnLCBpbmRpY2F0aXZlOiAnKCsgMzcwKScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDgwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuTFVYRU1CT1VSRycsIGFsZmFDb2RlMjogJ0xVJywgYWxmYUNvZGUzOiAnTFVYJywgbnVtZXJpY0NvZGU6ICc0NDInLCBpbmRpY2F0aXZlOiAnKCsgMzUyKScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDkwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuTUFDRURPTklBJywgYWxmYUNvZGUyOiAnTUsnLCBhbGZhQ29kZTM6ICdNS0QnLCBudW1lcmljQ29kZTogJzgwNycsIGluZGljYXRpdmU6ICcoKyAzODkpJywgY3VycmVuY3lJZDogJzExMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1MDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5NQUxUQScsIGFsZmFDb2RlMjogJ01UJywgYWxmYUNvZGUzOiAnTUxUJywgbnVtZXJpY0NvZGU6ICc0NzAnLCBpbmRpY2F0aXZlOiAnKCsgMzU2KScsIGN1cnJlbmN5SWQ6ICcyMDAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNTEwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuTUVYSUNPJywgYWxmYUNvZGUyOiAnTVgnLCBhbGZhQ29kZTM6ICdNRVgnLCBudW1lcmljQ29kZTogJzQ4NCcsIGluZGljYXRpdmU6ICcoKyA1MiknLCBjdXJyZW5jeUlkOiAnNDAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzUyMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLk1PTERBVklBJywgYWxmYUNvZGUyOiAnTUQnLCBhbGZhQ29kZTM6ICdNREEnLCBudW1lcmljQ29kZTogJzQ5OCcsIGluZGljYXRpdmU6ICcoKyAzNzMpJywgY3VycmVuY3lJZDogJzI5MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1MzAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5NT05BQ08nLCBhbGZhQ29kZTI6ICdNQycsIGFsZmFDb2RlMzogJ01DTycsIG51bWVyaWNDb2RlOiAnNDkyJywgaW5kaWNhdGl2ZTogJygrIDM3NyknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzU0MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLk1PTlRFTkVHUk8nLCBhbGZhQ29kZTI6ICdNRScsIGFsZmFDb2RlMzogJ01ORScsIG51bWVyaWNDb2RlOiAnNDk5JywgaW5kaWNhdGl2ZTogJygrIDM4MiknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzU1MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLk5JQ0FSQUdVQScsIGFsZmFDb2RlMjogJ05JJywgYWxmYUNvZGUzOiAnTklDJywgbnVtZXJpY0NvZGU6ICc1NTgnLCBpbmRpY2F0aXZlOiAnKCsgNTA1KScsIGN1cnJlbmN5SWQ6ICc1MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1NjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5OT1JXQVknLCBhbGZhQ29kZTI6ICdOTycsIGFsZmFDb2RlMzogJ05PUicsIG51bWVyaWNDb2RlOiAnNTc4JywgaW5kaWNhdGl2ZTogJygrIDQ3KScsIGN1cnJlbmN5SWQ6ICc5MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1NzAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5ORVRIRVJMQU5EUycsIGFsZmFDb2RlMjogJ05MJywgYWxmYUNvZGUzOiAnTkxEJywgbnVtZXJpY0NvZGU6ICc1MjgnLCBpbmRpY2F0aXZlOiAnKCsgMzEpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1ODAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5QQU5BTUEnLCBhbGZhQ29kZTI6ICdQQScsIGFsZmFDb2RlMzogJ1BBTicsIG51bWVyaWNDb2RlOiAnNTkxJywgaW5kaWNhdGl2ZTogJygrIDUwNyknLCBjdXJyZW5jeUlkOiAnMTAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNTkwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuUEFSQUdVQVknLCBhbGZhQ29kZTI6ICdQWScsIGFsZmFDb2RlMzogJ1BSWScsIG51bWVyaWNDb2RlOiAnNjAwJywgaW5kaWNhdGl2ZTogJygrIDU5NSknLCBjdXJyZW5jeUlkOiAnMjQwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzYwMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlBFUlUnLCBhbGZhQ29kZTI6ICdQRScsIGFsZmFDb2RlMzogJ1BFUicsIG51bWVyaWNDb2RlOiAnNjA0JywgaW5kaWNhdGl2ZTogJygrIDUxKScsIGN1cnJlbmN5SWQ6ICc0NjAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW1wiNlwiLCBcIjdcIl0sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDIyLCB0YWJsZVByaWNlOiAwLjYsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJzEgMCA2ICogKicsIGNyb25DaGFuZ2VGcmVlRGF5czogJzAgMCAxICogKicsIGNyb25FbWFpbENoYXJnZVNvb246ICczMCAxNyAyOCAqIConLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnMzAgMTcgMyAqIConLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJzEwIDAgNiAqIConLCBtYXhfbnVtYmVyX3RhYmxlczogMTAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2MTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5QT0xBTkQnLCBhbGZhQ29kZTI6ICdQTCcsIGFsZmFDb2RlMzogJ1BPTCcsIG51bWVyaWNDb2RlOiAnNjE2JywgaW5kaWNhdGl2ZTogJygrIDQ4KScsIGN1cnJlbmN5SWQ6ICc0ODAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjIwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuUE9SVFVHQUwnLCBhbGZhQ29kZTI6ICdQVCcsIGFsZmFDb2RlMzogJ1BSVCcsIG51bWVyaWNDb2RlOiAnNjIwJywgaW5kaWNhdGl2ZTogJygrIDM1MSknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzYzMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlVOSVRFRF9LSU5HRE9NJywgYWxmYUNvZGUyOiAnR0InLCBhbGZhQ29kZTM6ICdHQlInLCBudW1lcmljQ29kZTogJzgyNicsIGluZGljYXRpdmU6ICcoKyA0NCknLCBjdXJyZW5jeUlkOiAnMzIwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzY0MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLkNaRUNIX1JFUFVCTElDJywgYWxmYUNvZGUyOiAnQ1onLCBhbGZhQ29kZTM6ICdDWkUnLCBudW1lcmljQ29kZTogJzIwMycsIGluZGljYXRpdmU6ICcoKyA0MiknLCBjdXJyZW5jeUlkOiAnNjAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjUwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuUk9NQU5JQScsIGFsZmFDb2RlMjogJ1JPJywgYWxmYUNvZGUzOiAnUk9VJywgbnVtZXJpY0NvZGU6ICc2NDInLCBpbmRpY2F0aXZlOiAnKCsgNDApJywgY3VycmVuY3lJZDogJzMwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2NjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5SVVNTSUEnLCBhbGZhQ29kZTI6ICdSVScsIGFsZmFDb2RlMzogJ1JVUycsIG51bWVyaWNDb2RlOiAnNjQzJywgaW5kaWNhdGl2ZTogJygrIDcpJywgY3VycmVuY3lJZDogJzQ1MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2NzAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5TQU5fTUFSSU5PJywgYWxmYUNvZGUyOiAnU00nLCBhbGZhQ29kZTM6ICdTTVInLCBudW1lcmljQ29kZTogJzY3NCcsIGluZGljYXRpdmU6ICcoKyAzNzgpJywgY3VycmVuY3lJZDogJzIwMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc2ODAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5TQUlOVF9QSUVSUkVfTUlRVUVMT04nLCBhbGZhQ29kZTI6ICdQTScsIGFsZmFDb2RlMzogJ1NQTScsIG51bWVyaWNDb2RlOiAnNjY2JywgaW5kaWNhdGl2ZTogJygrIDUwOCknLCBjdXJyZW5jeUlkOiAnMjAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzY5MDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlNFUkJJQScsIGFsZmFDb2RlMjogJ1JTJywgYWxmYUNvZGUzOiAnU1JCJywgbnVtZXJpY0NvZGU6ICc2ODgnLCBpbmRpY2F0aXZlOiAnKCsgMzgxKScsIGN1cnJlbmN5SWQ6ICcxMjAnLCBpdGVtc1dpdGhEaWZmZXJlbnRUYXg6IGZhbHNlLCBxdWV1ZTogW10sIGVzdGFibGlzaG1lbnRfcHJpY2U6IDAsIHRhYmxlUHJpY2U6IDAsIGNyb25WYWxpZGF0ZUFjdGl2ZTogJycsIGNyb25DaGFuZ2VGcmVlRGF5czogJycsIGNyb25FbWFpbENoYXJnZVNvb246ICcnLCBjcm9uRW1haWxFeHBpcmVTb29uOiAnJywgY3JvbkVtYWlsUmVzdEV4cGlyZWQ6ICcnLCBtYXhfbnVtYmVyX3RhYmxlczogMCwgY3JvblBvaW50c0V4cGlyZTogJycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNzAwMCcsIGlzX2FjdGl2ZTogZmFsc2UsIG5hbWU6ICdDT1VOVFJJRVMuU1dFREVOJywgYWxmYUNvZGUyOiAnU0UnLCBhbGZhQ29kZTM6ICdTV0UnLCBudW1lcmljQ29kZTogJzc1MicsIGluZGljYXRpdmU6ICcoKyA0NiknLCBjdXJyZW5jeUlkOiAnMTAwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzcxMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlNXSVRaRVJMQU5EJywgYWxmYUNvZGUyOiAnQ0gnLCBhbGZhQ29kZTM6ICdDSEUnLCBudW1lcmljQ29kZTogJzc1NicsIGluZGljYXRpdmU6ICcoKyA0MSknLCBjdXJyZW5jeUlkOiAnMjIwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzcyMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlNVUklOQU0nLCBhbGZhQ29kZTI6ICdTUicsIGFsZmFDb2RlMzogJ1NVUicsIG51bWVyaWNDb2RlOiAnNzQwJywgaW5kaWNhdGl2ZTogJygrIDU5NyknLCBjdXJyZW5jeUlkOiAnMTgwJywgaXRlbXNXaXRoRGlmZmVyZW50VGF4OiBmYWxzZSwgcXVldWU6IFtdLCBlc3RhYmxpc2htZW50X3ByaWNlOiAwLCB0YWJsZVByaWNlOiAwLCBjcm9uVmFsaWRhdGVBY3RpdmU6ICcnLCBjcm9uQ2hhbmdlRnJlZURheXM6ICcnLCBjcm9uRW1haWxDaGFyZ2VTb29uOiAnJywgY3JvbkVtYWlsRXhwaXJlU29vbjogJycsIGNyb25FbWFpbFJlc3RFeHBpcmVkOiAnJywgbWF4X251bWJlcl90YWJsZXM6IDAsIGNyb25Qb2ludHNFeHBpcmU6ICcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzczMDAnLCBpc19hY3RpdmU6IGZhbHNlLCBuYW1lOiAnQ09VTlRSSUVTLlRVUktFWScsIGFsZmFDb2RlMjogJ1RSJywgYWxmYUNvZGUzOiAnVFVSJywgbnVtZXJpY0NvZGU6ICc3OTInLCBpbmRpY2F0aXZlOiAnKCsgOTApJywgY3VycmVuY3lJZDogJzM0MCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc3NDAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5VS1JBSU5FJywgYWxmYUNvZGUyOiAnVUEnLCBhbGZhQ29kZTM6ICdVS1InLCBudW1lcmljQ29kZTogJzgwNCcsIGluZGljYXRpdmU6ICcoKyAzODApJywgY3VycmVuY3lJZDogJzIzMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc3NTAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5VUlVHVUFZJywgYWxmYUNvZGUyOiAnVVknLCBhbGZhQ29kZTM6ICdVUlknLCBudW1lcmljQ29kZTogJzg1OCcsIGluZGljYXRpdmU6ICcoKyA1OTgpJywgY3VycmVuY3lJZDogJzQxMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc3NjAwJywgaXNfYWN0aXZlOiBmYWxzZSwgbmFtZTogJ0NPVU5UUklFUy5WRU5FWlVFTEEnLCBhbGZhQ29kZTI6ICdWRScsIGFsZmFDb2RlMzogJ1ZFTicsIG51bWVyaWNDb2RlOiAnODYyJywgaW5kaWNhdGl2ZTogJygrIDU4KScsIGN1cnJlbmN5SWQ6ICcyMCcsIGl0ZW1zV2l0aERpZmZlcmVudFRheDogZmFsc2UsIHF1ZXVlOiBbXSwgZXN0YWJsaXNobWVudF9wcmljZTogMCwgdGFibGVQcmljZTogMCwgY3JvblZhbGlkYXRlQWN0aXZlOiAnJywgY3JvbkNoYW5nZUZyZWVEYXlzOiAnJywgY3JvbkVtYWlsQ2hhcmdlU29vbjogJycsIGNyb25FbWFpbEV4cGlyZVNvb246ICcnLCBjcm9uRW1haWxSZXN0RXhwaXJlZDogJycsIG1heF9udW1iZXJfdGFibGVzOiAwLCBjcm9uUG9pbnRzRXhwaXJlOiAnJyB9XG4gICAgICAgIF07XG4gICAgICAgIGNvdW50cmllcy5mb3JFYWNoKChjb3VudHJ5OiBDb3VudHJ5KSA9PiBDb3VudHJpZXMuaW5zZXJ0KGNvdW50cnkpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgQ3VycmVuY3kgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL2N1cnJlbmN5Lm1vZGVsJztcbmltcG9ydCB7IEN1cnJlbmNpZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY3VycmVuY3kuY29sbGVjdGlvbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ3VycmVuY2llcygpe1xuICAgIGlmKCBDdXJyZW5jaWVzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PT0gMCApe1xuICAgICAgICBjb25zdCBjdXJyZW5jaWVzOiBDdXJyZW5jeVtdID0gW1xuICAgICAgICAgICAgeyBfaWQ6ICcxMCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5CQUxCT0EnLCBjb2RlOiAnUEFCJywgbnVtZXJpY0NvZGU6ICc1OTAnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkJPTElWQVInLCBjb2RlOiAnVkVGJywgbnVtZXJpY0NvZGU6ICc5MzcnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzMwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkJPTElWSUFOTycsIGNvZGU6ICdCT0InLCBudW1lcmljQ29kZTogJzA2OCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQ09TVEFfUklDQV9DT0xPTicsIGNvZGU6ICdDUkMnLCBudW1lcmljQ29kZTogJzE4OCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQ09SRE9CQScsIGNvZGU6ICdOSU8nLCBudW1lcmljQ29kZTogJzU1OCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQ1pFQ0hfUkVQVUJMSUNfS09SVU5BJywgY29kZTogJ0NaSycsIG51bWVyaWNDb2RlOiAnMjAzJywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc3MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5ERU5NQVJLX0tST05FJywgY29kZTogJ0RLSycsIG51bWVyaWNDb2RlOiAnMjA4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc4MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5JQ0VMQU5EX0tST05BJywgY29kZTogJ0lTSycsIG51bWVyaWNDb2RlOiAnMzUyJywgZGVjaW1hbDogMCB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc5MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5OT1JXQVlfS1JPTkUnLCBjb2RlOiAnTk9LJywgbnVtZXJpY0NvZGU6ICc1NzgnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzEwMCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5TV0VERU5fS1JPTkEnLCBjb2RlOiAnU0VLJywgbnVtZXJpY0NvZGU6ICc3NTInLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzExMCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5ERU5BUicsIGNvZGU6ICdNS0QnLCBudW1lcmljQ29kZTogJzgwNycsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTIwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLlNFUkJJQV9ESU5BUicsIGNvZGU6ICdSU0QnLCBudW1lcmljQ29kZTogJzk0MScsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTMwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkJFTElaRV9ET0xMQVInLCBjb2RlOiAnQlpEJywgbnVtZXJpY0NvZGU6ICcwODQnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE0MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5CRVJNVURJQU5fRE9MTEFSJywgY29kZTogJ0JNRCcsIG51bWVyaWNDb2RlOiAnMDYwJywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQ0FOQURJQU5fRE9MTEFSJywgY29kZTogJ0NBRCcsIG51bWVyaWNDb2RlOiAnMTI0JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNjAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuVU5JVEVEX1NUQVRFU19ET0xMQVInLCBjb2RlOiAnVVNEJywgbnVtZXJpY0NvZGU6ICc4NDAnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE3MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5HVVlBTkFfRE9MTEFSJywgY29kZTogJ0dZRCcsIG51bWVyaWNDb2RlOiAnMzI4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxODAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuU1VSSU5BTUVfRE9MTEFSJywgY29kZTogJ1NSRCcsIG51bWVyaWNDb2RlOiAnOTY4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxOTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQVJNRU5JQU1fRFJBTScsIGNvZGU6ICdBTUQnLCBudW1lcmljQ29kZTogJzA1MScsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjAwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkVVUk8nLCBjb2RlOiAnRVVSJywgbnVtZXJpY0NvZGU6ICc5NzgnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIxMCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5IVU5HQVJZX0ZPUklOVCcsIGNvZGU6ICdIVUYnLCBudW1lcmljQ29kZTogJzM0OCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjIwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkZSQU5DJywgY29kZTogJ0NIRicsIG51bWVyaWNDb2RlOiAnNzU2JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyMzAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuVUtSQUlORV9IUllWTklBJywgY29kZTogJ1VBSCcsIG51bWVyaWNDb2RlOiAnOTgwJywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyNDAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuR1VBUkFOSScsIGNvZGU6ICdQWUcnLCBudW1lcmljQ29kZTogJzYwMCcsIGRlY2ltYWw6IDAgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjUwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLktVTkEnLCBjb2RlOiAnSFJLJywgbnVtZXJpY0NvZGU6ICcxOTEnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzI2MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5MQVJJJywgY29kZTogJ0dFTCcsIG51bWVyaWNDb2RlOiAnOTgxJywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyNzAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuTEVLJywgY29kZTogJ0FMTCcsIG51bWVyaWNDb2RlOiAnMDA4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyODAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuTEVNUElSQScsIGNvZGU6ICdITkwnLCBudW1lcmljQ29kZTogJzM0MCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjkwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLk1PTERPVkFfTEVVJywgY29kZTogJ01ETCcsIG51bWVyaWNDb2RlOiAnNDk4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMDAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuUk9NQU5JQU5fTEVVJywgY29kZTogJ1JPTicsIG51bWVyaWNDb2RlOiAnOTQ2JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQlVMR0FSSUFfTEVWJywgY29kZTogJ0JHTicsIG51bWVyaWNDb2RlOiAnOTc1JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMjAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuUE9VTkRfU1RFUkxJTkcnLCBjb2RlOiAnR0JQJywgbnVtZXJpY0NvZGU6ICc4MjYnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzMzMCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5GQUxLTEFORF9JU0xBTkRTX1BPVU5EJywgY29kZTogJ0ZLUCcsIG51bWVyaWNDb2RlOiAnMjM4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczNDAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuVFVSS0lTSF9MSVJBJywgY29kZTogJ1RSWScsIG51bWVyaWNDb2RlOiAnOTQ5JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczNTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQVpFUkJBSUpBTklfTUFOQVQnLCBjb2RlOiAnQVpOJywgbnVtZXJpY0NvZGU6ICc5NDQnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM2MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5DT05WRVJUSUJMRV9NQVJLJywgY29kZTogJ0JBTScsIG51bWVyaWNDb2RlOiAnOTc3JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczNzAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQVJHRU5USU5BX1BFU08nLCBjb2RlOiAnQVJTJywgbnVtZXJpY0NvZGU6ICcwMzInLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzM4MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5DSElMRV9QRVNPJywgY29kZTogJ0NMUCcsIG51bWVyaWNDb2RlOiAnMTUyJywgZGVjaW1hbDogMCB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczOTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQ09MT01CSUFfUEVTTycsIGNvZGU6ICdDT1AnLCBudW1lcmljQ29kZTogJzE3MCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDAwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLk1FWElDT19QRVNPJywgY29kZTogJ01YTicsIG51bWVyaWNDb2RlOiAnNDg0JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MTAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuVVJVR1VBWV9QRVNPJywgY29kZTogJ1VZVScsIG51bWVyaWNDb2RlOiAnODU4JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MjAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuUVVFVFpBTCcsIGNvZGU6ICdHVFEnLCBudW1lcmljQ29kZTogJzMyMCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDMwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLkJSQVpJTElBTl9SRUFMJywgY29kZTogJ0JSTCcsIG51bWVyaWNDb2RlOiAnOTg2JywgZGVjaW1hbDogMC4wMSB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0NDAnLCBpc0FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0NVUlJFTkNJRVMuQkVMQVJVU0lBTl9SVUJMRScsIGNvZGU6ICdCWVInLCBudW1lcmljQ29kZTogJzk3NCcsIGRlY2ltYWw6IDAgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDUwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLlJVU1NJQU5fUlVCTEUnLCBjb2RlOiAnUlVCJywgbnVtZXJpY0NvZGU6ICc2NDMnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQ2MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5TT0wnLCBjb2RlOiAnUEVOJywgbnVtZXJpY0NvZGU6ICc2MDQnLCBkZWNpbWFsOiAwLjAxIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQ3MCcsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnQ1VSUkVOQ0lFUy5URU5HRScsIGNvZGU6ICdLWlQnLCBudW1lcmljQ29kZTogJzM5OCcsIGRlY2ltYWw6IDAuMDEgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNDgwJywgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdDVVJSRU5DSUVTLlpMT1RZJywgY29kZTogJ1BMTicsIG51bWVyaWNDb2RlOiAnOTg1JywgZGVjaW1hbDogMC4wMSB9XG4gICAgICAgIF07ICAgICAgICBcbiAgICAgICAgY3VycmVuY2llcy5mb3JFYWNoKCAoIGN1cjpDdXJyZW5jeSApID0+IEN1cnJlbmNpZXMuaW5zZXJ0KCBjdXIgKSApO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBFbWFpbENvbnRlbnQgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL2VtYWlsLWNvbnRlbnQubW9kZWwnO1xuaW1wb3J0IHsgRW1haWxDb250ZW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9lbWFpbC1jb250ZW50LmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZEVtYWlsQ29udGVudHMoKSB7XG4gICAgaWYgKEVtYWlsQ29udGVudHMuZmluZCgpLmN1cnNvci5jb3VudCgpID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGVtYWlsQ29udGVudHM6IEVtYWlsQ29udGVudFtdID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogJzEwMCcsXG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2U6ICdlbicsXG4gICAgICAgICAgICAgICAgbGFuZ19kaWN0aW9uYXJ5OiBbXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdjaGFyZ2VTb29uRW1haWxTdWJqZWN0VmFyJywgdHJhZHVjdGlvbjogJ1lvdXIgbW9udGhseSBjb21leWdhbmEgc2VydmljZSB3aWxsIGVuZHMgc29vbicgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ2dyZWV0VmFyJywgdHJhZHVjdGlvbjogJ0hlbGxvJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnd2VsY29tZU1zZ1ZhcicsIHRyYWR1Y3Rpb246ICdXZSBnb3QgYSByZXF1ZXN0IHRvIHJlc2V0IHlvdSBwYXNzd29yZCwgaWYgaXQgd2FzIHlvdSBjbGljayB0aGUgYnV0dG9uIGFib3ZlLicgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ2J0blRleHRWYXInLCB0cmFkdWN0aW9uOiAnUmVzZXQnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdiZWZvcmVNc2dWYXInLCB0cmFkdWN0aW9uOiAnSWYgeW91IGRvIG5vdCB3YW50IHRvIGNoYW5nZSB0aGUgcGFzc3dvcmQsIGlnbm9yZSB0aGlzIG1lc3NhZ2UuJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVnYXJkVmFyJywgdHJhZHVjdGlvbjogJ1RoYW5rcywgY29tZXlnYW5hIHRlYW0uJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnZm9sbG93TXNnVmFyJywgdHJhZHVjdGlvbjogJ0ZvbGxvdyB1cyBvbiBzb2NpYWwgbmV0d29ya3MnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZW1pbmRlckNoYXJnZVNvb25Nc2dWYXInLCB0cmFkdWN0aW9uOiAnUmVtZW1iZXIgdGhhdCB5b3VyIG1vbnRobHkgY29tZXlnYW5hIHNlcnZpY2UgZm9yOiAnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZW1pbmRlckNoYXJnZVNvb25Nc2dWYXIyJywgdHJhZHVjdGlvbjogJ0VuZHMgb246ICcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ2luc3RydWN0aW9uY2hhcmdlU29vbk1zZ1ZhcicsIHRyYWR1Y3Rpb246ICdJZiB5b3Ugd2FudCB0byBjb250aW51ZSB1c2luZyBhbGwgdGhlIHN5c3RlbSBmZWF0dXJlcywgZW50ZXJpbmcgd2l0aCB5b3VyIGVtYWlsIG9yIHVzZXJuYW1lIGFuZCBzZWxlY3QgdGhlIG1lbnUgRXN0YWJsaXNobWVudHMgPiBBZG1pbmlzdHJhdGlvbiA+IEVkaXQgZXN0YWJsaXNobWVudCA+ICMgVGFibGVzJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyJywgdHJhZHVjdGlvbjogJ1JlbWVtYmVyIHRoYXQgeW91ciBtb250aGx5IGNvbWV5Z2FuYSBzZXJ2aWNlIGZvcjogJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyMicsIHRyYWR1Y3Rpb246ICdFeHBpcmVzIG9uOiAnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZW1pbmRlckV4cGlyZVNvb25Nc2dWYXIzJywgdHJhZHVjdGlvbjogJ0lmIHlvdSB3YW50IHRvIGNvbnRpbnVlIHVzaW5nIGFsbCB0aGUgc3lzdGVtIGZlYXR1cmVzLCBlbnRlcmluZyB3aXRoIHlvdXIgZW1haWwgb3IgdXNlcm5hbWUgYW5kIHNlbGVjdCB0aGUgbWVudSBQYXltZW50cyA+IE1vbnRobHkgcGF5bWVudCcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ2V4cGlyZVNvb25FbWFpbFN1YmplY3RWYXInLCB0cmFkdWN0aW9uOiAnWW91ciBjb21leWdhbmEgc2VydmljZSB3aWxsIGV4cGlyZSBzb29uJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJSZXN0RXhwaXJlZFZhcicsIHRyYWR1Y3Rpb246ICdZb3VyIG1vbnRobHkgY29tZXlnYW5hIHNlcnZpY2UgZm9yOiAnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZW1pbmRlclJlc3RFeHBpcmVkVmFyMicsIHRyYWR1Y3Rpb246ICdIYXMgZXhwaXJlZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3JlbWluZGVyUmVzdEV4cGlyZWRWYXIzJywgdHJhZHVjdGlvbjogJ0lmIHlvdSB3YW50IHRvIGNvbnRpbnVlIHVzaW5nIGFsbCB0aGUgc3lzdGVtIGZlYXR1cmVzLCBlbnRlcmluZyB3aXRoIHlvdXIgZW1haWwgb3IgdXNlcm5hbWUgYW5kIHNlbGVjdCB0aGUgbWVudSBQYXltZW50cyA+IFJlYWN0aXZhdGUgJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVzdEV4cGlyZWRFbWFpbFN1YmplY3RWYXInLCB0cmFkdWN0aW9uOiAnWW91ciBjb21leWdhbmEgc2VydmljZSBoYXMgZXhwaXJlZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3Jlc2V0UGFzc3dvcmRTdWJqZWN0VmFyJywgdHJhZHVjdGlvbjogJ1Jlc2V0IHlvdXIgcGFzc3dvcmQgb24nIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9pZDogJzIwMCcsXG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2U6ICdlcycsXG4gICAgICAgICAgICAgICAgbGFuZ19kaWN0aW9uYXJ5OiBbXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdjaGFyZ2VTb29uRW1haWxTdWJqZWN0VmFyJywgdHJhZHVjdGlvbjogJ1R1IHNlcnZpY2lvIG1lbnN1YWwgZGUgY29tZXlnYW5hIHRlcm1pbmFyw6EgcHJvbnRvJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnZ3JlZXRWYXInLCB0cmFkdWN0aW9uOiAnSG9sYScgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3dlbGNvbWVNc2dWYXInLCB0cmFkdWN0aW9uOiAnSGVtb3MgcmVjaWJpZG8gdW5hIHBldGljacOzbiBwYXJhIGNhbWJpYXIgdHUgY29udHJhc2XDsWEsIHNpIGZ1aXN0ZSB0dSBoYXogY2xpY2sgZW4gZWwgYm90w7NuIGFiYWpvJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnYnRuVGV4dFZhcicsIHRyYWR1Y3Rpb246ICdDYW1iaWFyJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnYmVmb3JlTXNnVmFyJywgdHJhZHVjdGlvbjogJ1NpIG5vIHF1aWVyZXMgY2FtYmlhciBsYSBjb250cmFzZcOxYSwgaWdub3JhIGVzdGUgbWVuc2FqZS4nIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZWdhcmRWYXInLCB0cmFkdWN0aW9uOiAnR3JhY2lhcywgZXF1aXBvIGNvbWV5Z2FuYScgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ2ZvbGxvd01zZ1ZhcicsIHRyYWR1Y3Rpb246ICdTaWd1ZW5vcyBlbiByZWRlcyBzb2NpYWxlcycgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3JlbWluZGVyQ2hhcmdlU29vbk1zZ1ZhcicsIHRyYWR1Y3Rpb246ICdSZWN1ZXJkYSBxdWUgdHUgc2VydmljaW8gbWVuc3VhbCBkZSBjb21leWdhbmEgcGFyYTogJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJDaGFyZ2VTb29uTXNnVmFyMicsIHRyYWR1Y3Rpb246ICdGaW5hbGl6YSBlbDogJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAnaW5zdHJ1Y3Rpb25jaGFyZ2VTb29uTXNnVmFyJywgdHJhZHVjdGlvbjogJ1NpIGRlc2VhcyBzZWd1aXIgdXNhbmRvIHRvZGFzIGxhcyBmdW5jaW9uYWxpZGFkZXMgZGVsIHNpc3RlbWEsIGluZ3Jlc2EgY29uIHR1IHVzdWFyaW8gbyBjb3JyZW8geSBzZWxlY2Npb25hIGVsIG1lbsO6IEVzdGFibGVjaW1pZW50b3MgPiBBZG1pbmlzdHJhY2nDs24gPiBFZGl0YXIgZXN0YWJsZWNpbWllbnRvID4gIyBNZXNhcycgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3JlbWluZGVyRXhwaXJlU29vbk1zZ1ZhcicsIHRyYWR1Y3Rpb246ICdSZWN1ZXJkYSBxdWUgdHUgc2VydmljaW8gbWVuc3VhbCBkZSBjb21leWdhbmEgcGFyYTogJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJFeHBpcmVTb29uTXNnVmFyMicsIHRyYWR1Y3Rpb246ICdFeHBpcmEgZWw6ICcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3JlbWluZGVyRXhwaXJlU29vbk1zZ1ZhcjMnLCB0cmFkdWN0aW9uOiAnU2kgZGVzZWFzIHNlZ3VpciB1c2FuZG8gdG9kYXMgbGFzIGZ1bmNpb25hbGlkYWRlcyBkZWwgc2lzdGVtYSwgaW5ncmVzYSBjb24gdHUgdXN1YXJpbyBvIGNvcnJlbyB5IHNlbGVjY2lvbmEgZWwgbWVuw7ogUGFnb3MgPiBQYWdvIG1lbnN1YWwnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdleHBpcmVTb29uRW1haWxTdWJqZWN0VmFyJywgdHJhZHVjdGlvbjogJ1R1IHNlcnZpY2lvIGNvbWV5Z2FuYSBleHBpcmFyw6EgcHJvbnRvJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVtaW5kZXJSZXN0RXhwaXJlZFZhcicsIHRyYWR1Y3Rpb246ICdUdSBzZXJ2aWNpbyBtZW5zdWFsIGRlIGNvbWV5Z2FuYSBwYXJhOiAnIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdyZW1pbmRlclJlc3RFeHBpcmVkVmFyMicsIHRyYWR1Y3Rpb246ICdoYSBleHBpcmFkbycgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogJ3JlbWluZGVyUmVzdEV4cGlyZWRWYXIzJywgdHJhZHVjdGlvbjogJ1NpIGRlc2VhcyBzZWd1aXIgdXNhbmRvIHRvZGFzIGxhcyBmdW5jaW9uYWxpZGFkZXMgZGVsIHNpc3RlbWEsIGluZ3Jlc2EgY29uIHR1IHVzdWFyaW8gbyBjb3JyZW8geSBzZWxlY2Npb25hIGxhIG9wY2nDs24gUGFnb3MgPiBSZWFjdGl2YXIgJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVzdEV4cGlyZWRFbWFpbFN1YmplY3RWYXInLCB0cmFkdWN0aW9uOiAnVHUgc2VydmljaW8gZGUgY29tZXlnYW5hIGhhIGV4cGlyYWRvJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiAncmVzZXRQYXNzd29yZFN1YmplY3RWYXInLCB0cmFkdWN0aW9uOiAnQ2FtYmlvIGRlIGNvbnRyYXNlw7FhIGVuJyB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICBdO1xuICAgICAgICBlbWFpbENvbnRlbnRzLmZvckVhY2goKGVtYWlsQ29udGVudDogRW1haWxDb250ZW50KSA9PiBFbWFpbENvbnRlbnRzLmluc2VydChlbWFpbENvbnRlbnQpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgSG91ciB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2dlbmVyYWwvaG91ci5tb2RlbCc7XG5pbXBvcnQgeyBIb3VycyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9ob3Vycy5jb2xsZWN0aW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRIb3VycygpIHtcblxuICAgIGlmKEhvdXJzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PT0gMCApe1xuICAgICAgICBjb25zdCBob3VyczogSG91cltdID0gW1xuICAgICAgICAgICAgeyBob3VyOicwMDowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDA6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzAxOjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwMTozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDI6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzAyOjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwMzowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDM6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzA0OjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwNDozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDU6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzA1OjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwNjowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDY6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzA3OjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwNzozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDg6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzA4OjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicwOTowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMDk6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzEwOjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxMDozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTE6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzExOjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxMjowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTI6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzEzOjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxMzozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTQ6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzE0OjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxNTowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTU6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzE2OjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxNjozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTc6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzE3OjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxODowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMTg6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzE5OjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicxOTozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMjA6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzIwOjMwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicyMTowMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMjE6MzAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzIyOjAwJyB9LFxuICAgICAgICAgICAgeyBob3VyOicyMjozMCcgfSxcbiAgICAgICAgICAgIHsgaG91cjonMjM6MDAnIH0sXG4gICAgICAgICAgICB7IGhvdXI6JzIzOjMwJyB9XG4gICAgICAgIF07XG5cbiAgICAgICAgaG91cnMuZm9yRWFjaCgoaG91cjpIb3VyKSA9PiBIb3Vycy5pbnNlcnQoaG91cikpO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBMYW5ndWFnZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvbGFuZ3VhZ2UuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBMYW5ndWFnZSB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2dlbmVyYWwvbGFuZ3VhZ2UubW9kZWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZExhbmd1YWdlcygpe1xuICAgIGlmKExhbmd1YWdlcy5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApe1xuICAgICAgICBjb25zdCBsYW5ndWFnZXM6IExhbmd1YWdlW10gPSBbe1xuICAgICAgICAgICAgX2lkOiBcIjEwMDBcIixcbiAgICAgICAgICAgIGlzX2FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgIGxhbmd1YWdlX2NvZGU6ICdlcycsXG4gICAgICAgICAgICBuYW1lOiAnRXNwYcOxb2wnLFxuICAgICAgICAgICAgaW1hZ2U6IG51bGxcbiAgICAgICAgfSx7XG4gICAgICAgICAgICBfaWQ6IFwiMjAwMFwiLFxuICAgICAgICAgICAgaXNfYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgbGFuZ3VhZ2VfY29kZTogJ2VuJyxcbiAgICAgICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgICAgIGltYWdlOiBudWxsXG4gICAgICAgIH0se1xuICAgICAgICAgICAgX2lkOiBcIjMwMDBcIixcbiAgICAgICAgICAgIGlzX2FjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICBsYW5ndWFnZV9jb2RlOiAnZnInLFxuICAgICAgICAgICAgbmFtZTogJ0ZyYW7Dp2FpcycsXG4gICAgICAgICAgICBpbWFnZTogbnVsbFxuICAgICAgICB9LHtcbiAgICAgICAgICAgIF9pZDogXCI0MDAwXCIsXG4gICAgICAgICAgICBpc19hY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgbGFuZ3VhZ2VfY29kZTogJ3B0JyxcbiAgICAgICAgICAgIG5hbWU6ICdQb3J0dWd1ZXNlJyxcbiAgICAgICAgICAgIGltYWdlOiBudWxsXG4gICAgICAgIH0se1xuICAgICAgICAgICAgX2lkOiBcIjUwMDBcIixcbiAgICAgICAgICAgIGlzX2FjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICBsYW5ndWFnZV9jb2RlOiAnaXQnLFxuICAgICAgICAgICAgbmFtZTogJ0l0YWxpYW5vJyxcbiAgICAgICAgICAgIGltYWdlOiBudWxsXG4gICAgfS8qLHtcbiAgICAgICAgICAgIF9pZDogXCI2MDAwXCIsXG4gICAgICAgICAgICBpc19hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBsYW5ndWFnZV9jb2RlOiAnYWwnLFxuICAgICAgICAgICAgbmFtZTogJ0RldXRzY2gnLFxuICAgICAgICAgICAgaW1hZ2U6IG51bGxcbiAgICAgICAgfSovXG4gICAgICAgIF07XG5cbiAgICAgICAgbGFuZ3VhZ2VzLmZvckVhY2goKGxhbmd1YWdlIDogTGFuZ3VhZ2UpID0+IExhbmd1YWdlcy5pbnNlcnQobGFuZ3VhZ2UpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgUGFyYW1ldGVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZ2VuZXJhbC9wYXJhbWV0ZXIubW9kZWwnO1xuaW1wb3J0IHsgUGFyYW1ldGVycyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXIuY29sbGVjdGlvbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkUGFyYW1ldGVycygpIHtcbiAgICBpZiAoUGFyYW1ldGVycy5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVyczogUGFyYW1ldGVyW10gPSBbXG4gICAgICAgICAgICB7IF9pZDogJzEwMCcsIG5hbWU6ICdzdGFydF9wYXltZW50X2RheScsIHZhbHVlOiAnMScsIGRlc2NyaXB0aW9uOiAnaW5pdGlhbCBkYXkgb2YgbW9udGggdG8gdmFsaWRhdGUgY2xpZW50IHBheW1lbnQnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIwMCcsIG5hbWU6ICdlbmRfcGF5bWVudF9kYXknLCB2YWx1ZTogJzUnLCBkZXNjcmlwdGlvbjogJ2ZpbmFsIGRheSBvZiBtb250aCB0byB2YWxpZGF0ZSBjbGllbnQgcGF5bWVudCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzAwJywgbmFtZTogJ2Zyb21fZW1haWwnLCB2YWx1ZTogJ2NvbWV5Z2FuYSA8bm8tcmVwbHlAY29tZXlnYW5hLmNvbT4nLCBkZXNjcmlwdGlvbjogJ2RlZmF1bHQgZnJvbSBhY2NvdW50IGVtYWlsIHRvIHNlbmQgbWVzc2FnZXMnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQwMCcsIG5hbWU6ICdmaXJzdF9wYXlfZGlzY291bnQnLCB2YWx1ZTogJzUwJywgZGVzY3JpcHRpb246ICdkaXNjb3VudCBpbiBwZXJjZW50IHRvIHNlcnZpY2UgZmlyc3QgcGF5JyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc1MDAnLCBuYW1lOiAnY29sb21iaWFfdGF4X2l2YScsIHZhbHVlOiAnMTknLCBkZXNjcmlwdGlvbjogJ0NvbG9tYmlhIHRheCBpdmEgdG8gbW9udGhseSBjb21leWdhbmEgcGF5bWVudCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNjAwJywgbmFtZTogJ3BheXVfc2NyaXB0X3BfdGFnJywgdmFsdWU6ICd1cmwoaHR0cHM6Ly9tYWYucGFnb3NvbmxpbmUubmV0L3dzL2ZwP2lkPScsIGRlc2NyaXB0aW9uOiAndXJsIGZvciBzZWN1cml0eSBzY3JpcHQgZm9yIHBheXUgZm9ybSBpbiA8cD4gdGFnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc3MDAnLCBuYW1lOiAncGF5dV9zY3JpcHRfaW1nX3RhZycsIHZhbHVlOiAnaHR0cHM6Ly9tYWYucGFnb3NvbmxpbmUubmV0L3dzL2ZwL2NsZWFyLnBuZz9pZD0nLCBkZXNjcmlwdGlvbjogJ3VybCBmb3Igc2VjdXJpdHkgc2NyaXB0IGZvciBwYXl1IGZvcm0gaW4gPGltZz4gdGFnJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc4MDAnLCBuYW1lOiAncGF5dV9zY3JpcHRfc2NyaXB0X3RhZycsIHZhbHVlOiAnaHR0cHM6Ly9tYWYucGFnb3NvbmxpbmUubmV0L3dzL2ZwL2NoZWNrLmpzP2lkPScsIGRlc2NyaXB0aW9uOiAndXJsIGZvciBzZWN1cml0eSBzY3JpcHQgZm9yIHBheXUgZm9ybSBpbiA8c2NyaXB0PiB0YWcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzkwMCcsIG5hbWU6ICdwYXl1X3NjcmlwdF9vYmplY3RfdGFnJywgdmFsdWU6ICdodHRwczovL21hZi5wYWdvc29ubGluZS5uZXQvd3MvZnAvZnAuc3dmP2lkPScsIGRlc2NyaXB0aW9uOiAndXJsIGZvciBzZWN1cml0eSBzY3JpcHQgZm9yIHBheXUgZm9ybSBpbiA8b2JqZWN0PiB0YWcnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzEwMDAnLCBuYW1lOiAncGF5dV9wYXltZW50c191cmxfdGVzdCcsIHZhbHVlOiAnaHR0cHM6Ly9zYW5kYm94LmFwaS5wYXl1bGF0YW0uY29tL3BheW1lbnRzLWFwaS80LjAvc2VydmljZS5jZ2knLCBkZXNjcmlwdGlvbjogJ3VybCBmb3IgY29ubmVjdCB0ZXN0IHBheXUgcGF5bWVudHMgQVBJJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcyMDAwJywgbmFtZTogJ3BheXVfcmVwb3J0c191cmxfdGVzdCcsIHZhbHVlOiAnaHR0cHM6Ly9zYW5kYm94LmFwaS5wYXl1bGF0YW0uY29tL3JlcG9ydHMtYXBpLzQuMC9zZXJ2aWNlLmNnaScsIGRlc2NyaXB0aW9uOiAndXJsIGZvciBjb25uZWN0IHRlc3QgcGF5dSByZXBvcnRzIEFQSScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzAwMCcsIG5hbWU6ICdpcF9wdWJsaWNfc2VydmljZV91cmwnLCB2YWx1ZTogJ2h0dHBzOi8vYXBpLmlwaWZ5Lm9yZz9mb3JtYXQ9anNvbicsIGRlc2NyaXB0aW9uOiAndXJsIGZvciByZXRyaWV2ZSB0aGUgY2xpZW50IHB1YmxpYyBpcCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTEwMCcsIG5hbWU6ICdjb21wYW55X25hbWUnLCB2YWx1ZTogJ1JlYWxiaW5kIFMuQS5TJywgZGVzY3JpcHRpb246ICdSZWFsYmluZCBjb21wYW55IG5hbWUgZm9yIGludm9pY2UnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzExNTAnLCBuYW1lOiAnY29tcGFueV9waG9uZScsIHZhbHVlOiAnVGVsOiAoNTcgMSkgNjk1OTUzNycsIGRlc2NyaXB0aW9uOiAnUmVhbGJpbmQgcGhvbmUnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzEyMDAnLCBuYW1lOiAnY29tcGFueV9hZGRyZXNzJywgdmFsdWU6ICdDcmEgNiAjIDU4LTQzIE9mIDIwMScsIGRlc2NyaXB0aW9uOiAnUmVhbGJpbmQgY29tcGFueSBhZGRyZXNzJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxMzAwJywgbmFtZTogJ2NvbXBhbnlfY291bnRyeScsIHZhbHVlOiAnQ29sb21iaWEnLCBkZXNjcmlwdGlvbjogJ1JlYWxiaW5kIGNvdW50cnkgbG9jYXRpb24nIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE0MDAnLCBuYW1lOiAnY29tcGFueV9jaXR5JywgdmFsdWU6ICdCb2dvdMOhJywgZGVzY3JpcHRpb246ICdSZWFsYmluZCBjaXR5IGxvY2F0aW9uJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNTAwJywgbmFtZTogJ2NvbXBhbnlfbml0JywgdmFsdWU6ICdOSVQ6IDkwMS4wMzYuNTg1LTAnLCBkZXNjcmlwdGlvbjogJ1JlYWxiaW5kIE5JVCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTUxMCcsIG5hbWU6ICdjb21wYW55X3JlZ2ltZScsIHZhbHVlOiAnUsOpZ2ltZW4gY29tw7puJywgZGVzY3JpcHRpb246ICdSZWFsYmluZCByZWdpbWUgaW4gQ29sb21iaWEnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE1MjAnLCBuYW1lOiAnY29tcGFueV9jb250cmlidXRpb24nLCB2YWx1ZTogJ05vIHNvbW9zIGdyYW5kZXMgY29udHJpYnV5ZW50ZXMnLCBkZXNjcmlwdGlvbjogJ1JlYWxiaW5kIGNvbnRyaWJ1dGlvbiBpbiBDb2xvbWJpYScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTUzMCcsIG5hbWU6ICdjb21wYW55X3JldGFpbmVyJywgdmFsdWU6ICdObyBzb21vcyBhdXRvcmV0ZW5lZG9yZXMgcG9yIHZlbnRhcyBuaSBzZXJ2aWNpb3MnLCBkZXNjcmlwdGlvbjogJ1JlYWxiaW5kIHJldGVudGlvbiBpbiBDb2xvbWJpYScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTU0MCcsIG5hbWU6ICdjb21wYW55X2FnZW50X3JldGFpbmVyJywgdmFsdWU6ICdObyBzb21vcyBhZ2VudGVzIHJldGVuZWRvcmVzIGRlIElWQSBlIElDQScsIGRlc2NyaXB0aW9uOiAnUmVhbGJpbmQgaXZhIGFuZCBpY2EgYWdlbnQgcmV0ZW50aW9uIGluIENvbG9tYmlhJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNTUwJywgbmFtZTogJ2ludm9pY2VfZ2VuZXJhdGVkX21zZycsIHZhbHVlOiAnRmFjdHVyYSBlbWl0aWRhIHBvciBjb21wdXRhZG9yJywgZGVzY3JpcHRpb246ICdJbnZvaWNlIG1lc3NhZ2UgZm9yIGludm9pY2UnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE2MDAnLCBuYW1lOiAnaXVyZXN0X3VybCcsIHZhbHVlOiAnaHR0cHM6Ly93d3cuY29tZXlnYW5hLmNvbScsIGRlc2NyaXB0aW9uOiAnY29tZXlnYW5hIHVybCBwYWdlJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICcxNjUwJywgbmFtZTogJ2l1cmVzdF91cmxfc2hvcnQnLCB2YWx1ZTogJ3d3dy5jb21leWdhbmEuY29tJywgZGVzY3JpcHRpb246ICdjb21leWdhbmEgdXJsIHBhZ2Ugc2hvcnQnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE3MDAnLCBuYW1lOiAnZmFjZWJvb2tfbGluaycsIHZhbHVlOiAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tJywgZGVzY3JpcHRpb246ICdmYWNlYm9vayBsaW5rIGZvciBjb21leWdhbmEnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE4MDAnLCBuYW1lOiAndHdpdHRlcl9saW5rJywgdmFsdWU6ICdodHRwczovL3d3dy50d2l0dGVyLmNvbScsIGRlc2NyaXB0aW9uOiAndHdpdHRlciBsaW5rIGZvciBjb21leWdhbmEnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE5MDAnLCBuYW1lOiAnaW5zdGFncmFtX2xpbmsnLCB2YWx1ZTogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20nLCBkZXNjcmlwdGlvbjogJ2luc3RhZ3JhbSBsaW5rIGZvciBjb21leWdhbmEnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzE2MTAnLCBuYW1lOiAnaXVyZXN0X2ltZ191cmwnLCB2YWx1ZTogJ2h0dHBzOi8vd3d3LmNvbWV5Z2FuYS5jb20vaW1hZ2VzLycsIGRlc2NyaXB0aW9uOiAnY29tZXlnYW5hIGltYWdlcyB1cmwnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzMxMDAnLCBuYW1lOiAnaXBfcHVibGljX3NlcnZpY2VfdXJsMicsIHZhbHVlOiAnaHR0cHM6Ly9pcGluZm8uaW8vanNvbicsIGRlc2NyaXB0aW9uOiAndXJsIGZvciByZXRyaWV2ZSB0aGUgY2xpZW50IHB1YmxpYyBpcCAjMicgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMzIwMCcsIG5hbWU6ICdpcF9wdWJsaWNfc2VydmljZV91cmwzJywgdmFsdWU6ICdodHRwczovL2lmY29uZmlnLmNvL2pzb24nLCBkZXNjcmlwdGlvbjogJ3VybCBmb3IgcmV0cmlldmUgdGhlIGNsaWVudCBwdWJsaWMgaXAgIzMnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzkwMDAnLCBuYW1lOiAncGF5dV9pc19wcm9kJywgdmFsdWU6ICdmYWxzZScsIGRlc2NyaXB0aW9uOiAnRmxhZyB0byBlbmFibGUgdG8gcHJvZCBwYXl1IHBheW1lbnQnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzkxMDAnLCBuYW1lOiAncGF5dV90ZXN0X3N0YXRlJywgdmFsdWU6ICdBUFBST1ZFRCcsIGRlc2NyaXB0aW9uOiAnVGVzdCBzdGF0ZSBmb3IgcGF5dSBwYXltZW50IHRyYW5zYWN0aW9uJyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc5MjAwJywgbmFtZTogJ3BheXVfcmVmZXJlbmNlX2NvZGUnLCB2YWx1ZTogJ00wTl9QXycsIGRlc2NyaXB0aW9uOiAnUHJlZml4IGZvciByZWZlcmVuY2UgY29kZSBvbiBwYXl1IHRyYW5zYWN0aW9ucycgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjEwMCcsIG5hbWU6ICdtYXhfdXNlcl9wZW5hbHRpZXMnLCB2YWx1ZTogJzMnLCBkZXNjcmlwdGlvbjogJ01heCBudW1iZXIgb2YgdXNlciBwZW5hbHRpZXMnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzIyMDAnLCBuYW1lOiAncGVuYWx0eV9kYXlzJywgdmFsdWU6ICczMCcsIGRlc2NyaXB0aW9uOiAnVXNlciBwZW5hbHR5IGRheXMnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzgwMDAnLCBuYW1lOiAnZGF0ZV90ZXN0X21vbnRobHlfcGF5JywgdmFsdWU6ICdNYXJjaCA1LCAyMDE4JywgZGVzY3JpcHRpb246ICdEYXRlIHRlc3QgZm9yIG1vbnRobHkgcGF5bWVudCBvZiBjb21leWdhbmEgc2VydmljZScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMTAwMDAnLCBuYW1lOiAncGF5dV9wYXltZW50c191cmxfcHJvZCcsIHZhbHVlOiAnaHR0cHM6Ly9hcGkucGF5dWxhdGFtLmNvbS9wYXltZW50cy1hcGkvNC4wL3NlcnZpY2UuY2dpJywgZGVzY3JpcHRpb246ICd1cmwgZm9yIGNvbm5lY3QgcHJvZCBwYXl1IHBheW1lbnRzIEFQSScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjAwMDAnLCBuYW1lOiAncGF5dV9yZXBvcnRzX3VybF9wcm9kJywgdmFsdWU6ICdodHRwczovL2FwaS5wYXl1bGF0YW0uY29tL3JlcG9ydHMtYXBpLzQuMC9zZXJ2aWNlLmNnaScsIGRlc2NyaXB0aW9uOiAndXJsIGZvciBjb25uZWN0IHByb2QgcGF5dSByZXBvcnRzIEFQSScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnODUwMCcsIG5hbWU6ICdkYXRlX3Rlc3RfcmVhY3RpdmF0ZScsIHZhbHVlOiAnSmFudWFyeSA2LCAyMDE4JywgZGVzY3JpcHRpb246ICdEYXRlIHRlc3QgZm9yIHJlYWN0aXZhdGUgcmVzdGF1cmFudCBmb3IgcGF5JyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICczMDAwMCcsIG5hbWU6ICd0ZXJtc191cmwnLCB2YWx1ZTogJ2h0dHA6Ly93d3cudHN0aTR0LTE5MzU5NDMwOTUuY29tL3NpZ25pbi8nLCBkZXNjcmlwdGlvbjogJ3VybCB0byBzZWUgdGVybXMgYW5kIGNvbmRpdGlvbnMnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzQwMDAwJywgbmFtZTogJ3BvbGljeV91cmwnLCB2YWx1ZTogJ2h0dHA6Ly93d3cudHN0aTR0LTE5MzU5NDMwOTUuY29tL3NpZ251cC8nLCBkZXNjcmlwdGlvbjogJ3VybCB0byBzZWUgcHJpdmFjeSBwb2xpY3knfSxcbiAgICAgICAgICAgIHsgX2lkOiAnNTAwMDAnLCBuYW1lOiAnUVJfY29kZV91cmwnLCB2YWx1ZTogJ2h0dHA6Ly93d3cudHN0aTR0LTE5MzU5NDMwOTUuY29tL3FyPycsIGRlc2NyaXB0aW9uOiAnVGhpcyB1cmwgcmVkaXJlY3QgdG8gcGFnZSB0aGUgY29tZXlnYW5hL2Rvd25sb2FkIHdoZW4gc2Nhbm5lZCBRUiBjb2RlIGZyb20gb3RoZXIgYXBwbGljYXRpb24nfVxuICAgICAgICBdO1xuICAgICAgICBwYXJhbWV0ZXJzLmZvckVhY2goKHBhcmFtZXRlcjogUGFyYW1ldGVyKSA9PiBQYXJhbWV0ZXJzLmluc2VydChwYXJhbWV0ZXIpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgUGF5bWVudE1ldGhvZCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2dlbmVyYWwvcGF5bWVudE1ldGhvZC5tb2RlbCc7XG5pbXBvcnQgeyBQYXltZW50TWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXltZW50TWV0aG9kLmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZFBheW1lbnRNZXRob2RzKCl7XG4gICAgaWYoIFBheW1lbnRNZXRob2RzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PT0gMCApe1xuICAgICAgICBjb25zdCBwYXltZW50czogUGF5bWVudE1ldGhvZFtdID0gW1xuICAgICAgICAgICAgeyBfaWQ6IFwiMTBcIiwgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdQQVlNRU5UX01FVEhPRFMuQ0FTSCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjIwXCIsIGlzQWN0aXZlOiB0cnVlLCBuYW1lOiAnUEFZTUVOVF9NRVRIT0RTLkNSRURJVF9DQVJEJyB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzBcIiwgaXNBY3RpdmU6IHRydWUsIG5hbWU6ICdQQVlNRU5UX01FVEhPRFMuREVCSVRfQ0FSRCcgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjQwXCIsIGlzQWN0aXZlOiBmYWxzZSwgbmFtZTogJ1BBWU1FTlRfTUVUSE9EUy5PTkxJTkUnIH0sXG4gICAgICAgIF07XG4gICAgICAgIHBheW1lbnRzLmZvckVhY2goICggcGF5OlBheW1lbnRNZXRob2QgKSA9PiBQYXltZW50TWV0aG9kcy5pbnNlcnQoIHBheSApICk7XG4gICAgfVxufSIsImltcG9ydCB7IFBvaW50VmFsaWRpdHkgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL3BvaW50LXZhbGlkaXR5Lm1vZGVsJztcbmltcG9ydCB7IFBvaW50c1ZhbGlkaXR5IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BvaW50LXZhbGlkaXR5LmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZFBvaW50c1ZhbGlkaXR5KCkge1xuICAgIGlmIChQb2ludHNWYWxpZGl0eS5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApIHtcbiAgICAgICAgY29uc3QgcG9pbnN0X3ZhbGlkaXR5OiBQb2ludFZhbGlkaXR5W10gPSBbXG4gICAgICAgICAgICB7IF9pZDogXCIxNVwiLCBwb2ludF92YWxpZGl0eTogXCIxNVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIxNlwiLCBwb2ludF92YWxpZGl0eTogXCIxNlwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIxN1wiLCBwb2ludF92YWxpZGl0eTogXCIxN1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIxOFwiLCBwb2ludF92YWxpZGl0eTogXCIxOFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIxOVwiLCBwb2ludF92YWxpZGl0eTogXCIxOVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyMFwiLCBwb2ludF92YWxpZGl0eTogXCIyMFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyMVwiLCBwb2ludF92YWxpZGl0eTogXCIyMVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyMlwiLCBwb2ludF92YWxpZGl0eTogXCIyMlwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyM1wiLCBwb2ludF92YWxpZGl0eTogXCIyM1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyNFwiLCBwb2ludF92YWxpZGl0eTogXCIyNFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyNVwiLCBwb2ludF92YWxpZGl0eTogXCIyNVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyNlwiLCBwb2ludF92YWxpZGl0eTogXCIyNlwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyN1wiLCBwb2ludF92YWxpZGl0eTogXCIyN1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyOFwiLCBwb2ludF92YWxpZGl0eTogXCIyOFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyOVwiLCBwb2ludF92YWxpZGl0eTogXCIyOVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIzMFwiLCBwb2ludF92YWxpZGl0eTogXCIzMFwiIH0sXG4gICAgICAgIF07XG4gICAgICAgIHBvaW5zdF92YWxpZGl0eS5mb3JFYWNoKChwbnRfdmFsaWRpdHk6IFBvaW50VmFsaWRpdHkpID0+IFBvaW50c1ZhbGlkaXR5Lmluc2VydChwbnRfdmFsaWRpdHkpKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9nZW5lcmFsL3BvaW50Lm1vZGVsJztcbmltcG9ydCB7IFBvaW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wb2ludC5jb2xsZWN0aW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRQb2ludHMoKSB7XG4gICAgaWYoUG9pbnRzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PT0gMCApe1xuICAgICAgICBjb25zdCBwb2ludHM6IFBvaW50W10gPSBbXG4gICAgICAgICAgICB7IF9pZDogXCI1XCIsIHBvaW50OiBcIjUgcHRzXCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCIxMFwiLCBwb2ludDogXCIxMCBwdHNcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjE1XCIsIHBvaW50OiBcIjE1IHB0c1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyMFwiLCBwb2ludDogXCIyMCBwdHNcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjI1XCIsIHBvaW50OiBcIjI1IHB0c1wiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzBcIiwgcG9pbnQ6IFwiMzAgcHRzXCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCIzNVwiLCBwb2ludDogXCIzNSBwdHNcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiNDBcIiwgcG9pbnQ6IFwiNDAgcHRzXCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCI0NVwiLCBwb2ludDogXCI0NSBwdHNcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjUwXCIsIHBvaW50OiBcIjUwIHB0c1wiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiNTVcIiwgcG9pbnQ6IFwiNTUgcHRzXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjYwXCIsIHBvaW50OiBcIjYwIHB0c1wiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiNjVcIiwgcG9pbnQ6IFwiNjUgcHRzXCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCI3MFwiLCBwb2ludDogXCI3MCBwdHNcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjc1XCIsIHBvaW50OiBcIjc1IHB0c1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCI4MFwiLCBwb2ludDogXCI4MCBwdHNcIiB9LCBcbiAgICAgICAgICAgIHsgX2lkOiBcIjg1XCIsIHBvaW50OiBcIjg1IHB0c1wiIH0sIFxuICAgICAgICAgICAgeyBfaWQ6IFwiOTBcIiwgcG9pbnQ6IFwiOTAgcHRzXCIgfSwgXG4gICAgICAgICAgICB7IF9pZDogXCI5NVwiLCBwb2ludDogXCI5NSBwdHNcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTAwXCIsIHBvaW50OiBcIjEwMCBwdHNcIiB9XG4gICAgICAgIF07XG4gICAgICAgIHBvaW50cy5mb3JFYWNoKChwb2ludDpQb2ludCkgPT4gUG9pbnRzLmluc2VydChwb2ludCkpO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBUeXBlT2ZGb29kIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZ2VuZXJhbC90eXBlLW9mLWZvb2QubW9kZWwnO1xuaW1wb3J0IHsgVHlwZXNPZkZvb2QgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvdHlwZS1vZi1mb29kLmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZFR5cGVzT2ZGb29kKCkge1xuICAgIGlmIChUeXBlc09mRm9vZC5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT09IDApIHtcbiAgICAgICAgY29uc3QgdHlwZXM6IFR5cGVPZkZvb2RbXSA9IFtcbiAgICAgICAgICAgIHsgX2lkOiBcIjEwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuR0VSTUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMjBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5BTUVSSUNBTl9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjMwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuQVJBQklDX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiNDBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5BUkdFTlRJTkVfRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCI1MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkFTSUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiNjBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5CUkFaSUxJQU5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCI3MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkhPTUVNQURFX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiODBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5DSElMRUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiOTBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5DSElORVNFX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTAwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuQ09MT01CSUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTEwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuQ09SRUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTIwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuTUlERExFX0VBU1RFUk5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIxMzBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5TUEFOSVNIX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTQwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuRlJFTkNIX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTUwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuRlVTSU9OX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTYwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuR09VUk1FVF9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjE3MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkdSRUVLX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTgwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuSU5ESUFOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMTkwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuSU5URVJOQVRJT05BTF9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjIwMFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELklUQUxJQU5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyMTBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5KQVBBTkVTRV9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjIyMFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkxBVElOX0FNRVJJQ0FOX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMjMwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuTUVESVRFUlJBTkVBTl9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjI0MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELk1FWElDQU5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyNTBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5PUkdBTklDX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMjYwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuUEVSVVZJQU5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIyNzBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5GQVNUX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMjgwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuVEhBSV9GT09EXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjI5MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELlZFR0VUQVJJQU5fRk9PRFwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIzMDBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5WSUVUTkFNRVNFX0ZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzEwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuT1RIRVJTXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjMyMFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkJBUkJFQ1VFXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjMzMFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELlBBU1RBXCIgfSxcbiAgICAgICAgICAgIHsgX2lkOiBcIjM0MFwiLCB0eXBlX29mX2Zvb2Q6IFwiVFlQRV9PRl9GT09ELkZJU0hfQU5EX1NFQUZPT0RcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzUwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuUElaWkFcIiB9LFxuICAgICAgICAgICAgeyBfaWQ6IFwiMzYwXCIsIHR5cGVfb2ZfZm9vZDogXCJUWVBFX09GX0ZPT0QuU0FORFdJQ0hFU1wiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIzNzBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5TVVNISVwiIH0sXG4gICAgICAgICAgICB7IF9pZDogXCIzODBcIiwgdHlwZV9vZl9mb29kOiBcIlRZUEVfT0ZfRk9PRC5WRUdBTklTTVwiIH1cbiAgICAgICAgXTtcbiAgICAgICAgdHlwZXMuZm9yRWFjaCgodHlwZTogVHlwZU9mRm9vZCkgPT4geyBUeXBlc09mRm9vZC5pbnNlcnQodHlwZSkgfSk7XG4gICAgfVxufSIsImltcG9ydCB7IENjUGF5bWVudE1ldGhvZCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL3BheW1lbnQvY2MtcGF5bWVudC1tZXRob2QubW9kZWwnO1xuaW1wb3J0IHsgQ2NQYXltZW50TWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9jYy1wYXltZW50LW1ldGhvZHMuY29sbGVjdGlvbidcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRDY1BheW1lbnRNZXRob2RzKCkge1xuICAgIGlmIChDY1BheW1lbnRNZXRob2RzLmZpbmQoKS5jdXJzb3IuY291bnQoKSA9PSAwKSB7XG4gICAgICAgIGNvbnN0IGNjUGF5bWVudE1ldGhvZHM6IENjUGF5bWVudE1ldGhvZFtdID0gW1xuICAgICAgICAgICAgeyBfaWQ6ICcxMCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ1Zpc2EnLCBwYXl1X2NvZGU6ICdWSVNBJywgbG9nb19uYW1lOiAndmlzYScgfSxcbiAgICAgICAgICAgIHsgX2lkOiAnMjAnLCBpc19hY3RpdmU6IHRydWUsIG5hbWU6ICdNYXN0ZXJjYXJkJywgcGF5dV9jb2RlOiAnTUFTVEVSQ0FSRCcsIGxvZ29fbmFtZTogJ21hc3RlcmNhcmQnIH0sXG4gICAgICAgICAgICB7IF9pZDogJzMwJywgaXNfYWN0aXZlOiB0cnVlLCBuYW1lOiAnQW1lcmljYW4gRXhwcmVzcycsIHBheXVfY29kZTogJ0FNRVgnLCBsb2dvX25hbWU6ICdhbWV4JyB9LFxuICAgICAgICAgICAgeyBfaWQ6ICc0MCcsIGlzX2FjdGl2ZTogdHJ1ZSwgbmFtZTogJ0RpbmVycyBDbHViJywgcGF5dV9jb2RlOiAnRElORVJTJywgbG9nb19uYW1lOiAnZGluZXJzJyB9XG4gICAgICAgIF07XG4gICAgICAgIGNjUGF5bWVudE1ldGhvZHMuZm9yRWFjaCgoY2NQYXltZW50TWV0aG9kOiBDY1BheW1lbnRNZXRob2QpID0+IHsgQ2NQYXltZW50TWV0aG9kcy5pbnNlcnQoY2NQYXltZW50TWV0aG9kKSB9KTtcbiAgICB9XG59IiwiaW1wb3J0IHsgSW52b2ljZUluZm8gfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9wYXltZW50L2ludm9pY2UtaW5mby5tb2RlbCc7XG5pbXBvcnQgeyBJbnZvaWNlc0luZm8gfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL3BheW1lbnQvaW52b2ljZXMtaW5mby5jb2xsZWN0aW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRJbnZvaWNlc0luZm8oKSB7XG4gICAgaWYgKEludm9pY2VzSW5mby5maW5kKCkuY3Vyc29yLmNvdW50KCkgPT0gMCkge1xuICAgICAgICBjb25zdCBpbnZvaWNlc0luZm86IEludm9pY2VJbmZvW10gPSBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2lkOiAnMTAwJyxcbiAgICAgICAgICAgICAgICBjb3VudHJ5X2lkOiAnMTkwMCcsXG4gICAgICAgICAgICAgICAgcmVzb2x1dGlvbl9vbmU6ICczMTAwMDAwODk1MDknLFxuICAgICAgICAgICAgICAgIHByZWZpeF9vbmU6ICdJNFQnLFxuICAgICAgICAgICAgICAgIHN0YXJ0X2RhdGVfb25lOiBuZXcgRGF0ZSgnMjAxNy0wOC0zMVQwMDowMDowMC4wMFonKSxcbiAgICAgICAgICAgICAgICBlbmRfZGF0ZV9vbmU6IG5ldyBEYXRlKCcyMDE3LTEwLTMxVDAwOjAwOjAwLjAwWicpLFxuICAgICAgICAgICAgICAgIHN0YXJ0X3ZhbHVlX29uZTogNDIyMDAwLFxuICAgICAgICAgICAgICAgIGVuZF92YWx1ZV9vbmU6IDEwMDAwMDAsXG4gICAgICAgICAgICAgICAgcmVzb2x1dGlvbl90d286IG51bGwsXG4gICAgICAgICAgICAgICAgcHJlZml4X3R3bzogbnVsbCxcbiAgICAgICAgICAgICAgICBzdGFydF9kYXRlX3R3bzogbnVsbCxcbiAgICAgICAgICAgICAgICBlbmRfZGF0ZV90d286IG51bGwsXG4gICAgICAgICAgICAgICAgc3RhcnRfdmFsdWVfdHdvOiBudWxsLFxuICAgICAgICAgICAgICAgIGVuZF92YWx1ZV90d286IG51bGwsXG4gICAgICAgICAgICAgICAgZW5hYmxlX3R3bzogZmFsc2UsXG4gICAgICAgICAgICAgICAgY3VycmVudF92YWx1ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBzdGFydF9uZXdfdmFsdWU6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcblxuICAgICAgICBpbnZvaWNlc0luZm8uZm9yRWFjaCgoaW52b2ljZUluZm86IEludm9pY2VJbmZvKSA9PiBJbnZvaWNlc0luZm8uaW5zZXJ0KGludm9pY2VJbmZvKSk7XG4gICAgfVxufSIsImltcG9ydCB7IE1lbnVzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL21lbnUuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC9yb2xlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgSG91cnMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvaG91cnMuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBDdXJyZW5jaWVzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2N1cnJlbmN5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUGF5bWVudE1ldGhvZHMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvcGF5bWVudE1ldGhvZC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENvdW50cmllcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jb3VudHJ5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ2l0aWVzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2NpdHkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBMYW5ndWFnZXMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvbGFuZ3VhZ2UuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFbWFpbENvbnRlbnRzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2VtYWlsLWNvbnRlbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBQYXJhbWV0ZXJzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BhcmFtZXRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENjUGF5bWVudE1ldGhvZHMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL3BheW1lbnQvY2MtcGF5bWVudC1tZXRob2RzLmNvbGxlY3Rpb24nXG5pbXBvcnQgeyBQb2ludHMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvcG9pbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBDb29raW5nVGltZXMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY29va2luZy10aW1lLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVHlwZXNPZkZvb2QgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvdHlwZS1vZi1mb29kLmNvbGxlY3Rpb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlRml4dHVyZXMoKSB7XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIE1lbnVzIENvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBNZW51cy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIFJvbGVzIENvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBSb2xlcy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIEhvdXJzIENvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBIb3Vycy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIEN1cnJlbmNpZXMgQ29sbGVjdGlvblxuICAgICAqL1xuICAgIEN1cnJlbmNpZXMucmVtb3ZlKHt9KTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBQYXltZW50TWV0aG9kcyBDb2xsZWN0aW9uXG4gICAgICovXG4gICAgUGF5bWVudE1ldGhvZHMucmVtb3ZlKHt9KTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBDb3VudHJpZXMgQ29sbGVjdGlvblxuICAgICAqL1xuICAgIENvdW50cmllcy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIENpdGllcyBDb2xsZWN0aW9uXG4gICAgICovXG4gICAgQ2l0aWVzLnJlbW92ZSh7fSk7XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgTGFuZ3VhZ2VzIENvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBMYW5ndWFnZXMucmVtb3ZlKHt9KTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBFbWFpbENvbnRlbnRzIENvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBFbWFpbENvbnRlbnRzLnJlbW92ZSh7fSk7XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgUGFyYW1ldGVycyBDb2xsZWN0aW9uXG4gICAgICovXG4gICAgUGFyYW1ldGVycy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIENjUGF5bWVudE1ldGhvZHMgQ29sbGVjdGlvblxuICAgICAqL1xuICAgIENjUGF5bWVudE1ldGhvZHMucmVtb3ZlKHt9KTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBQb2ludHMgQ29sbGVjdGlvblxuICAgICAqL1xuICAgIFBvaW50cy5yZW1vdmUoe30pO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIENvb2tpbmdUaW1lcyBDb2xsZWN0aW9uXG4gICAgICovXG4gICAgQ29va2luZ1RpbWVzLnJlbW92ZSh7fSk7XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgVHlwZXNPZkZvb2QgQ29sbGVjdGlvblxuICAgICAqL1xuICAgIFR5cGVzT2ZGb29kLnJlbW92ZSh7fSk7XG59IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5pbXBvcnQgeyBVc2VycyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvYXV0aC91c2VyLm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWwgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcblxuXG5NZXRlb3IucHVibGlzaCgnZ2V0VXNlcnNEZXRhaWxzRm9yRXN0YWJsaXNobWVudCcsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudF93b3JrOiBzdHJpbmcpIHtcbiAgICBpZiAoX2VzdGFibGlzaG1lbnRfd29yaykge1xuICAgICAgICByZXR1cm4gVXNlckRldGFpbHMuZmluZCh7IGVzdGFibGlzaG1lbnRfd29yazogX2VzdGFibGlzaG1lbnRfd29yayB9KTtcbiAgICB9XG59KTtcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldFVzZXJzQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50X3dvcms6IHN0cmluZykge1xuICAgIGlmIChfZXN0YWJsaXNobWVudF93b3JrKSB7XG4gICAgICAgIGxldCBfbFVzZXJEZXRhaWxzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBjaGVjayhfZXN0YWJsaXNobWVudF93b3JrLCBTdHJpbmcpO1xuXG4gICAgICAgIFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZCh7IGVzdGFibGlzaG1lbnRfd29yazogX2VzdGFibGlzaG1lbnRfd29yayB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFVzZXJEZXRhaWw+KHVzZGV0LCBpbmRleCwgYXJyKSB7XG4gICAgICAgICAgICBfbFVzZXJEZXRhaWxzLnB1c2godXNkZXQudXNlcl9pZCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gVXNlcnMuZmluZCh7IF9pZDogeyAkaW46IF9sVXNlckRldGFpbHMgfSB9KTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBHZXQgdXNlcnMgd2l0aCByb2xlICcyMDAnIGJ5IGN1cnJlbnQgZXN0YWJsaXNobWVudC5cbiAqIEBwYXJhbSB7IHN0cmluZyB9IF91c3JJZFxuICovO1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFdhaXRlcnNCeUN1cnJlbnRFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF91c3JJZDogc3RyaW5nKSB7XG4gICAgbGV0IF9sVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmQoeyB1c2VyX2lkOiBfdXNySWQgfSkuZmV0Y2goKVswXTtcbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIHJldHVybiBVc2VyRGV0YWlscy5maW5kKHsgZXN0YWJsaXNobWVudF93b3JrOiBfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50LCByb2xlX2lkOiAnMjAwJyB9KTtcbiAgICB9XG59KTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFVzZXJzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC9yb2xlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgTWVudXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2F1dGgvbWVudS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9hdXRoL3VzZXIubW9kZWwnO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0TWVudXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIE1lbnVzLmZpbmQoe30sIHsgc29ydDogeyBvcmRlcjogMSB9IH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBVc2VycyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvdXNlci5tb2RlbCc7XG5pbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC9yb2xlLmNvbGxlY3Rpb24nO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0Um9sZUNvbXBsZXRlJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBSb2xlcy5maW5kKHt9KTtcbn0pO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0Um9sZUNvbGxhYm9yYXRvcnMnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFJvbGVzLmZpbmQoe19pZDogeyAkaW46IFsgXCIyMDBcIiwgXCIzMDBcIiwgXCI2MDBcIiBdIH19KTtcbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlsIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvYXV0aC91c2VyLWRldGFpbC5tb2RlbCc7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0VXNlcnNEZXRhaWxzJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBVc2VyRGV0YWlscy5maW5kKHt9KTtcbn0pO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0VXNlckRldGFpbHNCeVVzZXInLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gVXNlckRldGFpbHMuZmluZCh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG59KTtcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldFVzZXJEZXRhaWxzQnlDdXJyZW50VGFibGUnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nLCBfdGFibGVJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIFVzZXJEZXRhaWxzLmZpbmQoeyBjdXJyZW50X2VzdGFibGlzaG1lbnQ6IF9lc3RhYmxpc2htZW50SWQsIGN1cnJlbnRfdGFibGU6IF90YWJsZUlkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiB1c2VycyBieSBlc3RhYmxpc2htZW50cyBJZFxuICogQHBhcmFtIHtzdHJpbmdbXX0gX3BFc3RhYmxpc2htZW50c0lkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2Vyc0J5RXN0YWJsaXNobWVudHNJZCcsIGZ1bmN0aW9uIChfcEVzdGFibGlzaG1lbnRzSWQ6IFN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIFVzZXJEZXRhaWxzLmZpbmQoeyBjdXJyZW50X2VzdGFibGlzaG1lbnQ6IHsgJGluOiBfcEVzdGFibGlzaG1lbnRzSWQgfSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gdXNlcnMgZGV0YWlscyBieSBhZG1pbiB1c2VyXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2VyRGV0YWlsc0J5QWRtaW5Vc2VyJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgbGV0IF9sRXN0YWJsaXNobWVudHNJZDogc3RyaW5nW10gPSBbXTtcbiAgICBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFycikge1xuICAgICAgICBfbEVzdGFibGlzaG1lbnRzSWQucHVzaChlc3RhYmxpc2htZW50Ll9pZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIFVzZXJEZXRhaWxzLmZpbmQoeyBjdXJyZW50X2VzdGFibGlzaG1lbnQ6IHsgJGluOiBfbEVzdGFibGlzaG1lbnRzSWQgfSB9KTtcbn0pO1xuXG5NZXRlb3IucHVibGlzaCgnZ2V0VXNlckRldGFpbHNCeUVzdGFibGlzaG1lbnRXb3JrJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgbGV0IF9sVXNlckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmIChfbFVzZXJEZXRhaWwpIHtcbiAgICAgICAgcmV0dXJuIFVzZXJEZXRhaWxzLmZpbmQoeyBjdXJyZW50X2VzdGFibGlzaG1lbnQ6IF9sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmsgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gZXN0YWJsaXNobWVudCBjb2xsYWJvcmF0b3JzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2Vyc0NvbGxhYm9yYXRvcnNCeUVzdGFibGlzaG1lbnRzSWQnLCBmdW5jdGlvbiAoX3BFc3RhYmxpc2htZW50c0lkOiBzdHJpbmdbXSkge1xuICAgIHJldHVybiBVc2VyRGV0YWlscy5maW5kKHsgZXN0YWJsaXNobWVudF93b3JrOiB7ICRpbjogX3BFc3RhYmxpc2htZW50c0lkIH0gfSk7XG59KTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFVzZXJzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXIuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50Lm1vZGVsJztcbmltcG9ydCB7IFVzZXJEZXRhaWwgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldFVzZXJTZXR0aW5ncycsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gVXNlcnMuZmluZCh7IF9pZDogdGhpcy51c2VySWQgfSwgeyBmaWVsZHM6IHsgdXNlcm5hbWU6IDEsIFwic2VydmljZXMucHJvZmlsZS5uYW1lXCI6IDEsIFwic2VydmljZXMuZmFjZWJvb2tcIjogMSwgXCJzZXJ2aWNlcy50d2l0dGVyXCI6IDEsIFwic2VydmljZXMuZ29vZ2xlXCI6IDEgfSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaXNoLCBnZXQgYWxsIHVzZXJzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2VycycsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gVXNlcnMuZmluZCh7fSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGlzaC4gR2V0IHVzZXIgYnkgSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFVzZXJCeVVzZXJJZCcsIGZ1bmN0aW9uIChfdXNySWQ6IHN0cmluZykge1xuICAgIHJldHVybiBVc2Vycy5maW5kKHsgX2lkOiBfdXNySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIHVzZXJzIHdpdGggZXN0YWJsaXNobWVudCBhbmQgdGFibGUgSWQgY29uZGl0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IF9wRXN0YWJsaXNobWVudElkXG4gKiBAcGFyYW0ge3N0cmluZ30gX3BUYWJsZUlkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2VyQnlUYWJsZUlkJywgZnVuY3Rpb24gKF9wRXN0YWJsaXNobWVudElkOiBzdHJpbmcsIF9wVGFibGVJZCkge1xuICAgIGNoZWNrKF9wRXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIGNoZWNrKF9wVGFibGVJZCwgU3RyaW5nKTtcbiAgICBsZXQgX2xVc2Vyczogc3RyaW5nW10gPSBbXTtcbiAgICBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLmZpbmQoeyBjdXJyZW50X2VzdGFibGlzaG1lbnQ6IF9wRXN0YWJsaXNobWVudElkLCBjdXJyZW50X3RhYmxlOiBfcFRhYmxlSWQgfSkuZmV0Y2goKS5mb3JFYWNoKGZ1bmN0aW9uIDxVc2VyRGV0YWlsPih1c2VyLCBpbmRleCwgYXJyKSB7XG4gICAgICAgIF9sVXNlcnMucHVzaCh1c2VyLnVzZXJfaWQpO1xuICAgIH0pO1xuICAgIHJldHVybiBVc2Vycy5maW5kKHsgX2lkOiB7ICRpbjogX2xVc2VycyB9IH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiB1c2VycyBieSBhZG1pbiB1c2VyIElkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRVc2Vyc0J5QWRtaW5Vc2VyJywgZnVuY3Rpb24gKF9wVXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfcFVzZXJJZCwgU3RyaW5nKTtcbiAgICBsZXQgX2xFc3RhYmxpc2htZW50c0lkOiBzdHJpbmdbXSA9IFtdO1xuICAgIGxldCBfbFVzZXJzOiBzdHJpbmdbXSA9IFtdO1xuICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZCh7IGNyZWF0aW9uX3VzZXI6IF9wVXNlcklkIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFycikge1xuICAgICAgICBfbEVzdGFibGlzaG1lbnRzSWQucHVzaChlc3RhYmxpc2htZW50Ll9pZCk7XG4gICAgfSk7XG4gICAgVXNlckRldGFpbHMuY29sbGVjdGlvbi5maW5kKHsgY3VycmVudF9lc3RhYmxpc2htZW50OiB7ICRpbjogX2xFc3RhYmxpc2htZW50c0lkIH0gfSkuZmV0Y2goKS5mb3JFYWNoKGZ1bmN0aW9uIDxVc2VyRGV0YWlsPih1c2VyRGV0YWlsLCBpbmRleCwgYXJyKSB7XG4gICAgICAgIF9sVXNlcnMucHVzaCh1c2VyRGV0YWlsLnVzZXJfaWQpO1xuICAgIH0pO1xuICAgIHJldHVybiBVc2Vycy5maW5kKHsgX2lkOiB7ICRpbjogX2xVc2VycyB9IH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiB1c2VycyB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3BFc3RhYmxpc2htZW50SWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFVzZXJzQnlFc3RhYmxpc2htZW50SWQnLCBmdW5jdGlvbiAoX3BFc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9wRXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJzOiBzdHJpbmdbXSA9IFtdO1xuICAgIFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uZmluZCh7IGN1cnJlbnRfZXN0YWJsaXNobWVudDogX3BFc3RhYmxpc2htZW50SWQgfSkuZmV0Y2goKS5mb3JFYWNoKGZ1bmN0aW9uIDxVc2VyRGV0YWlsPih1c2VyLCBpbmRleCwgYXJyKSB7XG4gICAgICAgIF9sVXNlcnMucHVzaCh1c2VyLnVzZXJfaWQpO1xuICAgIH0pO1xuICAgIHJldHVybiBVc2Vycy5maW5kKHsgX2lkOiB7ICRpbjogX2xVc2VycyB9IH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cywgRXN0YWJsaXNobWVudHNQcm9maWxlIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcbmltcG9ydCB7IFVzZXJEZXRhaWwgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9hdXRoL3VzZXItZGV0YWlsLm1vZGVsJztcbmltcG9ydCB7IFBheW1lbnRzSGlzdG9yeSB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9wYXltZW50LWhpc3RvcnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50Lm1vZGVsJztcbmltcG9ydCB7IFBheW1lbnRIaXN0b3J5IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvcGF5bWVudC9wYXltZW50LWhpc3RvcnkubW9kZWwnO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBlc3RhYmxpc2htZW50cyB3aXRoIGNyZWF0aW9uIHVzZXIgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZXN0YWJsaXNobWVudHMnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gRXN0YWJsaXNobWVudHMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb25zIGVzdGFibGlzaG1lbnRCeUN1cnJlbnRVc2VyXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5cbk1ldGVvci5wdWJsaXNoKCdnZXRFc3RhYmxpc2htZW50QnlDdXJyZW50VXNlcicsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHZhciB1c2VyX2RldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmICh1c2VyX2RldGFpbCkge1xuICAgICAgICByZXR1cm4gRXN0YWJsaXNobWVudHMuZmluZCh7IF9pZDogdXNlcl9kZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb25zIGVzdGFibGlzaG1lbnRCeUVzdGFibGlzaG1lbnRXb3JrXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5cbk1ldGVvci5wdWJsaXNoKCdnZXRFc3RhYmxpc2htZW50QnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHZhciB1c2VyX2RldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmICh1c2VyX2RldGFpbCkge1xuICAgICAgICByZXR1cm4gRXN0YWJsaXNobWVudHMuZmluZCh7IF9pZDogdXNlcl9kZXRhaWwuZXN0YWJsaXNobWVudF93b3JrIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gdG8gZmluZCBjdXJyZW50IGVzdGFibGlzaG1lbnRzIHdpdGggbm8gcGF5XG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnY3VycmVudEVzdGFibGlzaG1lbnRzTm9QYXllZCcsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuXG4gICAgbGV0IGN1cnJlbnREYXRlOiBEYXRlID0gbmV3IERhdGUoKTtcbiAgICBsZXQgY3VycmVudE1vbnRoOiBzdHJpbmcgPSAoY3VycmVudERhdGUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCk7XG4gICAgbGV0IGN1cnJlbnRZZWFyOiBzdHJpbmcgPSBjdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCk7XG4gICAgbGV0IGhpc3RvcnlQYXltZW50UmVzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGxldCBlc3RhYmxpc2htZW50c0luaXRpYWw6IHN0cmluZ1tdID0gW107XG5cbiAgICBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkLCBpc0FjdGl2ZTogdHJ1ZSwgZnJlZURheXM6IGZhbHNlIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFycikge1xuICAgICAgICBlc3RhYmxpc2htZW50c0luaXRpYWwucHVzaChlc3RhYmxpc2htZW50Ll9pZCk7XG4gICAgfSk7XG5cbiAgICBQYXltZW50c0hpc3RvcnkuY29sbGVjdGlvbi5maW5kKHtcbiAgICAgICAgZXN0YWJsaXNobWVudElkczoge1xuICAgICAgICAgICAgJGluOiBlc3RhYmxpc2htZW50c0luaXRpYWxcbiAgICAgICAgfSwgbW9udGg6IGN1cnJlbnRNb250aCwgeWVhcjogY3VycmVudFllYXIsICRvcjogW3sgc3RhdHVzOiAnVFJBTlNBQ1RJT05fU1RBVFVTLkFQUFJPVkVEJyB9LCB7IHN0YXR1czogJ1RSQU5TQUNUSU9OX1NUQVRVUy5QRU5ESU5HJyB9XVxuICAgIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8UGF5bWVudEhpc3Rvcnk+KGhpc3RvcnlQYXltZW50LCBpbmRleCwgYXJyKSB7XG4gICAgICAgIGhpc3RvcnlQYXltZW50LmVzdGFibGlzaG1lbnRfaWRzLmZvckVhY2goKGVzdGFibGlzaG1lbnQpID0+IHtcbiAgICAgICAgICAgIGhpc3RvcnlQYXltZW50UmVzLnB1c2goZXN0YWJsaXNobWVudCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIEVzdGFibGlzaG1lbnRzLmZpbmQoeyBfaWQ6IHsgJG5pbjogaGlzdG9yeVBheW1lbnRSZXMgfSwgY3JlYXRpb25fdXNlcjogX3VzZXJJZCwgaXNBY3RpdmU6IHRydWUsIGZyZWVEYXlzOiBmYWxzZSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiB0byBmaW5kIGluYWN0aXZlIGVzdGFibGlzaG1lbnRzIGJ5IHVzZXJcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEluYWN0aXZlRXN0YWJsaXNobWVudHMnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gRXN0YWJsaXNobWVudHMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQsIGlzQWN0aXZlOiBmYWxzZSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gYWN0aXZlIGVzdGFibGlzaG1lbnRzIGJ5IHVzZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRBY3RpdmVFc3RhYmxpc2htZW50cycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBFc3RhYmxpc2htZW50cy5maW5kKHsgY3JlYXRpb25fdXNlcjogX3VzZXJJZCwgaXNBY3RpdmU6IHRydWUgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGVzdGFibGlzaG1lbnRzIGJ5IGlkXG4gKiBAcGFyYW0ge3N0cmluZ30gX3BJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0RXN0YWJsaXNobWVudEJ5SWQnLCBmdW5jdGlvbiAoX3BJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3BJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gRXN0YWJsaXNobWVudHMuZmluZCh7IF9pZDogX3BJZCB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gZXN0YWJsaXNobWVudCBwcm9maWxlIGJ5IGVzdGFibGlzaG1lbnQgaWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEVzdGFibGlzaG1lbnRQcm9maWxlJywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIEVzdGFibGlzaG1lbnRzUHJvZmlsZS5maW5kKHsgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gZXN0YWJsaXNobWVudHMgYnkgaWRzXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBfcElkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRFc3RhYmxpc2htZW50c0J5SWRzJywgZnVuY3Rpb24gKF9wSWRzOiBzdHJpbmdbXSkge1xuICAgIHJldHVybiBFc3RhYmxpc2htZW50cy5maW5kKHsgX2lkOiB7ICRpbjogX3BJZHMgfSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gZXN0YWJsaXNobWVudHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEVzdGFibGlzaG1lbnRzJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBFc3RhYmxpc2htZW50cy5maW5kKHt9KTtcbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuaW1wb3J0IHsgT3JkZXJIaXN0b3J5IH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvZXN0YWJsaXNobWVudC9vcmRlci1oaXN0b3J5Lm1vZGVsJztcbmltcG9ydCB7IE9yZGVySGlzdG9yaWVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBvcmRlcnMgaGlzdG9yeSBieSB1c2VyIElkXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICogQHBhcmFtIHtzdHJpbmd9IF9lc3RhYmxpc2htZW50SWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVyc0hpc3RvcnlCeVVzZXJJZCcsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcsIF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgY2hlY2soX2VzdGFibGlzaG1lbnRJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gT3JkZXJIaXN0b3JpZXMuZmluZCh7IGN1c3RvbWVyX2lkOiBfdXNlcklkLCBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBvcmRlcnMgaGlzdG9yeSBieSBlc3RhYmxpc2htZW50IElkXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0T3JkZXJIaXN0b3J5QnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIE9yZGVySGlzdG9yaWVzLmZpbmQoeyBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkIH0pXG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIG9yZGVycyBoaXN0b3J5IGJ5IGVzdGFibGlzaG1lbnQgSWRzXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBfZXN0YWJsaXNobWVudElkc1xuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0T3JkZXJIaXN0b3J5QnlFc3RhYmxpc2htZW50SWRzJywgZnVuY3Rpb24gKF9wRXN0YWJsaXNobWVudElkczogc3RyaW5nW10pIHtcbiAgICByZXR1cm4gT3JkZXJIaXN0b3JpZXMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IHsgJGluOiBfcEVzdGFibGlzaG1lbnRJZHMgfSB9KVxufSk7XG5cbiIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgT3JkZXJzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L29yZGVyLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuaW1wb3J0IHsgVGFibGUgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9lc3RhYmxpc2htZW50L3RhYmxlLm1vZGVsJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC90YWJsZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBvcmRlcnMgd2l0aCBlc3RhYmxpc2htZW50SWQgYW5kIHN0YXR1cyBjb25kaXRpb25zXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuICogQHBhcmFtIHtzdHJpbmd9IF9zdGF0dXNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVycycsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudElkOiBzdHJpbmcsIF90YWJsZVFSQ29kZTogc3RyaW5nLCBfc3RhdHVzOiBzdHJpbmdbXSkge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgY2hlY2soX3RhYmxlUVJDb2RlLCBTdHJpbmcpO1xuXG4gICAgbGV0IF9sVGFibGU6IFRhYmxlID0gVGFibGVzLmZpbmRPbmUoeyBRUl9jb2RlOiBfdGFibGVRUkNvZGUgfSk7XG4gICAgaWYgKF9sVGFibGUpIHtcbiAgICAgICAgcmV0dXJuIE9yZGVycy5maW5kKHsgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCwgdGFibGVJZDogX2xUYWJsZS5faWQsIHN0YXR1czogeyAkaW46IF9zdGF0dXMgfSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9ucyBvcmRlcnMgd2l0aCBlc3RhYmxpc2htZW50SWQgYW5kIHN0YXR1cyBjb25kaXRpb25zXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqIEBwYXJhbSB7c3RyaW5nfVxuKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRPcmRlcnNCeVRhYmxlSWQnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nLCBfdGFibGVJZCwgX3N0YXR1czogc3RyaW5nW10pIHtcbiAgICBjaGVjayhfZXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIHJldHVybiBPcmRlcnMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsIHRhYmxlSWQ6IF90YWJsZUlkLCBzdGF0dXM6IHsgJGluOiBfc3RhdHVzIH0gfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb25zIG9yZGVycyB3aXRoIHVzZXJJZCBhbmQgc3RhdHVzIGNvbmRpdGlvbnNcbiAqIEBwYXJhbSB7c3RyaW5nfVxuICogQHBhcmFtIHtzdHJpbmd9XG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVyc0J5VXNlcklkJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZywgX3N0YXR1czogc3RyaW5nW10pIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIGlmIChfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50ICE9PSAnJyAmJiBfbFVzZXJEZXRhaWwuY3VycmVudF90YWJsZSAhPT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybiBPcmRlcnMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IF9sVXNlckRldGFpbC5jdXJyZW50X2VzdGFibGlzaG1lbnQsIHRhYmxlSWQ6IF9sVXNlckRldGFpbC5jdXJyZW50X3RhYmxlLCBzdGF0dXM6IHsgJGluOiBfc3RhdHVzIH0gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIG9yZGVycyB3aXRoIGVzdGFibGlzaG1lbnRJZCBjb25kaXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBfZXN0YWJsaXNobWVudElkXG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVyc0J5RXN0YWJsaXNobWVudElkJywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZywgX3N0YXR1czogc3RyaW5nW10pIHtcbiAgICBjaGVjayhfZXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIHJldHVybiBPcmRlcnMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IF9lc3RhYmxpc2htZW50SWQsIHN0YXR1czogeyAkaW46IF9zdGF0dXMgfSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBvcmRlcnMgYnkgZXN0YWJsaXNobWVudCB3b3JrXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICogQHBhcmFtIHtzcmluZ1tdfSBfc3RhdHVzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRPcmRlcnNCeUVzdGFibGlzaG1lbnRXb3JrJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZywgX3N0YXR1czogc3RyaW5nW10pIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIHJldHVybiBPcmRlcnMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IF9sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmssIHN0YXR1czogeyAkaW46IF9zdGF0dXMgfSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9ucyByZXR1cm4gb3JkZXJzIGJ5IGlkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRPcmRlckJ5SWQnLCBmdW5jdGlvbiAoX29yZGVySWQ6IHN0cmluZykge1xuICAgIHJldHVybiBPcmRlcnMuZmluZCh7IF9pZDogX29yZGVySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb25zIG9yZGVycyB3aXRoIGVzdGFibGlzaG1lbnQgSWRzIGFuZCBzdGF0dXMgY29uZGl0aW9uc1xuICogQHBhcmFtIHtzdHJpbmdbXX0gX3BFc3RhYmxpc2htZW50SWRzXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBfc3RhdHVzXG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVyc0J5RXN0YWJsaXNobWVudElkcycsIGZ1bmN0aW9uIChfcEVzdGFibGlzaG1lbnRJZHM6IHN0cmluZ1tdLCBfc3RhdHVzOiBzdHJpbmdbXSkge1xuICAgIHJldHVybiBPcmRlcnMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IHsgJGluOiBfcEVzdGFibGlzaG1lbnRJZHMgfSwgc3RhdHVzOiB7ICRpbjogX3N0YXR1cyB9IH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBvcmRlcnMgYnkgdXNlciBhZG1pbiBlc3RhYmxpc2htZW50c1xuICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9yZGVyc0J5QWRtaW5Vc2VyJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZywgX3N0YXR1czogc3RyaW5nW10pIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbEVzdGFibGlzaG1lbnRJZDogc3RyaW5nW10gPSBbXTtcbiAgICBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8RXN0YWJsaXNobWVudD4oZXN0YWJsaXNobWVudCwgaW5kZXgsIGFycikge1xuICAgICAgICBfbEVzdGFibGlzaG1lbnRJZC5wdXNoKGVzdGFibGlzaG1lbnQuX2lkKTtcbiAgICB9KTtcbiAgICByZXR1cm4gT3JkZXJzLmZpbmQoeyBlc3RhYmxpc2htZW50X2lkOiB7ICRpbjogX2xFc3RhYmxpc2htZW50SWQgfSwgc3RhdHVzOiB7ICRpbjogX3N0YXR1cyB9IH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5pbXBvcnQgeyBSZXdhcmRQb2ludCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2VzdGFibGlzaG1lbnQvcmV3YXJkLXBvaW50Lm1vZGVsJztcbmltcG9ydCB7IFJld2FyZFBvaW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9yZXdhcmQtcG9pbnQuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiB1c2VyIHJld2FyZCBwb2ludHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcl9pZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0UmV3YXJkUG9pbnRzQnlVc2VySWQnLCBmdW5jdGlvbiAoX3VzZXJfaWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VyX2lkLCBTdHJpbmcpO1xuICAgIHJldHVybiBSZXdhcmRQb2ludHMuZmluZCh7IGlkX3VzZXI6IF91c2VyX2lkIH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBSZXdhcmRzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3Jld2FyZC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcbmltcG9ydCB7IEl0ZW1zIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L2l0ZW0uY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJld2FyZHMgd2l0aCBjcmVhdGlvbiB1c2VyIGNvbmRpdGlvblxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0UmV3YXJkcycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBSZXdhcmRzLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiByZXdhcmRzIGJ5IGVzdGFibGlzaG1lbnQgSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEVzdGFibGlzaG1lbnRSZXdhcmRzJywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIFJld2FyZHMuZmluZCh7IGVzdGFibGlzaG1lbnRzOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiB0byByZXR1cm4gdGhlIHJld2FyZHMgXG4gKi9cbk1ldGVvcltcInB1Ymxpc2hDb21wb3NpdGVcIl0oJ2dldFJld2FyZHNUb0l0ZW1zJywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG5cbiAgICBpZiAoX2VzdGFibGlzaG1lbnRJZCAhPT0gbnVsbCB8fCBfZXN0YWJsaXNobWVudElkICE9PSAnJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZmluZCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gSXRlbXMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfZXN0YWJsaXNobWVudElkXSB9IH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbe1xuICAgICAgICAgICAgICAgIGZpbmQoaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmV3YXJkcy5maW5kKHsgaXRlbV9pZDogaXRlbS5faWQgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgVGFibGVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3RhYmxlLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlsIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9tb2RlbHMvYXV0aC91c2VyLWRldGFpbC5tb2RlbCc7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHRhYmxlcyB3aXRoIHVzZXIgY3JlYXRpb24gY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgndGFibGVzJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIFRhYmxlcy5maW5kKHsgY3JlYXRpb25fdXNlcjogX3VzZXJJZCB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiB0YWJsZXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdGFibGVJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0VGFibGVCeUlkJywgZnVuY3Rpb24gKF90YWJsZUlkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdGFibGVJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gVGFibGVzLmZpbmQoeyBfaWQ6IF90YWJsZUlkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHRhYmxlIGJ5IGN1cnJlbnRfdGFibGVcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFRhYmxlQnlDdXJyZW50VGFibGUnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcblxuICAgIHZhciB1c2VyX2RldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmICh1c2VyX2RldGFpbCkge1xuICAgICAgICByZXR1cm4gVGFibGVzLmZpbmQoeyBfaWQ6IHVzZXJfZGV0YWlsLmN1cnJlbnRfdGFibGUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gYWxsIHRhYmxlc1xuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0QWxsVGFibGVzJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBUYWJsZXMuZmluZCh7fSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIHRhYmxlcyB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0VGFibGVzQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIFRhYmxlcy5maW5kKHsgZXN0YWJsaXNobWVudF9pZDogX2VzdGFibGlzaG1lbnRJZCwgaXNfYWN0aXZlOiB0cnVlIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiB0YWJsZXMgYnkgZXN0YWJsaXNobWVudCBXb3JrXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0VGFibGVzQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIHJldHVybiBUYWJsZXMuZmluZCh7IGVzdGFibGlzaG1lbnRfaWQ6IF9sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmssIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHRhYmxlcyBieSBRUiBDb2RlXG4gKiBAcGFyYW0ge3N0cmluZ30gX2xRUkNvZGVcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFRhYmxlQnlRUkNvZGUnLCBmdW5jdGlvbiAoX2xRUkNvZGU6IHN0cmluZykge1xuICAgIGNoZWNrKF9sUVJDb2RlLCBTdHJpbmcpO1xuICAgIHJldHVybiBUYWJsZXMuZmluZCh7IFFSX2NvZGU6IF9sUVJDb2RlIH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBXYWl0ZXJDYWxsRGV0YWlscyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC93YWl0ZXItY2FsbC1kZXRhaWwuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHdhaXRlciBjYWxsIGRldGFpbHMuIHVzZXJJZFxuICogQHBhcmFtIHsgc3RyaW5nIH0gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnY291bnRXYWl0ZXJDYWxsRGV0YWlsQnlVc3JJZCcsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgcmV0dXJuIFdhaXRlckNhbGxEZXRhaWxzLmZpbmQoeyB1c2VyX2lkOiBfdXNlcklkLCBzdGF0dXM6IHsgJGluOiBbXCJ3YWl0aW5nXCIsIFwiY29tcGxldGVkXCJdIH0gfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gd2FpdGVyIGNhbGwgZGV0YWlscywgZm9yIHRvIHBheW1lbnQuXG4gKiBAcGFyYW0geyBzdHJpbmcgfSBfZXN0YWJsaXNobWVudElkXG4gKiBAcGFyYW0geyBzdHJpbmcgfSBfdGFibGVJZFxuICogQHBhcmFtIHsgc3RyaW5nIH0gX3R5cGVcbiAqIEBwYXJhbSB7IHN0cmluZ1tdIH0gX3N0YXR1c1xuICovXG5NZXRlb3IucHVibGlzaCgnV2FpdGVyQ2FsbERldGFpbEZvclBheW1lbnQnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nLFxuICBfdGFibGVJZDogc3RyaW5nLFxuICBfdHlwZTogc3RyaW5nKSB7XG4gIHJldHVybiBXYWl0ZXJDYWxsRGV0YWlscy5maW5kKHtcbiAgICBlc3RhYmxpc2htZW50X2lkOiBfZXN0YWJsaXNobWVudElkLFxuICAgIHRhYmxlX2lkOiBfdGFibGVJZCxcbiAgICB0eXBlOiBfdHlwZSxcbiAgICBzdGF0dXM6IHsgJGluOiBbJ3dhaXRpbmcnLCAnY29tcGxldGVkJ10gfVxuICB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiB3YWl0ZXIgY2FsbCBkZXRhaWxzLiB1c2VySWQgKFdhaXRlciBpZClcbiAqIEBwYXJhbSB7IHN0cmluZyB9IF93YWl0ZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnd2FpdGVyQ2FsbERldGFpbEJ5V2FpdGVySWQnLCBmdW5jdGlvbiAoX3dhaXRlcklkOiBzdHJpbmcpIHtcbiAgcmV0dXJuIFdhaXRlckNhbGxEZXRhaWxzLmZpbmQoeyB3YWl0ZXJfaWQ6IF93YWl0ZXJJZCwgc3RhdHVzOiBcImNvbXBsZXRlZFwiIH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBDaXRpZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY2l0eS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIGNpdGllc1xuICovXG5NZXRlb3IucHVibGlzaCgnY2l0aWVzJywgKCkgPT4gQ2l0aWVzLmZpbmQoeyBpc19hY3RpdmU6IHRydWUgfSkpO1xuXG4vKipcbiAqIENpdHkgYnkgZXN0YWJsaXNobWVudFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0Q2l0eUJ5RXN0YWJsaXNobWVudElkJywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgbGV0IGVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5maW5kT25lKHsgX2lkOiBfZXN0YWJsaXNobWVudElkIH0pO1xuICAgIGlmIChlc3RhYmxpc2htZW50KSB7XG4gICAgICAgIHJldHVybiBDaXRpZXMuZmluZCh7IF9pZDogZXN0YWJsaXNobWVudC5jaXR5SWQgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIENpdGllcy5maW5kKHsgaXNfYWN0aXZlOiB0cnVlIH0pO1xuICAgIH1cbn0pO1xuXG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9ucyBjaXRpZXMgYnkgY291bnRyeVxuICovXG5NZXRlb3IucHVibGlzaCgnY2l0aWVzQnlDb3VudHJ5JywgZnVuY3Rpb24gKF9jb3VudHJ5SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9jb3VudHJ5SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIENpdGllcy5maW5kKHsgY291bnRyeTogX2NvdW50cnlJZCwgaXNfYWN0aXZlOiB0cnVlIH0pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBDb29raW5nVGltZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY29va2luZy10aW1lLmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBjb29raW5nIHRpbWVzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdjb29raW5nVGltZXMnLCAoKSA9PiBDb29raW5nVGltZXMuZmluZCgpKTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IENvdW50cmllcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jb3VudHJ5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVzdGFibGlzaG1lbnQgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL21vZGVscy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubW9kZWwnO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBjb3VudHJpZXNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2NvdW50cmllcycsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gQ291bnRyaWVzLmZpbmQoeyBpc19hY3RpdmU6IHRydWUgfSk7XG59KTtcblxuLyoqXG4gKiBDb3VudHJ5IGJ5IGVzdGFibGlzaG1lbnRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldENvdW50cnlCeUVzdGFibGlzaG1lbnRJZCcsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudElkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfZXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIGxldCBlc3RhYmxpc2htZW50ID0gRXN0YWJsaXNobWVudHMuZmluZE9uZSh7IF9pZDogX2VzdGFibGlzaG1lbnRJZCB9KTtcbiAgICBpZiAoZXN0YWJsaXNobWVudCkge1xuICAgICAgICByZXR1cm4gQ291bnRyaWVzLmZpbmQoeyBfaWQ6IGVzdGFibGlzaG1lbnQuY291bnRyeUlkIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBDb3VudHJpZXMuZmluZCh7IGlzX2FjdGl2ZTogdHJ1ZSB9KTs7XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBjb3VudHJpZXMgYnkgZXN0YWJsaXNobWVudHMgSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldENvdW50cmllc0J5RXN0YWJsaXNobWVudHNJZCcsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudHNJZDogc3RyaW5nW10pIHtcbiAgICBsZXQgX2lkczogc3RyaW5nW10gPSBbXTtcbiAgICBFc3RhYmxpc2htZW50cy5jb2xsZWN0aW9uLmZpbmQoeyBfaWQ6IHsgJGluOiBfZXN0YWJsaXNobWVudHNJZCB9IH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICBfaWRzLnB1c2goZXN0YWJsaXNobWVudC5jb3VudHJ5SWQpO1xuICAgIH0pO1xuICAgIHJldHVybiBDb3VudHJpZXMuZmluZCh7IF9pZDogeyAkaW46IF9pZHMgfSB9KTtcbn0pO1xuXG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2FhdGlvbiByZXR1cm4gY291bnRyaWVzIGJ5IGFkbWluIHVzZXIgSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldENvdW50cmllc0J5QWRtaW5Vc2VyJywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBfY291bnRyaWVzSWRzOiBzdHJpbmdbXSA9IFtdO1xuICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZCh7IGNyZWF0aW9uX3VzZXI6IHRoaXMudXNlcklkIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcikge1xuICAgICAgICBfY291bnRyaWVzSWRzLnB1c2goZXN0YWJsaXNobWVudC5jb3VudHJ5SWQpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIENvdW50cmllcy5maW5kKHsgX2lkOiB7ICRpbjogX2NvdW50cmllc0lkcyB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG59KTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEN1cnJlbmNpZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvY3VycmVuY3kuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5tb2RlbCc7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gY3VycmVuY2llc1xuICovXG5NZXRlb3IucHVibGlzaCgnY3VycmVuY2llcycsICgpID0+IEN1cnJlbmNpZXMuZmluZCh7IGlzQWN0aXZlOiB0cnVlIH0pKTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGN1cnJlbmNpZXMgYnkgZXN0YWJsaXNobWVudHMgSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEN1cnJlbmNpZXNCeUVzdGFibGlzaG1lbnRzSWQnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRzSWQ6IHN0cmluZ1tdKSB7XG4gICAgbGV0IF9pZHM6IHN0cmluZ1tdID0gW107XG4gICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5maW5kKHsgX2lkOiB7ICRpbjogX2VzdGFibGlzaG1lbnRzSWQgfSB9KS5mb3JFYWNoKGZ1bmN0aW9uIDxFc3RhYmxpc2htZW50Pihlc3RhYmxpc2htZW50LCBpbmRleCwgYXIpIHtcbiAgICAgICAgX2lkcy5wdXNoKGVzdGFibGlzaG1lbnQuY3VycmVuY3lJZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIEN1cnJlbmNpZXMuZmluZCh7IF9pZDogeyAkaW46IF9pZHMgfSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gY3VycmVuY2llcyBieSAgdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRDdXJyZW5jaWVzQnlVc2VySWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IF9jdXJyZW5jaWVzSWRzOiBzdHJpbmdbXSA9IFtdO1xuICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uZmluZCh7IGNyZWF0aW9uX3VzZXI6IHRoaXMudXNlcklkIH0pLmZvckVhY2goZnVuY3Rpb24gPEVzdGFibGlzaG1lbnQ+KGVzdGFibGlzaG1lbnQsIGluZGV4LCBhcmdzKSB7XG4gICAgICAgIF9jdXJyZW5jaWVzSWRzLnB1c2goZXN0YWJsaXNobWVudC5jdXJyZW5jeUlkKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBDdXJyZW5jaWVzLmZpbmQoeyBfaWQ6IHsgJGluOiBfY3VycmVuY2llc0lkcyB9IH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBjdXJyZW5jaWVzIGJ5IFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0Q3VycmVuY2llc0J5Q3VycmVudFVzZXInLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgbGV0IF91c2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG5cbiAgICBpZiAoX3VzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50ICE9ICcnKSB7XG4gICAgICAgIGxldCBlc3RhYmxpc2htZW50ID0gRXN0YWJsaXNobWVudHMuZmluZE9uZSh7IF9pZDogX3VzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50IH0pO1xuICAgICAgICByZXR1cm4gQ3VycmVuY2llcy5maW5kKHsgX2lkOiBlc3RhYmxpc2htZW50LmN1cnJlbmN5SWQgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEN1cnJlbmNpZXMuZmluZCh7IF9pZDogJzAnIH0pO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gY3VycmVuY3kgYnkgZXN0YWJsaXNobWVudCB3b3JrXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0Q3VycmVuY2llc0J5RXN0YWJsaXNobWVudFdvcmsnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgbGV0IF91c2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG4gICAgbGV0IF9jdXJyZW5jaWVzSWRzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGlmIChfdXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmsgIT0gJycpIHtcbiAgICAgICAgbGV0IGVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5maW5kT25lKHsgX2lkOiBfdXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmsgfSk7XG4gICAgICAgIHJldHVybiBDdXJyZW5jaWVzLmZpbmQoeyBfaWQ6IGVzdGFibGlzaG1lbnQuY3VycmVuY3lJZCB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gQ3VycmVuY2llcy5maW5kKHsgX2lkOiAnMCcgfSk7XG4gICAgfVxufSk7XG4iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEVtYWlsQ29udGVudHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvZW1haWwtY29udGVudC5jb2xsZWN0aW9uJztcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gRW1haWxDb250ZW50c1xuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0RW1haWxDb250ZW50cycsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gRW1haWxDb250ZW50cy5maW5kKHt9KTtcbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgSG91cnMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvaG91cnMuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIGhvdXJzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdob3VycycsICgpID0+IEhvdXJzLmZpbmQoKSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBMYW5ndWFnZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvbGFuZ3VhZ2UuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIGxhbmd1YWdlc1xuICovXG5NZXRlb3IucHVibGlzaCggJ2xhbmd1YWdlcycsICgpID0+IExhbmd1YWdlcy5maW5kKCB7IGlzX2FjdGl2ZTogdHJ1ZSB9ICkgKTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFBhcmFtZXRlcnMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvcGFyYW1ldGVyLmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBFbWFpbENvbnRlbnRzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRQYXJhbWV0ZXJzJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBQYXJhbWV0ZXJzLmZpbmQoe30pO1xufSk7IiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBjaGVjayB9IGZyb20gJ21ldGVvci9jaGVjayc7XG5pbXBvcnQgeyBQYXltZW50TWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXltZW50TWV0aG9kLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgRXN0YWJsaXNobWVudCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2VzdGFibGlzaG1lbnQvZXN0YWJsaXNobWVudC5tb2RlbCc7XG5pbXBvcnQgeyBFc3RhYmxpc2htZW50cyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9lc3RhYmxpc2htZW50LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbHMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2F1dGgvdXNlci1kZXRhaWwuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHBheW1lbnRNZXRob2RzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCAncGF5bWVudE1ldGhvZHMnLCAoKSA9PiBQYXltZW50TWV0aG9kcy5maW5kKCB7IGlzQWN0aXZlOiB0cnVlIH0gKSApO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gcGF5bWVudCBtZXRob2RzIGJ5IGN1cnJlbnQgZXN0YWJsaXNobWVudCBvZiB0aGUgdXNlclxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0UGF5bWVudE1ldGhvZHNCeVVzZXJDdXJyZW50RXN0YWJsaXNobWVudCcsIGZ1bmN0aW9uICggX3BVc2VySWQgOiBzdHJpbmcgKSB7XG4gICAgbGV0IF9sVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfcFVzZXJJZCB9KTtcbiAgICBpZihfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50KXtcbiAgICAgICAgbGV0IF9sRXN0YWJsaXNobWVudCA6IEVzdGFibGlzaG1lbnQgPSBFc3RhYmxpc2htZW50cy5maW5kT25lKHsgX2lkOiBfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50IH0pO1xuICAgICAgICByZXR1cm4gUGF5bWVudE1ldGhvZHMuZmluZCh7X2lkIDogeyRpbiA6IF9sRXN0YWJsaXNobWVudC5wYXltZW50TWV0aG9kcyB9LCBpc0FjdGl2ZTogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gUGF5bWVudE1ldGhvZHMuZmluZCh7aXNBY3RpdmU6IHRydWV9KTtcbiAgICB9XG59KTtcblxuLypcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gZXN0YWJsaXNobWVudCBwYXltZW50IG1ldGhvZHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goICdnZXRQYXltZW50TWV0aG9kc0J5RXN0YWJsaXNobWVudElkJywgZnVuY3Rpb24oIF9wRXN0YWJsaXNobWVudElkOnN0cmluZyApe1xuICAgIGNoZWNrKCBfcEVzdGFibGlzaG1lbnRJZCwgU3RyaW5nICk7XG4gICAgbGV0IF9sRXN0YWJsaXNobWVudDogRXN0YWJsaXNobWVudCA9IEVzdGFibGlzaG1lbnRzLmZpbmRPbmUoIHsgX2lkOiBfcEVzdGFibGlzaG1lbnRJZCB9ICk7XG4gICAgaWYoIF9sRXN0YWJsaXNobWVudCApe1xuICAgICAgICByZXR1cm4gUGF5bWVudE1ldGhvZHMuZmluZCggeyBfaWQ6IHsgJGluOiBfbEVzdGFibGlzaG1lbnQucGF5bWVudE1ldGhvZHMgfSAsIGlzQWN0aXZlOiB0cnVlIH0gKTsgICAgICAgIFxuICAgIH0gZWxzZXtcbiAgICAgICAgcmV0dXJuIFBheW1lbnRNZXRob2RzLmZpbmQoIHsgaXNBY3RpdmU6IHRydWUgfSApO1xuICAgIH1cbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgUG9pbnRzVmFsaWRpdHkgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvcG9pbnQtdmFsaWRpdHkuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHBvaW50cyB2YWxpZGl0eVxuICovXG5NZXRlb3IucHVibGlzaCgncG9pbnRzVmFsaWRpdHknLCAoKSA9PiBQb2ludHNWYWxpZGl0eS5maW5kKCkpOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgUG9pbnRzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL3BvaW50LmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBwb2ludHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ3BvaW50cycsICgpID0+IFBvaW50cy5maW5kKCkpOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgVHlwZXNPZkZvb2QgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvdHlwZS1vZi1mb29kLmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiB0eXBlc09mRm9vZFxuICovXG5NZXRlb3IucHVibGlzaCgndHlwZXNPZkZvb2QnLCAoKSA9PiBUeXBlc09mRm9vZC5maW5kKCkpOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgQWRkaXRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L2FkZGl0aW9uLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgSXRlbXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvaXRlbS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBhZGRpdGlvbnMgd2l0aCBjcmVhdGlvbiB1c2VyIGNvbmRpdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2FkZGl0aW9ucycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBBZGRpdGlvbnMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGFkZGl0aW9ucyB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuICovXG5NZXRlb3IucHVibGlzaCgnYWRkaXRpb25zQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIEFkZGl0aW9ucy5maW5kKHsgJ2VzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWQnOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gYWRkaXRpb25zIHdpdGggaWQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3BJZFxuICovXG5NZXRlb3IucHVibGlzaCgnYWRkaXRpb25zQnlJZCcsIGZ1bmN0aW9uICggX3BJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3BJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gQWRkaXRpb25zLmZpbmQoeyBfaWQgOiBfcElkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBhZGRpdGlvbnMgd2l0aCB1c2VySWQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnYWRkaXRpb25zQnlDdXJyZW50RXN0YWJsaXNobWVudCcsIGZ1bmN0aW9uICggX3VzZXJJZCA6IHN0cmluZyApIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiggX2xVc2VyRGV0YWlsICl7XG4gICAgICAgIHJldHVybiBBZGRpdGlvbnMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50XSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gYWRkdGlvbnMgYnkgaXRlbUlkICBjb25kaXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBfaXRlbUlkXG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ2FkZGl0aW9uc0J5SXRlbScsIGZ1bmN0aW9uIChfaXRlbUlkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfaXRlbUlkLCBTdHJpbmcpOyBcbiAgICB2YXIgaXRlbSA9IEl0ZW1zLmZpbmRPbmUoeyBfaWQ6IF9pdGVtSWQsIGFkZGl0aW9uc0lzQWNjZXB0ZWQ6IHRydWUgfSk7XG5cbiAgICBpZih0eXBlb2YgaXRlbSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGF1eCA9IEFkZGl0aW9ucy5maW5kKHsgX2lkOiB7ICRpbjogaXRlbS5hZGRpdGlvbnMgfSB9KS5mZXRjaCgpO1xuICAgICAgICByZXR1cm4gQWRkaXRpb25zLmZpbmQoeyBfaWQ6IHsgJGluOiBpdGVtLmFkZGl0aW9ucyB9IH0pO1xuICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gQWRkaXRpb25zLmZpbmQoeyBfaWQ6IHsgJGluOiBbXSB9IH0pO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBhZGRpdGlvbnMgYnkgZXN0YWJsaXNobWVudCB3b3JrXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnYWRkaXRpb25zQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiggX2xVc2VyRGV0YWlsICl7XG4gICAgICAgIHJldHVybiBBZGRpdGlvbnMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfbFVzZXJEZXRhaWwuZXN0YWJsaXNobWVudF93b3JrXSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgQ2F0ZWdvcmllcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9jYXRlZ29yeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgU2VjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvc2VjdGlvbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gY2F0ZWdvcmllcyB3aXRoIGNyZWF0aW9uIHVzZXIgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnY2F0ZWdvcmllcycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBDYXRlZ29yaWVzLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBjYXRlZ29yaWVzIHdpdGggZXN0YWJsaXNobWVudCBjb25kaXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBfZXN0YWJsaXNobWVudElkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdjYXRlZ29yaWVzQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGxldCBfc2VjdGlvbnM6IHN0cmluZ1tdID0gW107XG4gICAgY2hlY2soX2VzdGFibGlzaG1lbnRJZCwgU3RyaW5nKTtcblxuICAgIFNlY3Rpb25zLmNvbGxlY3Rpb24uZmluZCh7IGVzdGFibGlzaG1lbnRzOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFN0cmluZz4ocywgaW5kZXgsIGFycikge1xuICAgICAgICBfc2VjdGlvbnMucHVzaChzLl9pZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIENhdGVnb3JpZXMuZmluZCh7IHNlY3Rpb246IHsgJGluOiBfc2VjdGlvbnMgfSwgaXNfYWN0aXZlOiB0cnVlIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHBwdWJsaWNhdGlvbiByZXR1cm4gY2F0ZWdvcmllcyBieSBlc3RhYmxpc2htZW50IHdvcmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRDYXRlZ29yaWVzQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfc2VjdGlvbnM6IHN0cmluZ1tdID0gW107XG4gICAgbGV0IHVzZXJfZGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG4gICAgaWYgKHVzZXJfZGV0YWlsKSB7XG4gICAgICAgIFNlY3Rpb25zLmNvbGxlY3Rpb24uZmluZCh7IGVzdGFibGlzaG1lbnRzOiB7ICRpbjogW3VzZXJfZGV0YWlsLmVzdGFibGlzaG1lbnRfd29ya10gfSwgaXNfYWN0aXZlOiB0cnVlIH0pLmZldGNoKCkuZm9yRWFjaChmdW5jdGlvbiA8U3RyaW5nPihzLCBpbmRleCwgYXJyKSB7XG4gICAgICAgICAgICBfc2VjdGlvbnMucHVzaChzLl9pZCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gQ2F0ZWdvcmllcy5maW5kKHsgc2VjdGlvbjogeyAkaW46IF9zZWN0aW9ucyB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgR2FybmlzaEZvb2RDb2wgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvZ2FybmlzaC1mb29kLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgSXRlbXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvaXRlbS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBnYXJuaXNoRm9vZCB3aXRoIGNyZWF0aW9uIHVzZXIgY29uZGl0aW9uXG4gKiBAcGFyYW0ge1N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2FybmlzaEZvb2QnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gR2FybmlzaEZvb2RDb2wuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGdhcm5pc2ggZm9vZCB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2FybmlzaEZvb2RCeUVzdGFibGlzaG1lbnQnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX2VzdGFibGlzaG1lbnRJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gR2FybmlzaEZvb2RDb2wuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfZXN0YWJsaXNobWVudElkXSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGdhcm5pc2ggZm9vZCB3aXRoIF9pZFxuICogQHBhcmFtIHtzdHJpbmd9IF9wSWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dhcm5pc2hGb29kQnlJZCcsIGZ1bmN0aW9uICggX3BJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3BJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gR2FybmlzaEZvb2RDb2wuZmluZCh7IF9pZCA6IF9wSWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGdhcm5pc2ggZm9vZCBieSBpdGVtSWQgIGNvbmRpdGlvblxuICogQHBhcmFtIHtzdHJpbmd9XG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnYXJuaXNoZXNCeUl0ZW0nLCBmdW5jdGlvbiAoX2l0ZW1JZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX2l0ZW1JZCwgU3RyaW5nKTtcbiAgICB2YXIgaXRlbSA9IEl0ZW1zLmZpbmRPbmUoeyBfaWQ6IF9pdGVtSWQsIGdhcm5pc2hGb29kSXNBY2NlcGVkOiB0cnVlIH0pO1xuICAgIGlmKCBpdGVtICl7XG4gICAgICAgIHJldHVybiBHYXJuaXNoRm9vZENvbC5maW5kKHsgX2lkOiB7ICRpbjogaXRlbS5nYXJuaXNoRm9vZCB9IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gZ2FybmlzaCBmb29kIGJ5IGVzdGFibGlzaG1lbnQgd29ya1xuICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dhcm5pc2hGb29kQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfbFVzZXJEZXRhaWw6IFVzZXJEZXRhaWwgPSBVc2VyRGV0YWlscy5maW5kT25lKHsgdXNlcl9pZDogX3VzZXJJZCB9KTtcbiAgICBpZiggX2xVc2VyRGV0YWlsICl7XG4gICAgICAgIHJldHVybiBHYXJuaXNoRm9vZENvbC5maW5kKHsgJ2VzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWQnOiB7ICRpbjogW19sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmtdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBnYXJuaXNoIGZvb2Qgd2l0aCB1c2VySWQgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2FybmlzaEZvb2RCeUN1cnJlbnRFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKCBfdXNlcklkIDogc3RyaW5nICkge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgbGV0IF9sVXNlckRldGFpbDogVXNlckRldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmKCBfbFVzZXJEZXRhaWwgKXtcbiAgICAgICAgcmV0dXJuIEdhcm5pc2hGb29kQ29sLmZpbmQoeyAnZXN0YWJsaXNobWVudHMuZXN0YWJsaXNobWVudF9pZCc6IHsgJGluOiBbX2xVc2VyRGV0YWlsLmN1cnJlbnRfZXN0YWJsaXNobWVudF0gfSwgaXNfYWN0aXZlOiB0cnVlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTtcbiIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgSXRlbXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvaXRlbS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgVXNlckRldGFpbCB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvbW9kZWxzL2F1dGgvdXNlci1kZXRhaWwubW9kZWwnO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBpdGVtcyB3aXRoIGNyZWF0aW9uIHVzZXIgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnaXRlbXMnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gSXRlbXMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gYWRtaW4gYWN0aXZlIGl0ZW1zXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0QWRtaW5BY3RpdmVJdGVtcycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBJdGVtcy5maW5kKHsgY3JlYXRpb25fdXNlcjogX3VzZXJJZCwgaXNfYWN0aXZlOiB0cnVlIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBpdGVtcyB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdpdGVtc0J5RXN0YWJsaXNobWVudCcsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudElkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfZXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIHJldHVybiBJdGVtcy5maW5kKHsgJ2VzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWQnOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gaXRlbXMgd2l0aCB1c2VyIGNvbmRpdGlvblxuICovXG5NZXRlb3IucHVibGlzaCgnaXRlbXNCeVVzZXInLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICBsZXQgX2xVc2VyRGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG5cbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIGlmIChfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gSXRlbXMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfbFVzZXJEZXRhaWwuY3VycmVudF9lc3RhYmxpc2htZW50XSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBpdGVtIGJ5IGlkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdpdGVtQnlJZCcsIGZ1bmN0aW9uIChfaXRlbUlkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfaXRlbUlkLCBTdHJpbmcpO1xuICAgIHJldHVybiBJdGVtcy5maW5kKHsgX2lkOiBfaXRlbUlkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBpdGVtcyBieSBlc3RhYmxpc2htZW50IHdvcmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRJdGVtc0J5RXN0YWJsaXNobWVudFdvcmsnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICBsZXQgX2xVc2VyRGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG4gICAgbGV0IF9zZWN0aW9uczogc3RyaW5nW10gPSBbXTtcblxuICAgIGlmIChfbFVzZXJEZXRhaWwpIHtcbiAgICAgICAgaWYgKF9sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmspIHtcbiAgICAgICAgICAgIHJldHVybiBJdGVtcy5maW5kKHsgJ2VzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWQnOiB7ICRpbjogW19sVXNlckRldGFpbC5lc3RhYmxpc2htZW50X3dvcmtdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIGVzdGFibGlzaG1lbnRzIGl0ZW1zXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBfcEVzdGFibGlzaG1lbnRJZHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEl0ZW1zQnlFc3RhYmxpc2htZW50SWRzJywgZnVuY3Rpb24gKF9wRXN0YWJsaXNobWVudElkczogc3RyaW5nW10pIHtcbiAgICByZXR1cm4gSXRlbXMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IF9wRXN0YWJsaXNobWVudElkcyB9IH0pO1xufSk7XG5cblxuLyoqXG4gKiBNZWV0b3IgcHVibGljYXRpb24gcmV0dXJuIGl0ZW1zIGJ5IGVzdGFibGlzaG1lbnQgd29ya1xuICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEl0ZW1zQnlVc2VyRXN0YWJsaXNobWVudFdvcmsnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICBsZXQgX2xVc2VyRGV0YWlsOiBVc2VyRGV0YWlsID0gVXNlckRldGFpbHMuZmluZE9uZSh7IHVzZXJfaWQ6IF91c2VySWQgfSk7XG5cbiAgICBpZiAoX2xVc2VyRGV0YWlsKSB7XG4gICAgICAgIGlmIChfbFVzZXJEZXRhaWwuZXN0YWJsaXNobWVudF93b3JrKSB7XG4gICAgICAgICAgICByZXR1cm4gSXRlbXMuZmluZCh7ICdlc3RhYmxpc2htZW50cy5lc3RhYmxpc2htZW50X2lkJzogeyAkaW46IFtfbFVzZXJEZXRhaWwuZXN0YWJsaXNobWVudF93b3JrXSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm47XG4gICAgfVxufSk7XG5cblxuLyoqKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBpdGVtcyBzb3J0ZWQgYnkgaXRlbSBuYW1lXG4gKi9cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIHJldHVybiBpdGVtcyB3aXRoIGVzdGFibGlzaG1lbnQgY29uZGl0aW9uXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdpdGVtc0J5RXN0YWJsaXNobWVudFNvcnRlZEJ5TmFtZScsIGZ1bmN0aW9uIChfZXN0YWJsaXNobWVudElkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfZXN0YWJsaXNobWVudElkLCBTdHJpbmcpO1xuICAgIHJldHVybiBJdGVtcy5maW5kKHsgJ2VzdGFibGlzaG1lbnRzLmVzdGFibGlzaG1lbnRfaWQnOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9LCB7IHNvcnQ6IHsgbmFtZTogMSB9IH0pO1xufSk7XG5cbiIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgT3B0aW9uVmFsdWVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L29wdGlvbi12YWx1ZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IGNoZWNrIH0gZnJvbSAnbWV0ZW9yL2NoZWNrJztcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gb3B0aW9uIHZhbHVlcyB3aXRoIGNyZWF0aW9uIHVzZXIgY29uZGl0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gX3VzZXJJZFxuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0QWRtaW5PcHRpb25WYWx1ZXMnLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gT3B0aW9uVmFsdWVzLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIG9wdGlvbiB2YWx1ZXMgd2l0aCBvcHRpb24gaWRzIGNvbmRpdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldE9wdGlvblZhbHVlc0J5T3B0aW9uSWRzJywgZnVuY3Rpb24gKF9wT3B0aW9uSWRzOiBzdHJpbmdbXSkge1xuICAgIHJldHVybiBPcHRpb25WYWx1ZXMuZmluZCh7IG9wdGlvbl9pZDogeyAkaW46IF9wT3B0aW9uSWRzIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pO1xuIiwiaW1wb3J0IHsgTWV0ZW9yIH0gZnJvbSAnbWV0ZW9yL21ldGVvcic7XG5pbXBvcnQgeyBPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L29wdGlvbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBvcHRpb24gd2l0aCBjcmVhdGlvbiB1c2VyIGNvbmRpdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IF91c2VySWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEFkbWluT3B0aW9ucycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBPcHRpb25zLmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkIH0pO1xufSk7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIGVzdGFibGlzaG1lbnRzIG9wdGlvbnMgXG4gKiBAcGFyYW0ge3N0cmluZ30gX2VzdGFibGlzaG1lbnRJZFxuKi9cbk1ldGVvci5wdWJsaXNoKCdvcHRpb25zQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50c0lkOiBzdHJpbmdbXSkge1xuICAgIHJldHVybiBPcHRpb25zLmZpbmQoeyBlc3RhYmxpc2htZW50czogeyAkaW46IF9lc3RhYmxpc2htZW50c0lkIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgU2VjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvc2VjdGlvbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBzZWN0aW9uIHdpdGggY3JlYXRpb24gdXNlciBjb25kaXRpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdzZWN0aW9ucycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIHJldHVybiBTZWN0aW9ucy5maW5kKHsgY3JlYXRpb25fdXNlcjogX3VzZXJJZCB9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBlc3RhYmxpc2htZW50cyBzZWN0aW9ucyBcbiAqIEBwYXJhbSB7c3RyaW5nfSBfZXN0YWJsaXNobWVudElkXG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ3NlY3Rpb25zQnlFc3RhYmxpc2htZW50JywgZnVuY3Rpb24gKF9lc3RhYmxpc2htZW50SWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF9lc3RhYmxpc2htZW50SWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIFNlY3Rpb25zLmZpbmQoeyBlc3RhYmxpc2htZW50czogeyAkaW46IFtfZXN0YWJsaXNobWVudElkXSB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG59KTtcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldFNlY3Rpb25zJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBTZWN0aW9ucy5maW5kKHt9KTtcbn0pO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBlc3RhYmxpc2htZW50cyBzZWN0aW9ucyBieSBlc3RhYmxpc2htZW50IHdvcmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4qL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldFNlY3Rpb25zQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCB1c2VyX2RldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmKCB1c2VyX2RldGFpbCApe1xuICAgICAgICByZXR1cm4gU2VjdGlvbnMuZmluZCh7IGVzdGFibGlzaG1lbnRzOiB7ICRpbjogW3VzZXJfZGV0YWlsLmVzdGFibGlzaG1lbnRfd29ya10gfSwgaXNfYWN0aXZlOiB0cnVlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59KTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFN1YmNhdGVnb3JpZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL21lbnUvc3ViY2F0ZWdvcnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBTZWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9zZWN0aW9uLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ2F0ZWdvcmllcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9jYXRlZ29yeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFVzZXJEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9hdXRoL3VzZXItZGV0YWlsLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdtZXRlb3IvY2hlY2snO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBzdWJjYXRlZ29yaWVzIHdpdGggY3JlYXRpb24gdXNlciBjb25kaXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdzdWJjYXRlZ29yaWVzJywgZnVuY3Rpb24gKF91c2VySWQ6IHN0cmluZykge1xuICAgIGNoZWNrKF91c2VySWQsIFN0cmluZyk7XG4gICAgcmV0dXJuIFN1YmNhdGVnb3JpZXMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTtcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gcmV0dXJuIHN1YmNhdGVnb3JpZXMgd2l0aCBlc3RhYmxpc2htZW50IGNvbmRpdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IF9lc3RhYmxpc2htZW50SWRcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ3N1YmNhdGVnb3JpZXNCeUVzdGFibGlzaG1lbnQnLCBmdW5jdGlvbiAoX2VzdGFibGlzaG1lbnRJZDogc3RyaW5nKSB7XG4gICAgbGV0IF9zZWN0aW9uczogc3RyaW5nW10gPSBbXTtcbiAgICBsZXQgX2NhdGVnb3JpZXM6IHN0cmluZ1tdID0gW107XG4gICAgY2hlY2soX2VzdGFibGlzaG1lbnRJZCwgU3RyaW5nKTtcblxuICAgIFNlY3Rpb25zLmNvbGxlY3Rpb24uZmluZCh7IGVzdGFibGlzaG1lbnRzOiB7ICRpbjogW19lc3RhYmxpc2htZW50SWRdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFN0cmluZz4ocywgaW5kZXgsIGFycikge1xuICAgICAgICBfc2VjdGlvbnMucHVzaChzLl9pZCk7XG4gICAgfSk7XG4gICAgQ2F0ZWdvcmllcy5jb2xsZWN0aW9uLmZpbmQoeyBzZWN0aW9uOiB7ICRpbjogX3NlY3Rpb25zIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFN0cmluZz4oYywgaW5kZXgsIGFycikge1xuICAgICAgICBfY2F0ZWdvcmllcy5wdXNoKGMuX2lkKTtcbiAgICB9KTtcbiAgICByZXR1cm4gU3ViY2F0ZWdvcmllcy5maW5kKHsgY2F0ZWdvcnk6IHsgJGluOiBfY2F0ZWdvcmllcyB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG59KTtcblxuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiByZXR1cm4gc3ViY2F0ZWdvcmllcyBieSBlc3RhYmxpc2htZW50IHdvcmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBfdXNlcklkXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRTdWJjYXRlZ29yaWVzQnlFc3RhYmxpc2htZW50V29yaycsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICBjaGVjayhfdXNlcklkLCBTdHJpbmcpO1xuICAgIGxldCBfc2VjdGlvbnM6IHN0cmluZ1tdID0gW107XG4gICAgbGV0IF9jYXRlZ29yaWVzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGxldCB1c2VyX2RldGFpbCA9IFVzZXJEZXRhaWxzLmZpbmRPbmUoeyB1c2VyX2lkOiBfdXNlcklkIH0pO1xuICAgIGlmICh1c2VyX2RldGFpbCkge1xuICAgICAgICBTZWN0aW9ucy5jb2xsZWN0aW9uLmZpbmQoeyBlc3RhYmxpc2htZW50czogeyAkaW46IFt1c2VyX2RldGFpbC5lc3RhYmxpc2htZW50X3dvcmtdIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFN0cmluZz4ocywgaW5kZXgsIGFycikge1xuICAgICAgICAgICAgX3NlY3Rpb25zLnB1c2gocy5faWQpO1xuICAgICAgICB9KTtcbiAgICAgICAgQ2F0ZWdvcmllcy5jb2xsZWN0aW9uLmZpbmQoeyBzZWN0aW9uOiB7ICRpbjogX3NlY3Rpb25zIH0sIGlzX2FjdGl2ZTogdHJ1ZSB9KS5mZXRjaCgpLmZvckVhY2goZnVuY3Rpb24gPFN0cmluZz4oYywgaW5kZXgsIGFycikge1xuICAgICAgICAgICAgX2NhdGVnb3JpZXMucHVzaChjLl9pZCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gU3ViY2F0ZWdvcmllcy5maW5kKHsgY2F0ZWdvcnk6IHsgJGluOiBfY2F0ZWdvcmllcyB9LCBpc19hY3RpdmU6IHRydWUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgQ2NQYXltZW50TWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9jYy1wYXltZW50LW1ldGhvZHMuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIEVtYWlsQ29udGVudHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldENjUGF5bWVudE1ldGhvZHMnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIENjUGF5bWVudE1ldGhvZHMuZmluZCh7IGlzX2FjdGl2ZTogdHJ1ZSB9KTtcbn0pOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgSW52b2ljZXNJbmZvIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9wYXltZW50L2ludm9pY2VzLWluZm8uY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIEludm9pY2VzSW5mb1xuICovXG5NZXRlb3IucHVibGlzaCgnZ2V0SW52b2ljZXNJbmZvQnlDb3VudHJ5JywgZnVuY3Rpb24gKGNvdW50cnlJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIEludm9pY2VzSW5mby5maW5kKHsgY291bnRyeV9pZDogY291bnRyeUlkIH0pO1xufSk7XG4iLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IEl1cmVzdEludm9pY2VzIH0gZnJvbSAnLi4vLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9wYXltZW50L2l1cmVzdC1pbnZvaWNlcy5jb2xsZWN0aW9uJztcblxuLyoqXG4gKiBNZXRlb3IgcHVibGljYXRpb24gSW52b2ljZXNJbmZvXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRBbGxJdXJlc3RJbnZvaWNlcycsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gSXVyZXN0SW52b2ljZXMuZmluZCh7fSk7XG59KTtcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldEl1cmVzdEludm9pY2VCeVVzZXInLCBmdW5jdGlvbiAoX3VzZXJJZDogc3RyaW5nKSB7XG4gICAgY2hlY2soX3VzZXJJZCwgU3RyaW5nKTtcbiAgICByZXR1cm4gSXVyZXN0SW52b2ljZXMuZmluZCh7IGNyZWF0aW9uX3VzZXI6IF91c2VySWQgfSk7XG59KTsiLCJpbXBvcnQgeyBNZXRlb3IgfSBmcm9tICdtZXRlb3IvbWV0ZW9yJztcbmltcG9ydCB7IFBheW1lbnRzSGlzdG9yeSB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9wYXltZW50LWhpc3RvcnkuY29sbGVjdGlvbic7XG5cbi8qKlxuICogTWV0ZW9yIHB1YmxpY2F0aW9uIEVtYWlsQ29udGVudHNcbiAqL1xuTWV0ZW9yLnB1Ymxpc2goJ2dldEhpc3RvcnlQYXltZW50c0J5VXNlcicsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gUGF5bWVudHNIaXN0b3J5LmZpbmQoeyBjcmVhdGlvbl91c2VyOiBfdXNlcklkLCBpc0luaXRpYWw6IGZhbHNlIH0sIHsgc29ydDogeyBjcmVhdGlvbl9kYXRlOiAtMSB9IH0pO1xufSk7ICIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuaW1wb3J0IHsgUGF5bWVudFRyYW5zYWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9wYXltZW50LXRyYW5zYWN0aW9uLmNvbGxlY3Rpb24nO1xuXG4vKipcbiAqIE1ldGVvciBwdWJsaWNhdGlvbiBFbWFpbENvbnRlbnRzXG4gKi9cbk1ldGVvci5wdWJsaXNoKCdnZXRUcmFuc2FjdGlvbnMnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFBheW1lbnRUcmFuc2FjdGlvbnMuZmluZCh7fSk7XG59KTtcblxuTWV0ZW9yLnB1Ymxpc2goJ2dldFRyYW5zYWN0aW9uc0J5VXNlcicsIGZ1bmN0aW9uIChfdXNlcklkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gUGF5bWVudFRyYW5zYWN0aW9ucy5maW5kKHsgY3JlYXRpb25fdXNlcjogX3VzZXJJZCB9KTtcbn0pOyIsImltcG9ydCB7IEVzdGFibGlzaG1lbnRzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBVc2VyRGV0YWlscyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvYXV0aC91c2VyLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFNlY3Rpb25zIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L3NlY3Rpb24uY29sbGVjdGlvbic7XG5pbXBvcnQgeyBDYXRlZ29yaWVzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L2NhdGVnb3J5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgU3ViY2F0ZWdvcmllcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9zdWJjYXRlZ29yeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEFkZGl0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9hZGRpdGlvbi5jb2xsZWN0aW9uJztcbmltcG9ydCB7IEl0ZW1zIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9tZW51L2l0ZW0uY29sbGVjdGlvbic7XG5pbXBvcnQgeyBHYXJuaXNoRm9vZENvbCB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvbWVudS9nYXJuaXNoLWZvb2QuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBQYXltZW50TWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9wYXltZW50TWV0aG9kLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUGF5bWVudHNIaXN0b3J5IH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9wYXltZW50L3BheW1lbnQtaGlzdG9yeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IE9yZGVycyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC9vcmRlci5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFRhYmxlcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZXN0YWJsaXNobWVudC90YWJsZS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IFdhaXRlckNhbGxEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9lc3RhYmxpc2htZW50L3dhaXRlci1jYWxsLWRldGFpbC5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENjUGF5bWVudE1ldGhvZHMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL3BheW1lbnQvY2MtcGF5bWVudC1tZXRob2RzLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgUGF5bWVudFRyYW5zYWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvcGF5bWVudC9wYXltZW50LXRyYW5zYWN0aW9uLmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgT3JkZXJIaXN0b3JpZXMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2VzdGFibGlzaG1lbnQvb3JkZXItaGlzdG9yeS5jb2xsZWN0aW9uJztcbmltcG9ydCB7IENpdGllcyB9IGZyb20gJy4uLy4uLy4uL2JvdGgvY29sbGVjdGlvbnMvZ2VuZXJhbC9jaXR5LmNvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi4vLi4vLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2NvdW50cnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBMYW5ndWFnZXMgfSBmcm9tICcuLi8uLi8uLi9ib3RoL2NvbGxlY3Rpb25zL2dlbmVyYWwvbGFuZ3VhZ2UuY29sbGVjdGlvbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVkYmluZGV4ZXMoKXtcblxuICAgIC8vIEVzdGFibGlzaG1lbnQgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgY3JlYXRpb25fdXNlcjogMSB9ICk7XG4gICAgRXN0YWJsaXNobWVudHMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgbmFtZTogMSB9ICk7ICAgIFxuICAgIEVzdGFibGlzaG1lbnRzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGlzQWN0aXZlOiAxIH0gKTsgICAgXG5cbiAgICAvLyBVc2VyIENvbGxlY3Rpb25zIEluZGV4ZXNcbiAgICBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyB1c2VyX2lkOiAxIH0gKTtcbiAgICBVc2VyRGV0YWlscy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBlc3RhYmxpc2htZW50X3dvcms6IDEgfSApO1xuICAgIFVzZXJEZXRhaWxzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGN1cnJlbnRfZXN0YWJsaXNobWVudDogMSwgY3VycmVudF90YWJsZTogMSB9ICk7ICAgIFxuXG4gICAgLy8gU2VjdGlvbiBDb2xsZWN0aW9uIEluZGV4ZXNcbiAgICBTZWN0aW9ucy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjcmVhdGlvbl91c2VyOiAxIH0gKTtcbiAgICBTZWN0aW9ucy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBlc3RhYmxpc2htZW50czogMSB9ICk7ICAgIFxuXG4gICAgLy8gQ2F0ZWdvcnkgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgQ2F0ZWdvcmllcy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjcmVhdGlvbl91c2VyOiAxIH0gKTtcbiAgICBDYXRlZ29yaWVzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IHNlY3Rpb246IDEgfSApOyAgICBcblxuICAgIC8vIFN1YmNhdGVnb3J5IENvbGxlY3Rpb24gSW5kZXhlc1xuICAgIFN1YmNhdGVnb3JpZXMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgY3JlYXRpb25fdXNlcjogMSB9ICk7XG4gICAgU3ViY2F0ZWdvcmllcy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjYXRlZ29yeTogMSB9ICk7XG5cbiAgICAvLyBBZGRpdGlvbiBDb2xsZWN0aW9uIEluZGV4ZXNcbiAgICBBZGRpdGlvbnMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgY3JlYXRpb25fdXNlcjogMSB9ICk7XG4gICAgQWRkaXRpb25zLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGVzdGFibGlzaG1lbnRzOiAxIH0gKTsgICAgXG5cbiAgICAvLyBJdGVtIENvbGxlY3Rpb24gSW5kZXhlc1xuICAgIEl0ZW1zLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGFkZGl0aW9uc0lzQWNjZXB0ZWQ6IDEgfSApO1xuICAgIEl0ZW1zLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGdhcm5pc2hGb29kSXNBY2NlcGVkOiAxIH0gKTtcbiAgICBJdGVtcy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjcmVhdGlvbl91c2VyOiAxIH0gKTtcbiAgICBJdGVtcy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBzZWN0aW9uSWQ6IDEgfSApO1xuICAgIEl0ZW1zLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGVzdGFibGlzaG1lbnRzOiAxIH0gKTtcblxuICAgIC8vIEdhcm5pc2hGb29kIENvbGxlY3Rpb24gSW5kZXhlc1xuICAgIEdhcm5pc2hGb29kQ29sLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGNyZWF0aW9uX3VzZXI6IDEgfSApO1xuICAgIEdhcm5pc2hGb29kQ29sLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGVzdGFibGlzaG1lbnRzOiAxIH0gKTtcblxuICAgIC8vIFBheW1lbnRNZXRob2QgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgUGF5bWVudE1ldGhvZHMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgaXNBY3RpdmU6IDEgfSApOyAgIFxuICAgIFxuICAgIC8vIFBheW1lbnRzSGlzdG9yeSBDb2xsZWN0aW9uIEluZGV4ZXNcbiAgICBQYXltZW50c0hpc3RvcnkuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgZXN0YWJsaXNobWVudF9pZHM6IDEgfSApO1xuICAgIFBheW1lbnRzSGlzdG9yeS5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjcmVhdGlvbl91c2VyOiAxIH0gKTtcbiAgICBQYXltZW50c0hpc3RvcnkuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgY3JlYXRpb25fZGF0ZTogMSB9ICk7XG5cbiAgICAvLyBUYWJsZXMgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgVGFibGVzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IFFSX2NvZGU6IDEgfSApO1xuICAgIFRhYmxlcy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBlc3RhYmxpc2htZW50X2lkOiAxIH0gKTsgICAgXG5cbiAgICAvLyBPcmRlcnMgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgT3JkZXJzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGVzdGFibGlzaG1lbnRfaWQ6IDEgfSApO1xuICAgIE9yZGVycy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyB0YWJsZUlkOiAxIH0gKTtcbiAgICBPcmRlcnMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgc3RhdHVzOiAxIH0gKTtcbiAgICBPcmRlcnMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgYWNjb3VudElkOiAxIH0gKTtcbiAgICBcbiAgICAvLyBXYWl0ZXJDYWxsRGV0YWlscyBDb2xsZWN0aW9uIEluZGV4ZXNcbiAgICBXYWl0ZXJDYWxsRGV0YWlscy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBzdGF0dXM6IDEgfSApO1xuICAgIFdhaXRlckNhbGxEZXRhaWxzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IHVzZXJfaWQ6IDEgfSApO1xuICAgIFdhaXRlckNhbGxEZXRhaWxzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGVzdGFibGlzaG1lbnRfaWQ6IDEsIHRhYmxlX2lkOiAxLCB0eXBlOiAxIH0gKTsgICAgXG5cbiAgICAvLyBDY1BheW1lbnRNZXRob2RzIENvbGxlY3Rpb24gSW5kZXhlc1xuICAgIENjUGF5bWVudE1ldGhvZHMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgaXNfYWN0aXZlOiAxIH0gKTtcblxuICAgIC8vIFBheW1lbnRUcmFuc2FjdGlvbnMgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgUGF5bWVudFRyYW5zYWN0aW9ucy5jb2xsZWN0aW9uLl9lbnN1cmVJbmRleCggeyBjcmVhdGlvbl91c2VyOiAxIH0gKTtcblxuICAgIC8vIE9yZGVySGlzdG9yaWVzIENvbGxlY3Rpb24gSW5kZXhlc1xuICAgIE9yZGVySGlzdG9yaWVzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGN1c3RvbWVyX2lkOiAxLCBlc3RhYmxpc2htZW50X2lkOiAxIH0gKTtcblxuICAgIC8vIENpdGllcyBDb2xsZWN0aW9uIEluZGV4ZXNcbiAgICBDaXRpZXMuY29sbGVjdGlvbi5fZW5zdXJlSW5kZXgoIHsgY291bnRyeTogMSB9ICk7XG4gICAgQ2l0aWVzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGlzX2FjdGl2ZTogMSB9ICk7XG5cbiAgICAvLyBDb3VudHJpZXMgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgQ291bnRyaWVzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGlzX2FjdGl2ZTogMSB9ICk7XG5cbiAgICAvLyBMYW5ndWFnZXMgQ29sbGVjdGlvbiBJbmRleGVzXG4gICAgTGFuZ3VhZ2VzLmNvbGxlY3Rpb24uX2Vuc3VyZUluZGV4KCB7IGlzX2FjdGl2ZTogMSB9ICk7XG59IiwiaW1wb3J0IHsgU3luY2VkQ3JvbiB9IGZyb20gJ21ldGVvci9wZXJjb2xhdGU6c3luY2VkLWNyb24nO1xuU3luY2VkQ3Jvbi5jb25maWcoe1xuICAgIC8vIExvZyBqb2IgcnVuIGRldGFpbHMgdG8gY29uc29sZVxuICAgIGxvZzogdHJ1ZSxcblxuICAgIC8vIFVzZSBhIGN1c3RvbSBsb2dnZXIgZnVuY3Rpb24gKGRlZmF1bHRzIHRvIE1ldGVvcidzIGxvZ2dpbmcgcGFja2FnZSlcbiAgICBsb2dnZXI6IG51bGwsXG5cbiAgICAvLyBOYW1lIG9mIGNvbGxlY3Rpb24gdG8gdXNlIGZvciBzeW5jaHJvbmlzYXRpb24gYW5kIGxvZ2dpbmdcbiAgICBjb2xsZWN0aW9uTmFtZTogJ2Nyb25faGlzdG9yeScsXG5cbiAgICAvLyBEZWZhdWx0IHRvIHVzaW5nIGxvY2FsVGltZVxuICAgIHV0YzogZmFsc2UsXG5cbiAgICAvKlxuICAgICAgVFRMIGluIHNlY29uZHMgZm9yIGhpc3RvcnkgcmVjb3JkcyBpbiBjb2xsZWN0aW9uIHRvIGV4cGlyZVxuICAgICAgTk9URTogVW5zZXQgdG8gcmVtb3ZlIGV4cGlyeSBidXQgZW5zdXJlIHlvdSByZW1vdmUgdGhlIGluZGV4IGZyb21cbiAgICAgIG1vbmdvIGJ5IGhhbmRcblxuICAgICAgQUxTTzogU3luY2VkQ3JvbiBjYW4ndCB1c2UgdGhlIGBfZW5zdXJlSW5kZXhgIGNvbW1hbmQgdG8gbW9kaWZ5XG4gICAgICB0aGUgVFRMIGluZGV4LiBUaGUgYmVzdCB3YXkgdG8gbW9kaWZ5IHRoZSBkZWZhdWx0IHZhbHVlIG9mXG4gICAgICBgY29sbGVjdGlvblRUTGAgaXMgdG8gcmVtb3ZlIHRoZSBpbmRleCBieSBoYW5kIChpbiB0aGUgbW9uZ28gc2hlbGxcbiAgICAgIHJ1biBgZGIuY3Jvbkhpc3RvcnkuZHJvcEluZGV4KHtzdGFydGVkQXQ6IDF9KWApIGFuZCByZS1ydW4geW91clxuICAgICAgcHJvamVjdC4gU3luY2VkQ3JvbiB3aWxsIHJlY3JlYXRlIHRoZSBpbmRleCB3aXRoIHRoZSB1cGRhdGVkIFRUTC5cbiAgICAqL1xuICAgIGNvbGxlY3Rpb25UVEw6IDE3MjgwMFxufSk7IiwiaW1wb3J0IHsgU3luY2VkQ3JvbiB9IGZyb20gJ21ldGVvci9wZXJjb2xhdGU6c3luY2VkLWNyb24nO1xuaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi4vYm90aC9jb2xsZWN0aW9ucy9nZW5lcmFsL2NvdW50cnkuY29sbGVjdGlvbic7XG5pbXBvcnQgeyBFbWFpbCB9IGZyb20gJ21ldGVvci9lbWFpbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDcm9ucygpIHtcbiAgbGV0IGFjdGl2ZUNvdW50cmllcyA9IENvdW50cmllcy5jb2xsZWN0aW9uLmZpbmQoeyBpc19hY3RpdmU6IHRydWUgfSkuZmV0Y2goKTtcbiAgYWN0aXZlQ291bnRyaWVzLmZvckVhY2goY291bnRyeSA9PiB7XG4gICAgLyoqXG4gICAgKiBUaGlzIGNyb24gZXZhbHVhdGVzIHRoZSBmcmVlRGF5cyBmbGFnIG9uIGVzdGFibGlzaG1lbnRzIHdpdGggdmFsdWUgdHJ1ZSwgYW5kIGNoYW5nZSBpdCB0byBmYWxzZVxuICAgICovXG4gICAvKipcbiAgICBTeW5jZWRDcm9uLmFkZCh7XG4gICAgICBuYW1lOiAnY3JvbkNoYW5nZUZyZWVEYXlzLicgKyBjb3VudHJ5Lm5hbWUsXG4gICAgICBzY2hlZHVsZTogZnVuY3Rpb24gKHBhcnNlcikge1xuICAgICAgICByZXR1cm4gcGFyc2VyLmNyb24oY291bnRyeS5jcm9uQ2hhbmdlRnJlZURheXMpO1xuICAgICAgfSxcbiAgICAgIGpvYjogZnVuY3Rpb24gKCkge1xuICAgICAgICBNZXRlb3IuY2FsbCgnY2hhbmdlRnJlZURheXNUb0ZhbHNlJywgY291bnRyeS5faWQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBUaGlzIGNyb24gc2VuZHMgZW1haWwgdG8gd2FybiB0aGUgY2hhcmdlIHNvb24gb2YgaXVyZXN0IHNlcnZpY2VcbiAgICAqL1xuICAgLyoqXG4gICAgU3luY2VkQ3Jvbi5hZGQoe1xuICAgICAgbmFtZTogJ2Nyb25FbWFpbENoYXJnZVNvb24uJyArIGNvdW50cnkubmFtZSxcbiAgICAgIHNjaGVkdWxlOiBmdW5jdGlvbiAocGFyc2VyKSB7XG4gICAgICAgIHJldHVybiBwYXJzZXIuY3Jvbihjb3VudHJ5LmNyb25FbWFpbENoYXJnZVNvb24pO1xuICAgICAgfSxcbiAgICAgIGpvYjogZnVuY3Rpb24gKCkge1xuICAgICAgICBNZXRlb3IuY2FsbCgnc2VuZEVtYWlsQ2hhcmdlU29vbicsIGNvdW50cnkuX2lkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICogVGhpcyBjcm9uIHNlbmRzIGVtYWlsIHRvIHdhcm4gdGhlIGV4cGlyZSBzb29uIHRoZSBpdXJlc3Qgc2VydmljZVxuICAgICovXG4gICAvKipcbiAgICBTeW5jZWRDcm9uLmFkZCh7XG4gICAgICBuYW1lOiAnY3JvbkVtYWlsRXhwaXJlU29vbi4nICsgY291bnRyeS5uYW1lLFxuICAgICAgc2NoZWR1bGU6IGZ1bmN0aW9uIChwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlci5jcm9uKGNvdW50cnkuY3JvbkVtYWlsRXhwaXJlU29vbik7XG4gICAgICB9LFxuICAgICAgam9iOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIE1ldGVvci5jYWxsKCdzZW5kRW1haWxFeHBpcmVTb29uJywgY291bnRyeS5faWQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgICAqL1xuXG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGNyb24gZXZhbHVhdGVzIHRoZSBpc0FjdGl2ZSBmbGFnIG9uIGVzdGFibGlzaG1lbnRzIHdpdGggdmFsdWUgdHJ1ZSwgYW5kIGluc2VydCB0aGVtIG9uIGhpc3RvcnlfcGF5bWVudCBjb2xsZWN0aW9uXG4gICAgICovXG4gICAgLyoqXG4gICAgU3luY2VkQ3Jvbi5hZGQoe1xuICAgICAgbmFtZTogJ2Nyb25WYWxpZGF0ZUFjdGl2ZS4nICsgY291bnRyeS5uYW1lLFxuICAgICAgc2NoZWR1bGU6IGZ1bmN0aW9uIChwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlci5jcm9uKGNvdW50cnkuY3JvblZhbGlkYXRlQWN0aXZlKTtcbiAgICAgIH0sXG4gICAgICBqb2I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgTWV0ZW9yLmNhbGwoJ3ZhbGlkYXRlQWN0aXZlRXN0YWJsaXNobWVudHMnLCBjb3VudHJ5Ll9pZCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgICovXG5cblxuICAgIC8qKlxuICAgICogVGhpcyBjcm9uIHNlbmRzIGFuIGVtYWlsIHRvIHdhcm4gdGhhdCB0aGUgc2VydmljZSBoYXMgZXhwaXJlZFxuICAgICovXG4gICAvKipcbiAgICBTeW5jZWRDcm9uLmFkZCh7XG4gICAgICBuYW1lOiAnY3JvbkVtYWlsUmVzdEV4cGlyZWQuJyArIGNvdW50cnkubmFtZSxcbiAgICAgIHNjaGVkdWxlOiBmdW5jdGlvbiAocGFyc2VyKSB7XG4gICAgICAgIHJldHVybiBwYXJzZXIuY3Jvbihjb3VudHJ5LmNyb25FbWFpbFJlc3RFeHBpcmVkKTtcbiAgICAgIH0sXG4gICAgICBqb2I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgTWV0ZW9yLmNhbGwoJ3NlbmRFbWFpbFJlc3RFeHBpcmVkJywgY291bnRyeS5faWQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgICAqL1xuICAgIFxuICAgIC8qKlxuICAgICogVGhpcyBjcm9uIHZhbGlkYXRlIHRoZSBwb2ludHMgZXhwaXJhdGlvbiBkYXRlXG4gICAgKi9cbiAgICBTeW5jZWRDcm9uLmFkZCh7XG4gICAgICBuYW1lOiAnY3JvblBvaW50c0V4cGlyZS4nICsgY291bnRyeS5uYW1lLFxuICAgICAgc2NoZWR1bGU6IGZ1bmN0aW9uIChwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlci5jcm9uKGNvdW50cnkuY3JvblBvaW50c0V4cGlyZSk7XG4gICAgICB9LFxuICAgICAgam9iOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIE1ldGVvci5jYWxsKCdjaGVja1BvaW50c1RvRXhwaXJlJywgY291bnRyeS5faWQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cblxuU3luY2VkQ3Jvbi5zdGFydCgpOyIsImltcG9ydCB7IE1ldGVvciB9IGZyb20gJ21ldGVvci9tZXRlb3InO1xuXG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvbWVudS9zZWN0aW9ucyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvbWVudS9jYXRlZ29yaWVzJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L3N1YmNhdGVnb3JpZXMnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvYWRkaXRpb25zJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L2dhcm5pc2gtZm9vZCc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvbWVudS9pdGVtJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9tZW51L29wdGlvbnMnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL21lbnUvb3B0aW9uLXZhbHVlcyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC91c2Vycyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC9yb2xlcyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC9tZW51cyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvYXV0aC9jb2xsYWJvcmF0b3JzJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9hdXRoL3VzZXItZGV0YWlscyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9ob3VyJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL2N1cnJlbmN5JztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL3BheW1lbnRNZXRob2QnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvZW1haWwtY29udGVudCc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9wYXJhbWV0ZXInO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvY2l0aWVzJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL2NvdW50cmllcyc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvZ2VuZXJhbC9sYW5ndWFnZXMnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvcG9pbnQnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2dlbmVyYWwvY29va2luZy10aW1lJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL3BvaW50LXZhbGlkaXR5JztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9nZW5lcmFsL3R5cGUtb2YtZm9vZCc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvcGF5bWVudC9wYXltZW50LWhpc3RvcnknO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL3BheW1lbnQvY2MtcGF5bWVudC1tZXRob2QnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL3BheW1lbnQvcGF5bWVudC10cmFuc2FjdGlvbic7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvcGF5bWVudC9pbnZvaWNlLWluZm8nO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL3BheW1lbnQvaXVyZXN0LWludm9pY2VzJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2VzdGFibGlzaG1lbnQvdGFibGUnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2VzdGFibGlzaG1lbnQvb3JkZXInO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2VzdGFibGlzaG1lbnQvd2FpdGVyLWNhbGwnO1xuaW1wb3J0ICcuL2ltcG9ydHMvcHVibGljYXRpb25zL2VzdGFibGlzaG1lbnQvcmV3YXJkJztcbmltcG9ydCAnLi9pbXBvcnRzL3B1YmxpY2F0aW9ucy9lc3RhYmxpc2htZW50L3Jld2FyZC1wb2ludCc7XG5pbXBvcnQgJy4vaW1wb3J0cy9wdWJsaWNhdGlvbnMvZXN0YWJsaXNobWVudC9vcmRlci1oaXN0b3J5JztcblxuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvbWVudS9pdGVtLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvYXV0aC9jb2xsYWJvcmF0b3JzLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvYXV0aC9tZW51Lm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvYXV0aC91c2VyLWRldGFpbC5tZXRob2RzJztcbmltcG9ydCAnLi4vYm90aC9tZXRob2RzL2F1dGgvdXNlci1kZXZpY2VzLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvYXV0aC91c2VyLWxvZ2luLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvYXV0aC91c2VyLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvZ2VuZXJhbC9jcm9uLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvZ2VuZXJhbC9lbWFpbC5tZXRob2RzJztcbmltcG9ydCAnLi4vYm90aC9tZXRob2RzL2dlbmVyYWwvcGFyYW1ldGVyLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvZ2VuZXJhbC9jaGFuZ2UtZW1haWwubWV0aG9kcyc7XG5pbXBvcnQgJy4uL2JvdGgvbWV0aG9kcy9nZW5lcmFsL2NvdW50cnkubWV0aG9kcyc7XG5pbXBvcnQgJy4uL2JvdGgvbWV0aG9kcy9nZW5lcmFsL2l1cmVzdC1pbnZvaWNlLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvZ2VuZXJhbC9wdXNoLW5vdGlmaWNhdGlvbnMubWV0aG9kcyc7XG5pbXBvcnQgJy4uL2JvdGgvbWV0aG9kcy9lc3RhYmxpc2htZW50L2VzdGFibGlzaG1lbnQubWV0aG9kcyc7XG5pbXBvcnQgJy4uL2JvdGgvbWV0aG9kcy9lc3RhYmxpc2htZW50L29yZGVyLWhpc3RvcnkubWV0aG9kcyc7XG5pbXBvcnQgJy4uL2JvdGgvbWV0aG9kcy9lc3RhYmxpc2htZW50L29yZGVyLm1ldGhvZHMnO1xuaW1wb3J0ICcuLi9ib3RoL21ldGhvZHMvZXN0YWJsaXNobWVudC9zY2hlZHVsZS5tZXRob2RzJztcbmltcG9ydCAnLi4vYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvdGFibGUubWV0aG9kJztcbmltcG9ydCAnLi4vYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvd2FpdGVyLXF1ZXVlL3dhaXRlci1xdWV1ZS5tZXRob2RzJztcbmltcG9ydCAnLi4vYm90aC9tZXRob2RzL2VzdGFibGlzaG1lbnQvd2FpdGVyLXF1ZXVlL3F1ZXVlcy5tZXRob2RzJztcblxuaW1wb3J0ICcuL2ltcG9ydHMvZml4dHVyZXMvYXV0aC9hY2NvdW50LWNyZWF0aW9uJztcbmltcG9ydCAnLi9pbXBvcnRzL2ZpeHR1cmVzL2F1dGgvZW1haWwtY29uZmlnJztcbmltcG9ydCB7IHJlbW92ZUZpeHR1cmVzIH0gZnJvbSAnLi9pbXBvcnRzL2ZpeHR1cmVzL3JlbW92ZS1maXh0dXJlcyc7XG5pbXBvcnQgeyBsb2FkUm9sZXMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvYXV0aC9yb2xlcyc7XG5pbXBvcnQgeyBsb2FkTWVudXMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvYXV0aC9tZW51cyc7XG5pbXBvcnQgeyBsb2FkSG91cnMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9ob3Vycyc7XG5pbXBvcnQgeyBsb2FkQ3VycmVuY2llcyB9IGZyb20gJy4vaW1wb3J0cy9maXh0dXJlcy9nZW5lcmFsL2N1cnJlbmNpZXMnO1xuaW1wb3J0IHsgbG9hZFBheW1lbnRNZXRob2RzIH0gZnJvbSAnLi9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvcGF5bWVudE1ldGhvZHMnO1xuaW1wb3J0IHsgbG9hZENvdW50cmllcyB9IGZyb20gJy4vaW1wb3J0cy9maXh0dXJlcy9nZW5lcmFsL2NvdW50cmllcyc7XG5pbXBvcnQgeyBsb2FkQ2l0aWVzIH0gZnJvbSAnLi9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvY2l0aWVzJztcbmltcG9ydCB7IGxvYWRMYW5ndWFnZXMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9sYW5ndWFnZXMnO1xuaW1wb3J0IHsgbG9hZEVtYWlsQ29udGVudHMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9lbWFpbC1jb250ZW50cyc7XG5pbXBvcnQgeyBsb2FkUGFyYW1ldGVycyB9IGZyb20gJy4vaW1wb3J0cy9maXh0dXJlcy9nZW5lcmFsL3BhcmFtZXRlcnMnO1xuaW1wb3J0IHsgbG9hZENjUGF5bWVudE1ldGhvZHMgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvcGF5bWVudHMvY2MtcGF5bWVudC1tZXRob2RzJztcbmltcG9ydCB7IGxvYWRJbnZvaWNlc0luZm8gfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvcGF5bWVudHMvaW52b2ljZXMtaW5mbyc7XG5pbXBvcnQgeyBsb2FkUG9pbnRzIH0gZnJvbSAnLi9pbXBvcnRzL2ZpeHR1cmVzL2dlbmVyYWwvcG9pbnQnO1xuaW1wb3J0IHsgbG9hZENvb2tpbmdUaW1lcyB9IGZyb20gJy4vaW1wb3J0cy9maXh0dXJlcy9nZW5lcmFsL2Nvb2tpbmctdGltZSc7XG5pbXBvcnQgeyBsb2FkUG9pbnRzVmFsaWRpdHkgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC9wb2ludC12YWxpZGl0eSc7XG5pbXBvcnQgeyBsb2FkVHlwZXNPZkZvb2QgfSBmcm9tICcuL2ltcG9ydHMvZml4dHVyZXMvZ2VuZXJhbC90eXBlLW9mLWZvb2QnO1xuaW1wb3J0IHsgY3JlYXRlZGJpbmRleGVzIH0gZnJvbSAnLi9pbXBvcnRzL2luZGV4ZXMvaW5kZXhkYic7XG5pbXBvcnQgeyBjcmVhdGVDcm9ucyB9IGZyb20gJy4vY3Jvbic7XG5cbk1ldGVvci5zdGFydHVwKCgpID0+IHtcbiAgICByZW1vdmVGaXh0dXJlcygpO1xuICAgIGxvYWRNZW51cygpO1xuICAgIGxvYWRSb2xlcygpO1xuICAgIGxvYWRIb3VycygpO1xuICAgIGxvYWRDdXJyZW5jaWVzKCk7XG4gICAgbG9hZFBheW1lbnRNZXRob2RzKCk7XG4gICAgbG9hZENvdW50cmllcygpO1xuICAgIGxvYWRDaXRpZXMoKTtcbiAgICBsb2FkTGFuZ3VhZ2VzKCk7XG4gICAgY3JlYXRlZGJpbmRleGVzKCk7XG4gICAgbG9hZEVtYWlsQ29udGVudHMoKTtcbiAgICBsb2FkUGFyYW1ldGVycygpO1xuICAgIGxvYWRDY1BheW1lbnRNZXRob2RzKCk7XG4gICAgbG9hZEludm9pY2VzSW5mbygpO1xuICAgIGxvYWRQb2ludHMoKTtcbiAgICBsb2FkQ29va2luZ1RpbWVzKCk7XG4gICAgbG9hZFBvaW50c1ZhbGlkaXR5KCk7XG4gICAgbG9hZFR5cGVzT2ZGb29kKCk7XG4gICAgY3JlYXRlQ3JvbnMoKTtcbn0pO1xuIl19
